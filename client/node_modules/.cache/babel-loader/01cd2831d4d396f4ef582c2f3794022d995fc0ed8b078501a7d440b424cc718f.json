{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\Spotify-Weather\\\\client\\\\src\\\\components\\\\Tracks.jsx\";\nimport SpotifySong from \"./SpotifySong\";\nimport YoutubeSong from \"./YoutubeSong\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tracks = ({\n  spotifySelectedPlaylist,\n  youtubeSelectedPlaylist,\n  youtubePlaylistTracks,\n  youtubeChooseTrack,\n  spotifyPlaylistTracks,\n  spotifyChooseTrack,\n  setIsSpotifySong\n}) => {\n  console.log(spotifySelectedPlaylist);\n  const youtubeApiKey = \"AIzaSyCr8ZkvKo6zU5EmLhoYKdRy2FNhoVKTc8s\";\n  const youtubeClientID = \"668638981834-1etije5ntgs90rgqca8vois8ac5drdgc.apps.googleusercontent.com\";\n  const youtubeClientSecret = \"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\";\n  if (spotifySelectedPlaylist == null && youtubeSelectedPlaylist == null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracks\",\n      children: /*#__PURE__*/_jsxDEV(YoutubeAuth, {\n        clientId: youtubeClientID,\n        clientSecret: youtubeClientSecret\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, this);\n  } else if (spotifySelectedPlaylist == null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracks\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlistHeaders-youtube\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textTransform: \"uppercase\"\n          },\n          children: youtubeSelectedPlaylist.playlistTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tracks-content\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: youtubePlaylistTracks.map(youtubePlaylistTrack => {\n            return /*#__PURE__*/_jsxDEV(YoutubeSong, {\n              youtubeChooseTrack: youtubeChooseTrack,\n              track: youtubePlaylistTrack,\n              setIsSpotifySong: setIsSpotifySong\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this);\n  } else if (youtubeSelectedPlaylist == null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracks\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlistHeaders-spotify\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textTransform: \"uppercase\"\n          },\n          children: spotifySelectedPlaylist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tracks-content\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: spotifyPlaylistTracks.map(playlistTrack => {\n            const track = playlistTrack.track;\n            return /*#__PURE__*/_jsxDEV(SpotifySong, {\n              spotifyChooseTrack: spotifyChooseTrack,\n              track: track,\n              setIsSpotifySong: setIsSpotifySong\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracks\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlistHeaders-spotify\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textTransform: \"uppercase\"\n          },\n          children: spotifySelectedPlaylist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tracks-content\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: spotifyPlaylistTracks.map(playlistTrack => {\n            const track = playlistTrack.track;\n            return /*#__PURE__*/_jsxDEV(SpotifySong, {\n              spotifyChooseTrack: spotifyChooseTrack,\n              track: track,\n              setIsSpotifySong: setIsSpotifySong\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlistHeaders-youtube\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textTransform: \"uppercase\"\n          },\n          children: youtubeSelectedPlaylist.playlistTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tracks-content\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: youtubePlaylistTracks.map(youtubePlaylistTrack => {\n            return /*#__PURE__*/_jsxDEV(YoutubeSong, {\n              youtubeChooseTrack: youtubeChooseTrack,\n              track: youtubePlaylistTrack,\n              setIsSpotifySong: setIsSpotifySong\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this);\n  }\n};\n_c = Tracks;\nexport default Tracks;\nvar _c;\n$RefreshReg$(_c, \"Tracks\");","map":{"version":3,"names":["SpotifySong","YoutubeSong","jsxDEV","_jsxDEV","Tracks","spotifySelectedPlaylist","youtubeSelectedPlaylist","youtubePlaylistTracks","youtubeChooseTrack","spotifyPlaylistTracks","spotifyChooseTrack","setIsSpotifySong","console","log","youtubeApiKey","youtubeClientID","youtubeClientSecret","className","children","YoutubeAuth","clientId","clientSecret","fileName","_jsxFileName","lineNumber","columnNumber","style","textTransform","playlistTitle","map","youtubePlaylistTrack","track","name","playlistTrack","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/Spotify-Weather/client/src/components/Tracks.jsx"],"sourcesContent":["import SpotifySong from \"./SpotifySong\";\r\nimport YoutubeSong from \"./YoutubeSong\";\r\nconst Tracks = ({ spotifySelectedPlaylist, youtubeSelectedPlaylist, youtubePlaylistTracks, youtubeChooseTrack, spotifyPlaylistTracks, spotifyChooseTrack, setIsSpotifySong }) => {\r\n\tconsole.log(spotifySelectedPlaylist);\r\n\tconst youtubeApiKey = \"AIzaSyCr8ZkvKo6zU5EmLhoYKdRy2FNhoVKTc8s\";\r\n\tconst youtubeClientID = \"668638981834-1etije5ntgs90rgqca8vois8ac5drdgc.apps.googleusercontent.com\";\r\n\tconst youtubeClientSecret = \"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\";\r\n\tif (spotifySelectedPlaylist == null && youtubeSelectedPlaylist == null) {\r\n\t\treturn (\r\n\t\t\t<div className=\"tracks\">\r\n\t\t\t\t<YoutubeAuth clientId={youtubeClientID} clientSecret={youtubeClientSecret} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else if (spotifySelectedPlaylist == null) {\r\n\t\treturn (\r\n\t\t\t<div className=\"tracks\">\r\n\t\t\t\t<div className=\"playlistHeaders-youtube\">\r\n\t\t\t\t\t<h3 style={{ textTransform: \"uppercase\" }}>{youtubeSelectedPlaylist.playlistTitle}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"tracks-content\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{youtubePlaylistTracks.map((youtubePlaylistTrack) => {\r\n\t\t\t\t\t\t\treturn <YoutubeSong youtubeChooseTrack={youtubeChooseTrack} track={youtubePlaylistTrack} setIsSpotifySong={setIsSpotifySong} />;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else if (youtubeSelectedPlaylist == null) {\r\n\t\treturn (\r\n\t\t\t<div className=\"tracks\">\r\n\t\t\t\t<div className=\"playlistHeaders-spotify\">\r\n\t\t\t\t\t<h3 style={{ textTransform: \"uppercase\" }}>{spotifySelectedPlaylist.name}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"tracks-content\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{spotifyPlaylistTracks.map((playlistTrack) => {\r\n\t\t\t\t\t\t\tconst track = playlistTrack.track;\r\n\t\t\t\t\t\t\treturn <SpotifySong spotifyChooseTrack={spotifyChooseTrack} track={track} setIsSpotifySong={setIsSpotifySong} />;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className=\"tracks\">\r\n\t\t\t\t<div className=\"playlistHeaders-spotify\">\r\n\t\t\t\t\t<h3 style={{ textTransform: \"uppercase\" }}>{spotifySelectedPlaylist.name}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"tracks-content\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{spotifyPlaylistTracks.map((playlistTrack) => {\r\n\t\t\t\t\t\t\tconst track = playlistTrack.track;\r\n\t\t\t\t\t\t\treturn <SpotifySong spotifyChooseTrack={spotifyChooseTrack} track={track} setIsSpotifySong={setIsSpotifySong} />;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"playlistHeaders-youtube\">\r\n\t\t\t\t\t<h3 style={{ textTransform: \"uppercase\" }}>{youtubeSelectedPlaylist.playlistTitle}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"tracks-content\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{youtubePlaylistTracks.map((youtubePlaylistTrack) => {\r\n\t\t\t\t\t\t\treturn <YoutubeSong youtubeChooseTrack={youtubeChooseTrack} track={youtubePlaylistTrack} setIsSpotifySong={setIsSpotifySong} />;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Tracks;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}