{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\Spotify-Weather\\\\client\\\\src\\\\components\\\\Player.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player({\n  accessToken,\n  trackUri,\n  playlistUri\n}) {\n  _s();\n  const [play, setPlay] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  useEffect(() => {\n    setPlay(true);\n  }, [currentIndex]);\n  const handlePlaybackState = state => {\n    if (!state.isPlaying) {\n      setPlay(false);\n    }\n  };\n  const handleNextTrack = () => {\n    const nextIndex = currentIndex + 1;\n    if (nextIndex < playlistUri.length) {\n      setCurrentIndex(nextIndex);\n    }\n  };\n  const handlePreviousTrack = () => {\n    const previousIndex = currentIndex - 1;\n    if (previousIndex >= 0) {\n      setCurrentIndex(previousIndex);\n    }\n  };\n  if (!accessToken) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n    styles: {\n      activeColor: \"#fff\",\n      bgColor: \"#242424\",\n      color: \"#fff\",\n      loaderColor: \"#fff\",\n      sliderColor: \"#1cb954\",\n      trackArtistColor: \"#ccc\",\n      trackNameColor: \"#fff\"\n    },\n    token: accessToken,\n    showSaveIcon: true,\n    callback: handlePlaybackState,\n    play: play,\n    uris: playlistUri,\n    offset: currentIndex,\n    playOptions: {\n      skipToNext: handleNextTrack,\n      skipToPrevious: handlePreviousTrack\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n}\n_s(Player, \"ZaYp9DzGXhm72W4CqvgadgCsV/Q=\");\n_c = Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["useState","useEffect","SpotifyPlayer","jsxDEV","_jsxDEV","Player","accessToken","trackUri","playlistUri","_s","play","setPlay","currentIndex","setCurrentIndex","handlePlaybackState","state","isPlaying","handleNextTrack","nextIndex","length","handlePreviousTrack","previousIndex","styles","activeColor","bgColor","color","loaderColor","sliderColor","trackArtistColor","trackNameColor","token","showSaveIcon","callback","uris","offset","playOptions","skipToNext","skipToPrevious","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/Spotify-Weather/client/src/components/Player.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\n\nexport default function Player({ accessToken, trackUri, playlistUri }) {\n\tconst [play, setPlay] = useState(false);\n\tconst [currentIndex, setCurrentIndex] = useState(0);\n\n\tuseEffect(() => {\n\t\tsetPlay(true);\n\t}, [currentIndex]);\n\n\tconst handlePlaybackState = (state) => {\n\t\tif (!state.isPlaying) {\n\t\t\tsetPlay(false);\n\t\t}\n\t};\n\n\tconst handleNextTrack = () => {\n\t\tconst nextIndex = currentIndex + 1;\n\t\tif (nextIndex < playlistUri.length) {\n\t\t\tsetCurrentIndex(nextIndex);\n\t\t}\n\t};\n\n\tconst handlePreviousTrack = () => {\n\t\tconst previousIndex = currentIndex - 1;\n\t\tif (previousIndex >= 0) {\n\t\t\tsetCurrentIndex(previousIndex);\n\t\t}\n\t};\n\n\tif (!accessToken) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<SpotifyPlayer\n\t\t\tstyles={{\n\t\t\t\tactiveColor: \"#fff\",\n\t\t\t\tbgColor: \"#242424\",\n\t\t\t\tcolor: \"#fff\",\n\t\t\t\tloaderColor: \"#fff\",\n\t\t\t\tsliderColor: \"#1cb954\",\n\t\t\t\ttrackArtistColor: \"#ccc\",\n\t\t\t\ttrackNameColor: \"#fff\",\n\t\t\t}}\n\t\t\ttoken={accessToken}\n\t\t\tshowSaveIcon\n\t\t\tcallback={handlePlaybackState}\n\t\t\tplay={play}\n\t\t\turis={playlistUri}\n\t\t\toffset={currentIndex}\n\t\t\tplayOptions={{\n\t\t\t\tskipToNext: handleNextTrack,\n\t\t\t\tskipToPrevious: handlePreviousTrack,\n\t\t\t}}\n\t\t/>\n\t);\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,eAAe,SAASC,MAAMA,CAAC;EAAEC,WAAW;EAAEC,QAAQ;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACtE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACfU,OAAO,CAAC,IAAI,CAAC;EACd,CAAC,EAAE,CAACC,YAAY,CAAC,CAAC;EAElB,MAAME,mBAAmB,GAAIC,KAAK,IAAK;IACtC,IAAI,CAACA,KAAK,CAACC,SAAS,EAAE;MACrBL,OAAO,CAAC,KAAK,CAAC;IACf;EACD,CAAC;EAED,MAAMM,eAAe,GAAGA,CAAA,KAAM;IAC7B,MAAMC,SAAS,GAAGN,YAAY,GAAG,CAAC;IAClC,IAAIM,SAAS,GAAGV,WAAW,CAACW,MAAM,EAAE;MACnCN,eAAe,CAACK,SAAS,CAAC;IAC3B;EACD,CAAC;EAED,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IACjC,MAAMC,aAAa,GAAGT,YAAY,GAAG,CAAC;IACtC,IAAIS,aAAa,IAAI,CAAC,EAAE;MACvBR,eAAe,CAACQ,aAAa,CAAC;IAC/B;EACD,CAAC;EAED,IAAI,CAACf,WAAW,EAAE;IACjB,OAAO,IAAI;EACZ;EAEA,oBACCF,OAAA,CAACF,aAAa;IACboB,MAAM,EAAE;MACPC,WAAW,EAAE,MAAM;MACnBC,OAAO,EAAE,SAAS;MAClBC,KAAK,EAAE,MAAM;MACbC,WAAW,EAAE,MAAM;MACnBC,WAAW,EAAE,SAAS;MACtBC,gBAAgB,EAAE,MAAM;MACxBC,cAAc,EAAE;IACjB,CAAE;IACFC,KAAK,EAAExB,WAAY;IACnByB,YAAY;IACZC,QAAQ,EAAElB,mBAAoB;IAC9BJ,IAAI,EAAEA,IAAK;IACXuB,IAAI,EAAEzB,WAAY;IAClB0B,MAAM,EAAEtB,YAAa;IACrBuB,WAAW,EAAE;MACZC,UAAU,EAAEnB,eAAe;MAC3BoB,cAAc,EAAEjB;IACjB;EAAE;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEJ;AAAChC,EAAA,CAvDuBJ,MAAM;AAAAqC,EAAA,GAANrC,MAAM;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}