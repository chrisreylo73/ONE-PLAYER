{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\spotify-clone-main\\\\client\\\\src\\\\components\\\\SpotifyPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpotifyPlayer = ({\n  accessToken,\n  currentTrack,\n  trackUri\n}) => {\n  _s();\n  const [player, setPlayer] = useState(null);\n  const [is_paused, setPaused] = useState(false);\n  useEffect(() => {\n    // Load the Spotify Web Playback SDK script\n    const script = document.createElement(\"script\");\n    script.src = \"https://sdk.scdn.co/spotify-player.js\";\n    script.async = true;\n    document.body.appendChild(script);\n\n    // Initialize the Spotify Web Playback SDK\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      const player = new window.Spotify.Player({\n        name: \"React Spotify Player\",\n        getOAuthToken: cb => {\n          cb(accessToken);\n        }\n      });\n\n      // Save the player instance to the state\n      setPlayer(player);\n\n      // Connect to the player\n      player.connect().then(success => {\n        if (success) {\n          console.log(\"Connected to Spotify player!\");\n        }\n      });\n    };\n\n    // Cleanup on component unmount\n    return () => {\n      if (player !== null) {\n        player.disconnect();\n      }\n    };\n  }, [accessToken]);\n  useEffect(() => {\n    if (player !== null && trackUri) {\n      // Play a new track\n      player.resume();\n      player.addListener(\"ready\", ({\n        device_id\n      }) => {\n        player._options.id = device_id;\n        player._options.getOAuthToken(access_token => {\n          fetch(`https://api.spotify.com/v1/me/player/play?device_id=${device_id}`, {\n            method: \"PUT\",\n            body: JSON.stringify({\n              uris: [trackUri]\n            }),\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${access_token}`\n            }\n          });\n        });\n      });\n    }\n  }, [player, trackUri]);\n  if (currentTrack != null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"spotify-player\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"now-playing__side\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"now-playing__name\",\n            children: currentTrack.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"now-playing__artist\",\n            children: currentTrack.artists[0].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-spotify\",\n            onClick: () => {\n              player.previousTrack();\n            },\n            children: \"<<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-spotify\",\n            onClick: () => {\n              player.togglePlay();\n            },\n            children: is_paused ? \"PLAY\" : \"PAUSE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-spotify\",\n            onClick: () => {\n              player.nextTrack();\n            },\n            children: \">>\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this);\n  }\n};\n_s(SpotifyPlayer, \"RR5HYsXPlL/WMXVWLz2W9YU5MCc=\");\n_c = SpotifyPlayer;\nexport default SpotifyPlayer;\nvar _c;\n$RefreshReg$(_c, \"SpotifyPlayer\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","SpotifyPlayer","accessToken","currentTrack","trackUri","_s","player","setPlayer","is_paused","setPaused","script","document","createElement","src","async","body","appendChild","window","onSpotifyWebPlaybackSDKReady","Spotify","Player","name","getOAuthToken","cb","connect","then","success","console","log","disconnect","resume","addListener","device_id","_options","id","access_token","fetch","method","JSON","stringify","uris","headers","Authorization","children","className","fileName","_jsxFileName","lineNumber","columnNumber","artists","onClick","previousTrack","togglePlay","nextTrack","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/spotify-clone-main/client/src/components/SpotifyPlayer.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst SpotifyPlayer = ({ accessToken, currentTrack, trackUri }) => {\r\n\tconst [player, setPlayer] = useState(null);\r\n\tconst [is_paused, setPaused] = useState(false);\r\n\tuseEffect(() => {\r\n\t\t// Load the Spotify Web Playback SDK script\r\n\t\tconst script = document.createElement(\"script\");\r\n\t\tscript.src = \"https://sdk.scdn.co/spotify-player.js\";\r\n\t\tscript.async = true;\r\n\t\tdocument.body.appendChild(script);\r\n\r\n\t\t// Initialize the Spotify Web Playback SDK\r\n\t\twindow.onSpotifyWebPlaybackSDKReady = () => {\r\n\t\t\tconst player = new window.Spotify.Player({\r\n\t\t\t\tname: \"React Spotify Player\",\r\n\t\t\t\tgetOAuthToken: (cb) => {\r\n\t\t\t\t\tcb(accessToken);\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// Save the player instance to the state\r\n\t\t\tsetPlayer(player);\r\n\r\n\t\t\t// Connect to the player\r\n\t\t\tplayer.connect().then((success) => {\r\n\t\t\t\tif (success) {\r\n\t\t\t\t\tconsole.log(\"Connected to Spotify player!\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t// Cleanup on component unmount\r\n\t\treturn () => {\r\n\t\t\tif (player !== null) {\r\n\t\t\t\tplayer.disconnect();\r\n\t\t\t}\r\n\t\t};\r\n\t}, [accessToken]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (player !== null && trackUri) {\r\n\t\t\t// Play a new track\r\n\t\t\tplayer.resume();\r\n\t\t\tplayer.addListener(\"ready\", ({ device_id }) => {\r\n\t\t\t\tplayer._options.id = device_id;\r\n\t\t\t\tplayer._options.getOAuthToken((access_token) => {\r\n\t\t\t\t\tfetch(`https://api.spotify.com/v1/me/player/play?device_id=${device_id}`, {\r\n\t\t\t\t\t\tmethod: \"PUT\",\r\n\t\t\t\t\t\tbody: JSON.stringify({ uris: [trackUri] }),\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\t\t\tAuthorization: `Bearer ${access_token}`,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}, [player, trackUri]);\r\n\tif (currentTrack != null) {\r\n\t\treturn (\r\n\t\t\t<div id=\"spotify-player\">\r\n\t\t\t\t<div className=\"main-wrapper\">\r\n\t\t\t\t\t{/* <img src={currentTrack.album.images[0].uri} className=\"now-playing__cover\" alt=\"\" /> */}\r\n\r\n\t\t\t\t\t<div className=\"now-playing__side\">\r\n\t\t\t\t\t\t<div className=\"now-playing__name\">{currentTrack.name}</div>\r\n\t\t\t\t\t\t<div className=\"now-playing__artist\">{currentTrack.artists[0].name}</div>\r\n\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"btn-spotify\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tplayer.previousTrack();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t&lt;&lt;\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"btn-spotify\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tplayer.togglePlay();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{is_paused ? \"PLAY\" : \"PAUSE\"}\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"btn-spotify\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tplayer.nextTrack();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t&gt;&gt;\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default SpotifyPlayer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}