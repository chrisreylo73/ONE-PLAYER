{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\spotify-clone-main\\\\client\\\\src\\\\components\\\\DropdownMenu.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Playlist from './Playlist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropdownMenu = _ref => {\n  _s();\n  let {\n    playlists,\n    handlePlaylistSelect,\n    token,\n    logout,\n    handleButtonClick\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spotify\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dropdown-toggle\",\n        onClick: toggleDropdown,\n        children: \"Spotify Playlists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 10\n      }, this), !token ? /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"login\",\n        onClick: handleButtonClick,\n        children: \"Login to Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"logout\",\n        onClick: logout,\n        children: \" Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spotify-playlists\",\n      children: playlists.map(playlist => /*#__PURE__*/_jsxDEV(Playlist, {\n        title: playlist.name,\n        onClick: () => handlePlaylistSelect(playlist)\n      }, playlist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(DropdownMenu, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = DropdownMenu;\nexport default DropdownMenu;\nvar _c;\n$RefreshReg$(_c, \"DropdownMenu\");","map":{"version":3,"names":["React","useState","Playlist","jsxDEV","_jsxDEV","DropdownMenu","_ref","_s","playlists","handlePlaylistSelect","token","logout","handleButtonClick","isOpen","setIsOpen","toggleDropdown","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","map","playlist","title","name","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/spotify-clone-main/client/src/components/DropdownMenu.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Playlist from './Playlist';\r\n\r\nconst DropdownMenu = ({ playlists, handlePlaylistSelect, token, logout, handleButtonClick }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <div className=\"spotify\">\r\n         <button className=\"dropdown-toggle\" onClick={toggleDropdown}>\r\n           Spotify Playlists\r\n         </button>\r\n         {!token ?  <button id='login' onClick={handleButtonClick}>Login to Spotify</button>\r\n             : <button id='logout' onClick={logout}> Logout</button>\r\n         }\r\n      </div>\r\n      {isOpen && (\r\n        <div className='spotify-playlists'>\r\n          {playlists.map(playlist => (\r\n            <Playlist\r\n              key={playlist.id}\r\n              title={playlist.name}\r\n              onClick={() => handlePlaylistSelect(playlist)}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropdownMenu;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,YAAY,GAAGC,IAAA,IAA2E;EAAAC,EAAA;EAAA,IAA1E;IAAEC,SAAS;IAAEC,oBAAoB;IAAEC,KAAK;IAAEC,MAAM;IAAEC;EAAkB,CAAC,GAAAN,IAAA;EACzF,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMc,cAAc,GAAGA,CAAA,KAAM;IAC3BD,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,oBACET,OAAA;IAAKY,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBb,OAAA;MAAKY,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACrBb,OAAA;QAAQY,SAAS,EAAC,iBAAiB;QAACE,OAAO,EAAEH,cAAe;QAAAE,QAAA,EAAC;MAE7D;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACR,CAACZ,KAAK,gBAAIN,OAAA;QAAQmB,EAAE,EAAC,OAAO;QAACL,OAAO,EAAEN,iBAAkB;QAAAK,QAAA,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAC7ElB,OAAA;QAAQmB,EAAE,EAAC,QAAQ;QAACL,OAAO,EAAEP,MAAO;QAAAM,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEzD,CAAC,EACLT,MAAM,iBACLT,OAAA;MAAKY,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAC/BT,SAAS,CAACgB,GAAG,CAACC,QAAQ,iBACrBrB,OAAA,CAACF,QAAQ;QAEPwB,KAAK,EAAED,QAAQ,CAACE,IAAK;QACrBT,OAAO,EAAEA,CAAA,KAAMT,oBAAoB,CAACgB,QAAQ;MAAE,GAFzCA,QAAQ,CAACF,EAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGjB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CA9BIF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAgClB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}