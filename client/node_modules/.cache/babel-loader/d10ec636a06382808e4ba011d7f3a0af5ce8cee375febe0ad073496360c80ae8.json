{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n\n// const YouTubeAuth = ({ clientId, clientSecret }) => {\n// \tconst [isSignedIn, setIsSignedIn] = useState(false);\n// \tconst [playlists, setPlaylists] = useState([]);\n\n// \tconst authenticate = () => {\n// \t\t// Redirect to Google's OAuth2 consent screen\n// \t\tconst authUrl = `https://accounts.google.com/o/oauth2/auth?client_id=${clientId}&redirect_uri=${encodeURIComponent(window.location.origin + \"/callback\")}&response_type=code&scope=https://www.googleapis.com/auth/youtube.readonly`;\n\n// \t\twindow.location.href = authUrl;\n// \t};\n\n// \tconst getPlaylists = async (accessToken) => {\n// \t\ttry {\n// \t\t\tconst response = await fetch(\"https://www.googleapis.com/youtube/v3/playlists\", {\n// \t\t\t\theaders: {\n// \t\t\t\t\tAuthorization: `Bearer ${accessToken}`,\n// \t\t\t\t},\n// \t\t\t});\n\n// \t\t\tif (response.ok) {\n// \t\t\t\tconst data = await response.json();\n// \t\t\t\tsetPlaylists(data.items);\n// \t\t\t} else {\n// \t\t\t\tconsole.error(\"Failed to fetch playlists:\", response.status, response.statusText);\n// \t\t\t}\n// \t\t} catch (error) {\n// \t\t\tconsole.error(\"Error fetching data:\", error);\n// \t\t}\n// \t};\n\n// \tuseEffect(() => {\n// \t\t// Get the access token from the URL after successful authentication\n// \t\tconst urlParams = new URLSearchParams(window.location.search);\n// \t\tconst code = urlParams.get(\"code\");\n\n// \t\tif (code) {\n// \t\t\t// Exchange the code for an access token\n// \t\t\tconst formData = new URLSearchParams();\n// \t\t\tformData.append(\"client_id\", clientId);\n// \t\t\tformData.append(\"client_secret\", clientSecret);\n// \t\t\tformData.append(\"code\", code);\n// \t\t\tformData.append(\"redirect_uri\", window.location.origin + \"/callback\");\n// \t\t\tformData.append(\"grant_type\", \"authorization_code\");\n\n// \t\t\tfetch(\"https://accounts.google.com/o/oauth2/token\", {\n// \t\t\t\tmethod: \"POST\",\n// \t\t\t\theaders: {\n// \t\t\t\t\t\"Content-Type\": \"application/x-www-form-urlencoded\",\n// \t\t\t\t},\n// \t\t\t\tbody: formData,\n// \t\t\t})\n// \t\t\t\t.then((response) => response.json())\n// \t\t\t\t.then((data) => {\n// \t\t\t\t\tif (data.access_token) {\n// \t\t\t\t\t\tsetIsSignedIn(true);\n// \t\t\t\t\t\tgetPlaylists(data.access_token);\n// \t\t\t\t\t}\n// \t\t\t\t})\n// \t\t\t\t.catch((error) => console.error(\"Error exchanging code for access token:\", error));\n// \t\t}\n// \t}, [clientId, clientSecret]);\n\n// \treturn (\n// \t\t<div>\n// \t\t\t{!isSignedIn ? (\n// \t\t\t\t<button onClick={authenticate}>Sign In with YouTube</button>\n// \t\t\t) : (\n// \t\t\t\t<div>\n// \t\t\t\t\t<h2>My Playlists:</h2>\n// \t\t\t\t\t<ul>\n// \t\t\t\t\t\t{playlists.map((playlist) => (\n// \t\t\t\t\t\t\t<li key={playlist.id}>{playlist.snippet.title}</li>\n// \t\t\t\t\t\t))}\n// \t\t\t\t\t</ul>\n// \t\t\t\t</div>\n// \t\t\t)}\n// \t\t</div>\n// \t);\n// };\n\n// export default YouTubeAuth;","map":{"version":3,"names":[],"sources":["C:/Users/chris/Desktop/Spotify-Weather/client/src/components/YoutubeAuth.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n\r\n// const YouTubeAuth = ({ clientId, clientSecret }) => {\r\n// \tconst [isSignedIn, setIsSignedIn] = useState(false);\r\n// \tconst [playlists, setPlaylists] = useState([]);\r\n\r\n// \tconst authenticate = () => {\r\n// \t\t// Redirect to Google's OAuth2 consent screen\r\n// \t\tconst authUrl = `https://accounts.google.com/o/oauth2/auth?client_id=${clientId}&redirect_uri=${encodeURIComponent(window.location.origin + \"/callback\")}&response_type=code&scope=https://www.googleapis.com/auth/youtube.readonly`;\r\n\r\n// \t\twindow.location.href = authUrl;\r\n// \t};\r\n\r\n// \tconst getPlaylists = async (accessToken) => {\r\n// \t\ttry {\r\n// \t\t\tconst response = await fetch(\"https://www.googleapis.com/youtube/v3/playlists\", {\r\n// \t\t\t\theaders: {\r\n// \t\t\t\t\tAuthorization: `Bearer ${accessToken}`,\r\n// \t\t\t\t},\r\n// \t\t\t});\r\n\r\n// \t\t\tif (response.ok) {\r\n// \t\t\t\tconst data = await response.json();\r\n// \t\t\t\tsetPlaylists(data.items);\r\n// \t\t\t} else {\r\n// \t\t\t\tconsole.error(\"Failed to fetch playlists:\", response.status, response.statusText);\r\n// \t\t\t}\r\n// \t\t} catch (error) {\r\n// \t\t\tconsole.error(\"Error fetching data:\", error);\r\n// \t\t}\r\n// \t};\r\n\r\n// \tuseEffect(() => {\r\n// \t\t// Get the access token from the URL after successful authentication\r\n// \t\tconst urlParams = new URLSearchParams(window.location.search);\r\n// \t\tconst code = urlParams.get(\"code\");\r\n\r\n// \t\tif (code) {\r\n// \t\t\t// Exchange the code for an access token\r\n// \t\t\tconst formData = new URLSearchParams();\r\n// \t\t\tformData.append(\"client_id\", clientId);\r\n// \t\t\tformData.append(\"client_secret\", clientSecret);\r\n// \t\t\tformData.append(\"code\", code);\r\n// \t\t\tformData.append(\"redirect_uri\", window.location.origin + \"/callback\");\r\n// \t\t\tformData.append(\"grant_type\", \"authorization_code\");\r\n\r\n// \t\t\tfetch(\"https://accounts.google.com/o/oauth2/token\", {\r\n// \t\t\t\tmethod: \"POST\",\r\n// \t\t\t\theaders: {\r\n// \t\t\t\t\t\"Content-Type\": \"application/x-www-form-urlencoded\",\r\n// \t\t\t\t},\r\n// \t\t\t\tbody: formData,\r\n// \t\t\t})\r\n// \t\t\t\t.then((response) => response.json())\r\n// \t\t\t\t.then((data) => {\r\n// \t\t\t\t\tif (data.access_token) {\r\n// \t\t\t\t\t\tsetIsSignedIn(true);\r\n// \t\t\t\t\t\tgetPlaylists(data.access_token);\r\n// \t\t\t\t\t}\r\n// \t\t\t\t})\r\n// \t\t\t\t.catch((error) => console.error(\"Error exchanging code for access token:\", error));\r\n// \t\t}\r\n// \t}, [clientId, clientSecret]);\r\n\r\n// \treturn (\r\n// \t\t<div>\r\n// \t\t\t{!isSignedIn ? (\r\n// \t\t\t\t<button onClick={authenticate}>Sign In with YouTube</button>\r\n// \t\t\t) : (\r\n// \t\t\t\t<div>\r\n// \t\t\t\t\t<h2>My Playlists:</h2>\r\n// \t\t\t\t\t<ul>\r\n// \t\t\t\t\t\t{playlists.map((playlist) => (\r\n// \t\t\t\t\t\t\t<li key={playlist.id}>{playlist.snippet.title}</li>\r\n// \t\t\t\t\t\t))}\r\n// \t\t\t\t\t</ul>\r\n// \t\t\t\t</div>\r\n// \t\t\t)}\r\n// \t\t</div>\r\n// \t);\r\n// };\r\n\r\n// export default YouTubeAuth;\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}