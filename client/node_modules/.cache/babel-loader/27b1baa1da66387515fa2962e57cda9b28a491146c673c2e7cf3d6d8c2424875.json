{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\Spotify-Weather\\\\client\\\\src\\\\components\\\\SpotifyPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpotifyPlayer = ({\n  accessToken,\n  currentTrack\n}) => {\n  _s();\n  const [player, setPlayer] = useState(undefined);\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://sdk.scdn.co/spotify-player.js\";\n    script.async = true;\n    document.body.appendChild(script);\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      const player = new window.Spotify.Player({\n        name: \"Web Playback SDK Quick Start Player\",\n        getOAuthToken: cb => {\n          cb(accessToken);\n        }\n      });\n      player.connect().then(success => {\n        if (success) {\n          console.log(\"The Web Playback SDK successfully connected to Spotify!\");\n        }\n      });\n      player.addListener(\"ready\", ({\n        device_id\n      }) => {\n        console.log(\"Ready with Device ID\", device_id);\n      });\n\n      // Not Ready\n      player.addListener(\"not_ready\", ({\n        device_id\n      }) => {\n        console.log(\"Device ID has gone offline\", device_id);\n      });\n    };\n  }, []);\n  // Ready\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Spotify Player\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(SpotifyPlayer, \"S9JBC9xgviNXUKO97EpTInEoWik=\");\n_c = SpotifyPlayer;\nexport default SpotifyPlayer;\n\n// const [player, setPlayer] = useState(null);\n// const [isPaused, setPaused] = useState(false);\n// useEffect(() => {\n// \tconst script = document.createElement(\"script\");\n// \tscript.src = \"https://sdk.scdn.co/spotify-player.js\";\n// \tscript.async = true;\n// \tdocument.body.appendChild(script);\n// \twindow.onSpotifyWebPlaybackSDKReady = () => {\n// \t\tconst newPlayer = new window.Spotify.Player({\n// \t\t\tname: \"React Spotify Player\",\n// \t\t\tgetOAuthToken: (cb) => {\n// \t\t\t\tcb(accessToken);\n// \t\t\t},\n// \t\t});\n// \t\tsetPlayer(newPlayer);\n// \t\tnewPlayer.connect().then((success) => {\n// \t\t\tif (success) {\n// \t\t\t\tconsole.log(\"Connected to Spotify player!\");\n// \t\t\t}\n// \t\t});\n// \t};\n// \treturn () => {\n// \t\tif (player !== null) {\n// \t\t\tplayer.disconnect();\n// \t\t}\n// \t};\n// }, [accessToken]);\n// useEffect(() => {\n// \tif (currentTrack?.uri) {\n// \t\tplayer.resume();\n// \t\tplayer.addListener(\"ready\", ({ device_id }) => {\n// \t\t\tplayer._options.id = device_id;\n// \t\t\tplayer._options.getOAuthToken((access_token) => {\n// \t\t\t\tfetch(`https://api.spotify.com/v1/me/player/play?device_id=${device_id}`, {\n// \t\t\t\t\tmethod: \"PUT\",\n// \t\t\t\t\tbody: JSON.stringify({ uris: [currentTrack?.uri] }),\n// \t\t\t\t\theaders: {\n// \t\t\t\t\t\t\"Content-Type\": \"application/json\",\n// \t\t\t\t\t\tAuthorization: `Bearer ${access_token}`,\n// \t\t\t\t\t},\n// \t\t\t\t});\n// \t\t\t});\n// \t\t});\n// \t}\n// }, [currentTrack.uri]);\n// const handlePreviousTrack = () => {\n// \tif (player !== null) {\n// \t\tplayer.previousTrack();\n// \t}\n// };\n// const handleTogglePlay = () => {\n// \tif (player !== null) {\n// \t\tplayer.togglePlay();\n// \t\tsetPaused(!isPaused);\n// \t}\n// };\n// const handleNextTrack = () => {\n// \tif (player !== null) {\n// \t\tplayer.nextTrack();\n// \t}\n// };\n// if (currentTrack != null) {\n// \treturn (\n// \t\t<div id=\"spotify-player\">\n// \t\t\t<div className=\"main-wrapper\">\n// \t\t\t\t<img src={currentTrack.album.images[0].url} className=\"now-playing__cover\" alt=\"\" />\n// \t\t\t\t<div className=\"now-playing__side\">\n// \t\t\t\t\t<div className=\"now-playing__name\">{currentTrack.name}</div>\n// \t\t\t\t\t<div className=\"now-playing__artist\">{currentTrack.artists[0].name}</div>\n// \t\t\t\t\t<button className=\"btn-spotify\" onClick={handlePreviousTrack}>\n// \t\t\t\t\t\t&lt;&lt;\n// \t\t\t\t\t</button>\n// \t\t\t\t\t<button className=\"btn-spotify\" onClick={handleTogglePlay}>\n// \t\t\t\t\t\t{isPaused ? \"PLAY\" : \"PAUSE\"}\n// \t\t\t\t\t</button>\n// \t\t\t\t\t<button className=\"btn-spotify\" onClick={handleNextTrack}>\n// \t\t\t\t\t\t&gt;&gt;\n// \t\t\t\t\t</button>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t</div>\n// \t);\n// } else {\n// \treturn null;\n// }\nvar _c;\n$RefreshReg$(_c, \"SpotifyPlayer\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","SpotifyPlayer","accessToken","currentTrack","_s","player","setPlayer","undefined","script","document","createElement","src","async","body","appendChild","window","onSpotifyWebPlaybackSDKReady","Spotify","Player","name","getOAuthToken","cb","connect","then","success","console","log","addListener","device_id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/Spotify-Weather/client/src/components/SpotifyPlayer.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst SpotifyPlayer = ({ accessToken, currentTrack }) => {\r\n\tconst [player, setPlayer] = useState(undefined);\r\n\tuseEffect(() => {\r\n\t\tconst script = document.createElement(\"script\");\r\n\t\tscript.src = \"https://sdk.scdn.co/spotify-player.js\";\r\n\t\tscript.async = true;\r\n\t\tdocument.body.appendChild(script);\r\n\r\n\t\twindow.onSpotifyWebPlaybackSDKReady = () => {\r\n\t\t\tconst player = new window.Spotify.Player({\r\n\t\t\t\tname: \"Web Playback SDK Quick Start Player\",\r\n\t\t\t\tgetOAuthToken: (cb) => {\r\n\t\t\t\t\tcb(accessToken);\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\tplayer.connect().then((success) => {\r\n\t\t\t\tif (success) {\r\n\t\t\t\t\tconsole.log(\"The Web Playback SDK successfully connected to Spotify!\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tplayer.addListener(\"ready\", ({ device_id }) => {\r\n\t\t\t\tconsole.log(\"Ready with Device ID\", device_id);\r\n\t\t\t});\r\n\r\n\t\t\t// Not Ready\r\n\t\t\tplayer.addListener(\"not_ready\", ({ device_id }) => {\r\n\t\t\t\tconsole.log(\"Device ID has gone offline\", device_id);\r\n\t\t\t});\r\n\t\t};\r\n\t}, []);\r\n\t// Ready\r\n\r\n\treturn <div>Spotify Player</div>;\r\n};\r\n\r\nexport default SpotifyPlayer;\r\n\r\n// const [player, setPlayer] = useState(null);\r\n// const [isPaused, setPaused] = useState(false);\r\n// useEffect(() => {\r\n// \tconst script = document.createElement(\"script\");\r\n// \tscript.src = \"https://sdk.scdn.co/spotify-player.js\";\r\n// \tscript.async = true;\r\n// \tdocument.body.appendChild(script);\r\n// \twindow.onSpotifyWebPlaybackSDKReady = () => {\r\n// \t\tconst newPlayer = new window.Spotify.Player({\r\n// \t\t\tname: \"React Spotify Player\",\r\n// \t\t\tgetOAuthToken: (cb) => {\r\n// \t\t\t\tcb(accessToken);\r\n// \t\t\t},\r\n// \t\t});\r\n// \t\tsetPlayer(newPlayer);\r\n// \t\tnewPlayer.connect().then((success) => {\r\n// \t\t\tif (success) {\r\n// \t\t\t\tconsole.log(\"Connected to Spotify player!\");\r\n// \t\t\t}\r\n// \t\t});\r\n// \t};\r\n// \treturn () => {\r\n// \t\tif (player !== null) {\r\n// \t\t\tplayer.disconnect();\r\n// \t\t}\r\n// \t};\r\n// }, [accessToken]);\r\n// useEffect(() => {\r\n// \tif (currentTrack?.uri) {\r\n// \t\tplayer.resume();\r\n// \t\tplayer.addListener(\"ready\", ({ device_id }) => {\r\n// \t\t\tplayer._options.id = device_id;\r\n// \t\t\tplayer._options.getOAuthToken((access_token) => {\r\n// \t\t\t\tfetch(`https://api.spotify.com/v1/me/player/play?device_id=${device_id}`, {\r\n// \t\t\t\t\tmethod: \"PUT\",\r\n// \t\t\t\t\tbody: JSON.stringify({ uris: [currentTrack?.uri] }),\r\n// \t\t\t\t\theaders: {\r\n// \t\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n// \t\t\t\t\t\tAuthorization: `Bearer ${access_token}`,\r\n// \t\t\t\t\t},\r\n// \t\t\t\t});\r\n// \t\t\t});\r\n// \t\t});\r\n// \t}\r\n// }, [currentTrack.uri]);\r\n// const handlePreviousTrack = () => {\r\n// \tif (player !== null) {\r\n// \t\tplayer.previousTrack();\r\n// \t}\r\n// };\r\n// const handleTogglePlay = () => {\r\n// \tif (player !== null) {\r\n// \t\tplayer.togglePlay();\r\n// \t\tsetPaused(!isPaused);\r\n// \t}\r\n// };\r\n// const handleNextTrack = () => {\r\n// \tif (player !== null) {\r\n// \t\tplayer.nextTrack();\r\n// \t}\r\n// };\r\n// if (currentTrack != null) {\r\n// \treturn (\r\n// \t\t<div id=\"spotify-player\">\r\n// \t\t\t<div className=\"main-wrapper\">\r\n// \t\t\t\t<img src={currentTrack.album.images[0].url} className=\"now-playing__cover\" alt=\"\" />\r\n// \t\t\t\t<div className=\"now-playing__side\">\r\n// \t\t\t\t\t<div className=\"now-playing__name\">{currentTrack.name}</div>\r\n// \t\t\t\t\t<div className=\"now-playing__artist\">{currentTrack.artists[0].name}</div>\r\n// \t\t\t\t\t<button className=\"btn-spotify\" onClick={handlePreviousTrack}>\r\n// \t\t\t\t\t\t&lt;&lt;\r\n// \t\t\t\t\t</button>\r\n// \t\t\t\t\t<button className=\"btn-spotify\" onClick={handleTogglePlay}>\r\n// \t\t\t\t\t\t{isPaused ? \"PLAY\" : \"PAUSE\"}\r\n// \t\t\t\t\t</button>\r\n// \t\t\t\t\t<button className=\"btn-spotify\" onClick={handleNextTrack}>\r\n// \t\t\t\t\t\t&gt;&gt;\r\n// \t\t\t\t\t</button>\r\n// \t\t\t\t</div>\r\n// \t\t\t</div>\r\n// \t\t</div>\r\n// \t);\r\n// } else {\r\n// \treturn null;\r\n// }\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAACS,SAAS,CAAC;EAC/CV,SAAS,CAAC,MAAM;IACf,MAAMW,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,GAAG,GAAG,uCAAuC;IACpDH,MAAM,CAACI,KAAK,GAAG,IAAI;IACnBH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,MAAM,CAAC;IAEjCO,MAAM,CAACC,4BAA4B,GAAG,MAAM;MAC3C,MAAMX,MAAM,GAAG,IAAIU,MAAM,CAACE,OAAO,CAACC,MAAM,CAAC;QACxCC,IAAI,EAAE,qCAAqC;QAC3CC,aAAa,EAAGC,EAAE,IAAK;UACtBA,EAAE,CAACnB,WAAW,CAAC;QAChB;MACD,CAAC,CAAC;MAEFG,MAAM,CAACiB,OAAO,CAAC,CAAC,CAACC,IAAI,CAAEC,OAAO,IAAK;QAClC,IAAIA,OAAO,EAAE;UACZC,OAAO,CAACC,GAAG,CAAC,yDAAyD,CAAC;QACvE;MACD,CAAC,CAAC;MAEFrB,MAAM,CAACsB,WAAW,CAAC,OAAO,EAAE,CAAC;QAAEC;MAAU,CAAC,KAAK;QAC9CH,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEE,SAAS,CAAC;MAC/C,CAAC,CAAC;;MAEF;MACAvB,MAAM,CAACsB,WAAW,CAAC,WAAW,EAAE,CAAC;QAAEC;MAAU,CAAC,KAAK;QAClDH,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEE,SAAS,CAAC;MACrD,CAAC,CAAC;IACH,CAAC;EACF,CAAC,EAAE,EAAE,CAAC;EACN;;EAEA,oBAAO5B,OAAA;IAAA6B,QAAA,EAAK;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACjC,CAAC;AAAC7B,EAAA,CAnCIH,aAAa;AAAAiC,EAAA,GAAbjC,aAAa;AAqCnB,eAAeA,aAAa;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}