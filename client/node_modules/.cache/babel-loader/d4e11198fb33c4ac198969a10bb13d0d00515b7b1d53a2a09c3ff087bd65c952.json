{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\Spotify-Weather\\\\client\\\\src\\\\components\\\\Player.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player({\n  accessToken,\n  trackUri,\n  playlistUri\n}) {\n  _s();\n  const [play, setPlay] = useState(false);\n  const handlePlaybackState = state => {\n    if (!state.isPlaying) {\n      setPlay(false);\n    }\n\n    // Find the index of the currently playing song\n    const currentSongIndex = playlistUri.findIndex(uri => {\n      var _state$track;\n      return uri === ((_state$track = state.track) === null || _state$track === void 0 ? void 0 : _state$track.uri);\n    });\n    console.log(currentSongIndex);\n  };\n  console.log(playlistUri);\n  // useEffect(() => setPlay(true), [trackUri]);\n  useEffect(() => {\n    setPlay(true);\n    // setCurrentTrackUri(trackUri);\n  }, [trackUri]);\n  // if (!accessToken) return null;\n  return /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n    styles: {\n      activeColor: \"#fff\",\n      bgColor: \"#242424\",\n      color: \"#fff\",\n      loaderColor: \"#fff\",\n      sliderColor: \"#1cb954\",\n      trackArtistColor: \"#ccc\",\n      trackNameColor: \"#fff\"\n    },\n    token: accessToken,\n    showSaveIcon: true,\n    callback: state => {\n      if (!state.isPlaying) setPlay(false);\n    },\n    play: play,\n    uris: playlistUri\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n}\n_s(Player, \"jVhLcXDeOrLi5A95zDr62ndrz9E=\");\n_c = Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["useState","useEffect","SpotifyPlayer","jsxDEV","_jsxDEV","Player","accessToken","trackUri","playlistUri","_s","play","setPlay","handlePlaybackState","state","isPlaying","currentSongIndex","findIndex","uri","_state$track","track","console","log","styles","activeColor","bgColor","color","loaderColor","sliderColor","trackArtistColor","trackNameColor","token","showSaveIcon","callback","uris","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/Spotify-Weather/client/src/components/Player.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\n\nexport default function Player({ accessToken, trackUri, playlistUri }) {\n\tconst [play, setPlay] = useState(false);\n\n\tconst handlePlaybackState = (state) => {\n\t\tif (!state.isPlaying) {\n\t\t\tsetPlay(false);\n\t\t}\n\n\t\t// Find the index of the currently playing song\n\t\tconst currentSongIndex = playlistUri.findIndex((uri) => uri === state.track?.uri);\n\t\tconsole.log(currentSongIndex);\n\t};\n\tconsole.log(playlistUri);\n\t// useEffect(() => setPlay(true), [trackUri]);\n\tuseEffect(() => {\n\t\tsetPlay(true);\n\t\t// setCurrentTrackUri(trackUri);\n\t}, [trackUri]);\n\t// if (!accessToken) return null;\n\treturn (\n\t\t<SpotifyPlayer\n\t\t\tstyles={{\n\t\t\t\tactiveColor: \"#fff\",\n\t\t\t\tbgColor: \"#242424\",\n\t\t\t\tcolor: \"#fff\",\n\t\t\t\tloaderColor: \"#fff\",\n\t\t\t\tsliderColor: \"#1cb954\",\n\t\t\t\ttrackArtistColor: \"#ccc\",\n\t\t\t\ttrackNameColor: \"#fff\",\n\t\t\t}}\n\t\t\ttoken={accessToken}\n\t\t\tshowSaveIcon\n\t\t\tcallback={(state) => {\n\t\t\t\tif (!state.isPlaying) setPlay(false);\n\t\t\t}}\n\t\t\tplay={play}\n\t\t\turis={playlistUri}\n\t\t/>\n\t);\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,eAAe,SAASC,MAAMA,CAAC;EAAEC,WAAW;EAAEC,QAAQ;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACtE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEvC,MAAMY,mBAAmB,GAAIC,KAAK,IAAK;IACtC,IAAI,CAACA,KAAK,CAACC,SAAS,EAAE;MACrBH,OAAO,CAAC,KAAK,CAAC;IACf;;IAEA;IACA,MAAMI,gBAAgB,GAAGP,WAAW,CAACQ,SAAS,CAAEC,GAAG;MAAA,IAAAC,YAAA;MAAA,OAAKD,GAAG,OAAAC,YAAA,GAAKL,KAAK,CAACM,KAAK,cAAAD,YAAA,uBAAXA,YAAA,CAAaD,GAAG;IAAA,EAAC;IACjFG,OAAO,CAACC,GAAG,CAACN,gBAAgB,CAAC;EAC9B,CAAC;EACDK,OAAO,CAACC,GAAG,CAACb,WAAW,CAAC;EACxB;EACAP,SAAS,CAAC,MAAM;IACfU,OAAO,CAAC,IAAI,CAAC;IACb;EACD,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EACd;EACA,oBACCH,OAAA,CAACF,aAAa;IACboB,MAAM,EAAE;MACPC,WAAW,EAAE,MAAM;MACnBC,OAAO,EAAE,SAAS;MAClBC,KAAK,EAAE,MAAM;MACbC,WAAW,EAAE,MAAM;MACnBC,WAAW,EAAE,SAAS;MACtBC,gBAAgB,EAAE,MAAM;MACxBC,cAAc,EAAE;IACjB,CAAE;IACFC,KAAK,EAAExB,WAAY;IACnByB,YAAY;IACZC,QAAQ,EAAGnB,KAAK,IAAK;MACpB,IAAI,CAACA,KAAK,CAACC,SAAS,EAAEH,OAAO,CAAC,KAAK,CAAC;IACrC,CAAE;IACFD,IAAI,EAAEA,IAAK;IACXuB,IAAI,EAAEzB;EAAY;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEJ;AAAC5B,EAAA,CAvCuBJ,MAAM;AAAAiC,EAAA,GAANjC,MAAM;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}