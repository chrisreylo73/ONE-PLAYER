{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\spotify-clone-main\\\\client\\\\src\\\\components\\\\Tracks.jsx\";\nimport Song from \"./Song\";\nimport YoutubeSong from \"./YoutubeSong\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tracks = ({\n  spotifySelectedPlaylist,\n  youtubeSelectedPlaylist,\n  youtubePlaylistTracks,\n  spotifyPlaylistTracks,\n  chooseTrack\n}) => {\n  if (spotifySelectedPlaylist == null && youtubeSelectedPlaylist == null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 4\n    }, this);\n  } else if (spotifySelectedPlaylist == null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracks\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlistHeaders-youtube\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: youtubeSelectedPlaylist.playlistTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tracks-content\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: youtubePlaylistTracks.map(youtubePlaylistTrack => {\n            // const track = playlistTrack.track;\n            // return <p>{youtubePlaylistTrack.name}</p>;\n            return /*#__PURE__*/_jsxDEV(YoutubeSong, {\n              track: youtubePlaylistTrack\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this);\n  } else if (youtubeSelectedPlaylist == null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracks\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlistHeaders-spotify\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: spotifySelectedPlaylist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tracks-content\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: spotifyPlaylistTracks.map(playlistTrack => {\n            const track = playlistTrack.track;\n            return /*#__PURE__*/_jsxDEV(Song, {\n              chooseTrack: chooseTrack,\n              track: track\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracks\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlistHeaders-spotify\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: spotifySelectedPlaylist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tracks-content\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: spotifyPlaylistTracks.map(playlistTrack => {\n            const track = playlistTrack.track;\n            return /*#__PURE__*/_jsxDEV(Song, {\n              chooseTrack: chooseTrack,\n              track: track\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlistHeaders-youtube\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: youtubeSelectedPlaylist.playlistTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tracks-content\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: youtubePlaylistTracks.map(youtubePlaylistTrack => {\n            // const track = playlistTrack.track;\n            // return <p>{youtubePlaylistTrack.name}</p>;\n            return /*#__PURE__*/_jsxDEV(YoutubeSong, {\n              track: youtubePlaylistTrack\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this);\n  }\n};\n_c = Tracks;\nexport default Tracks;\nvar _c;\n$RefreshReg$(_c, \"Tracks\");","map":{"version":3,"names":["Song","YoutubeSong","jsxDEV","_jsxDEV","Tracks","spotifySelectedPlaylist","youtubeSelectedPlaylist","youtubePlaylistTracks","spotifyPlaylistTracks","chooseTrack","className","fileName","_jsxFileName","lineNumber","columnNumber","children","playlistTitle","map","youtubePlaylistTrack","track","name","playlistTrack","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/spotify-clone-main/client/src/components/Tracks.jsx"],"sourcesContent":["import Song from \"./Song\";\r\nimport YoutubeSong from \"./YoutubeSong\";\r\nconst Tracks = ({ spotifySelectedPlaylist, youtubeSelectedPlaylist, youtubePlaylistTracks, spotifyPlaylistTracks, chooseTrack }) => {\r\n\tif (spotifySelectedPlaylist == null && youtubeSelectedPlaylist == null) {\r\n\t\treturn (\r\n\t\t\t<div className=\"tracks\">\r\n\t\t\t\t{/* <div className=\"playlistHeaders-spotify\">\r\n\t\t\t\t\t<h3>Spotify Playlist</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"playlistHeaders-youtube\">\r\n\t\t\t\t\t<h3>Youtube Playlist</h3>\r\n\t\t\t\t</div> */}\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else if (spotifySelectedPlaylist == null) {\r\n\t\treturn (\r\n\t\t\t<div className=\"tracks\">\r\n\t\t\t\t<div className=\"playlistHeaders-youtube\">\r\n\t\t\t\t\t<h3>{youtubeSelectedPlaylist.playlistTitle}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"tracks-content\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{youtubePlaylistTracks.map((youtubePlaylistTrack) => {\r\n\t\t\t\t\t\t\t// const track = playlistTrack.track;\r\n\t\t\t\t\t\t\t// return <p>{youtubePlaylistTrack.name}</p>;\r\n\t\t\t\t\t\t\treturn <YoutubeSong track={youtubePlaylistTrack} />;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else if (youtubeSelectedPlaylist == null) {\r\n\t\treturn (\r\n\t\t\t<div className=\"tracks\">\r\n\t\t\t\t<div className=\"playlistHeaders-spotify\">\r\n\t\t\t\t\t<h3>{spotifySelectedPlaylist.name}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"tracks-content\">\r\n\t\t\t\t\t{/* {spotifyPlaylistTracks.length > 0 || youtubePlaylistTracks.length > 0} */}\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{spotifyPlaylistTracks.map((playlistTrack) => {\r\n\t\t\t\t\t\t\tconst track = playlistTrack.track;\r\n\t\t\t\t\t\t\treturn <Song chooseTrack={chooseTrack} track={track} />;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className=\"tracks\">\r\n\t\t\t\t<div className=\"playlistHeaders-spotify\">\r\n\t\t\t\t\t<h3>{spotifySelectedPlaylist.name}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"tracks-content\">\r\n\t\t\t\t\t{/* {spotifyPlaylistTracks.length > 0 || youtubePlaylistTracks.length > 0} */}\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{spotifyPlaylistTracks.map((playlistTrack) => {\r\n\t\t\t\t\t\t\tconst track = playlistTrack.track;\r\n\t\t\t\t\t\t\treturn <Song chooseTrack={chooseTrack} track={track} />;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"playlistHeaders-youtube\">\r\n\t\t\t\t\t<h3>{youtubeSelectedPlaylist.playlistTitle}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"tracks-content\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{youtubePlaylistTracks.map((youtubePlaylistTrack) => {\r\n\t\t\t\t\t\t\t// const track = playlistTrack.track;\r\n\t\t\t\t\t\t\t// return <p>{youtubePlaylistTrack.name}</p>;\r\n\t\t\t\t\t\t\treturn <YoutubeSong track={youtubePlaylistTrack} />;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Tracks;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}