{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\spotify-clone-main\\\\client\\\\src\\\\components\\\\Tracks.jsx\";\nimport React from \"react\";\nimport Song from \"./Song\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tracks = _ref => {\n  let {\n    selectedPlaylist,\n    playlistTracks,\n    chooseTrack\n  } = _ref;\n  function handlePlay(track) {\n    chooseTrack(track);\n  }\n  if (!selectedPlaylist) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracks\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlistHeaders-spotify\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Spotify Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlistHeaders-youtube\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Youtube Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tracks\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlistHeaders-spotify\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: selectedPlaylist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracks-content\",\n      children: playlistTracks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: playlistTracks.map(track => /*#__PURE__*/_jsxDEV(Song, {\n          albumCover: track.track.album.images[0].url,\n          title: track.track.name,\n          artist: track.track.artists[0].name,\n          album: track.track.album.name,\n          length: track.track.duration_ms,\n          playTrack: () => handlePlay\n        }, track.track.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tracks found in the selected playlist.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlistHeaders-youtube\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Youtube Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n};\n_c = Tracks;\nexport default Tracks;\nvar _c;\n$RefreshReg$(_c, \"Tracks\");","map":{"version":3,"names":["React","Song","jsxDEV","_jsxDEV","Tracks","_ref","selectedPlaylist","playlistTracks","chooseTrack","handlePlay","track","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","length","map","albumCover","album","images","url","title","artist","artists","duration_ms","playTrack","id","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/spotify-clone-main/client/src/components/Tracks.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Song from \"./Song\";\r\nconst Tracks = ({ selectedPlaylist, playlistTracks, chooseTrack }) => {\r\n\tfunction handlePlay(track) {\r\n\t\tchooseTrack(track);\r\n\t}\r\n\tif (!selectedPlaylist) {\r\n\t\treturn (\r\n\t\t\t<div className=\"tracks\">\r\n\t\t\t\t<div className=\"playlistHeaders-spotify\">\r\n\t\t\t\t\t<h3>Spotify Playlist</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"playlistHeaders-youtube\">\r\n\t\t\t\t\t<h3>Youtube Playlist</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"tracks\">\r\n\t\t\t<div className=\"playlistHeaders-spotify\">\r\n\t\t\t\t<h3>{selectedPlaylist.name}</h3>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"tracks-content\">\r\n\t\t\t\t{playlistTracks.length > 0 ? (\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{playlistTracks.map((track) => (\r\n\t\t\t\t\t\t\t<Song key={track.track.id} albumCover={track.track.album.images[0].url} title={track.track.name} artist={track.track.artists[0].name} album={track.track.album.name} length={track.track.duration_ms} playTrack={() => handlePlay}></Song>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>No tracks found in the selected playlist.</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"playlistHeaders-youtube\">\r\n\t\t\t\t<h3>Youtube Playlist</h3>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Tracks;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}