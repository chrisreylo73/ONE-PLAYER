{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\spotify-clone-main\\\\client\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport useAuth from \"./useAuth\";\nimport Player from \"./Player\";\nimport TrackSearchResult from \"./TrackSearchResult\";\nimport { Container, Form } from \"react-bootstrap\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"8b945ef10ea24755b83ac50cede405a0\"\n});\nexport default function Dashboard(_ref) {\n  _s();\n  let {\n    code\n  } = _ref;\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const [lyrics, setLyrics] = useState(\"\");\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch(\"\");\n    setLyrics(\"\");\n  }\n  useEffect(() => {\n    if (!playingTrack) return;\n    axios.get(\"http://localhost:3001/lyrics\", {\n      params: {\n        track: playingTrack.title,\n        artist: playingTrack.artist\n      }\n    }).then(res => {\n      setLyrics(res.data.lyrics);\n    });\n  }, [playingTrack]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return;\n      setSearchResults(res.body.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n      }));\n    });\n    return () => cancel = true;\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"dashboard\",\n    style: {\n      height: \"100vh\",\n      width: \"100wh\",\n      backgroundColor: \"#242424\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"search\",\n      placeholder: \"Search Songs/Artists\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: \"auto\"\n      },\n      children: [searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResult, {\n        track: track,\n        chooseTrack: chooseTrack\n      }, track.uri, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 6\n      }, this)), searchResults.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        style: {\n          whiteSpace: \"pre\"\n        },\n        children: lyrics\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Player, {\n        accessToken: accessToken,\n        trackUri: playingTrack === null || playingTrack === void 0 ? void 0 : playingTrack.uri\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 3\n  }, this);\n}\n_s(Dashboard, \"C/xkEiesDpJOEbcaLNXZ/RIs9iE=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","useAuth","Player","TrackSearchResult","Container","Form","SpotifyWebApi","axios","jsxDEV","_jsxDEV","spotifyApi","clientId","Dashboard","_ref","_s","code","accessToken","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","lyrics","setLyrics","chooseTrack","track","get","params","title","artist","then","res","data","setAccessToken","cancel","searchTracks","body","tracks","items","map","smallestAlbumImage","album","images","reduce","smallest","image","height","artists","name","uri","albumUrl","url","className","style","width","backgroundColor","children","Control","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","overflowY","length","whiteSpace","trackUri","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/spotify-clone-main/client/src/Dashboard.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport useAuth from \"./useAuth\";\nimport Player from \"./Player\";\nimport TrackSearchResult from \"./TrackSearchResult\";\nimport { Container, Form } from \"react-bootstrap\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport axios from \"axios\";\n\nconst spotifyApi = new SpotifyWebApi({\n\tclientId: \"8b945ef10ea24755b83ac50cede405a0\",\n});\n\nexport default function Dashboard({ code }) {\n\tconst accessToken = useAuth(code);\n\tconst [search, setSearch] = useState(\"\");\n\tconst [searchResults, setSearchResults] = useState([]);\n\tconst [playingTrack, setPlayingTrack] = useState();\n\tconst [lyrics, setLyrics] = useState(\"\");\n\n\tfunction chooseTrack(track) {\n\t\tsetPlayingTrack(track);\n\t\tsetSearch(\"\");\n\t\tsetLyrics(\"\");\n\t}\n\n\tuseEffect(() => {\n\t\tif (!playingTrack) return;\n\n\t\taxios\n\t\t\t.get(\"http://localhost:3001/lyrics\", {\n\t\t\t\tparams: {\n\t\t\t\t\ttrack: playingTrack.title,\n\t\t\t\t\tartist: playingTrack.artist,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tsetLyrics(res.data.lyrics);\n\t\t\t});\n\t}, [playingTrack]);\n\n\tuseEffect(() => {\n\t\tif (!accessToken) return;\n\t\tspotifyApi.setAccessToken(accessToken);\n\t}, [accessToken]);\n\n\tuseEffect(() => {\n\t\tif (!search) return setSearchResults([]);\n\t\tif (!accessToken) return;\n\n\t\tlet cancel = false;\n\t\tspotifyApi.searchTracks(search).then((res) => {\n\t\t\tif (cancel) return;\n\t\t\tsetSearchResults(\n\t\t\t\tres.body.tracks.items.map((track) => {\n\t\t\t\t\tconst smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n\t\t\t\t\t\tif (image.height < smallest.height) return image;\n\t\t\t\t\t\treturn smallest;\n\t\t\t\t\t}, track.album.images[0]);\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tartist: track.artists[0].name,\n\t\t\t\t\t\ttitle: track.name,\n\t\t\t\t\t\turi: track.uri,\n\t\t\t\t\t\talbumUrl: smallestAlbumImage.url,\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\n\t\treturn () => (cancel = true);\n\t}, [search, accessToken]);\n\n\treturn (\n\t\t<Container className=\"dashboard\" style={{ height: \"100vh\", width: \"100wh\", backgroundColor: \"#242424\" }}>\n\t\t\t<Form.Control type=\"search\" placeholder=\"Search Songs/Artists\" value={search} onChange={(e) => setSearch(e.target.value)} />\n\t\t\t<div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\n\t\t\t\t{searchResults.map((track) => (\n\t\t\t\t\t<TrackSearchResult track={track} key={track.uri} chooseTrack={chooseTrack} />\n\t\t\t\t))}\n\t\t\t\t{searchResults.length === 0 && (\n\t\t\t\t\t<div className=\"text-center\" style={{ whiteSpace: \"pre\" }}>\n\t\t\t\t\t\t{lyrics}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Player accessToken={accessToken} trackUri={playingTrack?.uri} />\n\t\t\t</div>\n\t\t</Container>\n\t);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}