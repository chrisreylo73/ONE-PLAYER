{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\Spotify-Weather\\\\client\\\\src\\\\components\\\\YoutubeAuth.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n// import { google } from \"googleapis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YouTubeAuth = ({\n  clientId,\n  clientSecret\n}) => {\n  _s();\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [playlists, setPlaylists] = useState([]);\n  const authenticate = async () => {\n    const oauth2Client = new google.auth.OAuth2(clientId, clientSecret);\n\n    // Redirect to Google's OAuth2 consent screen\n    const authUrl = oauth2Client.generateAuthUrl({\n      access_type: \"offline\",\n      scope: [\"https://www.googleapis.com/auth/youtube.readonly\"]\n    });\n    window.location.href = authUrl;\n  };\n  const getPlaylists = async accessToken => {\n    const youtube = google.youtube(\"v3\");\n    const res = await youtube.playlists.list({\n      auth: accessToken,\n      part: \"snippet\",\n      mine: true\n    });\n    setPlaylists(res.data.items);\n  };\n  React.useEffect(() => {\n    // Get the access token from the URL after successful authentication\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get(\"code\");\n    if (code) {\n      const oauth2Client = new google.auth.OAuth2(clientId, clientSecret);\n\n      // Get access token and refresh token\n      oauth2Client.getToken(code, (err, token) => {\n        if (err) {\n          console.error(\"Error getting access token:\", err);\n        } else {\n          oauth2Client.setCredentials(token);\n          getPlaylists(token.access_token);\n          setIsSignedIn(true);\n        }\n      });\n    }\n  }, [clientId, clientSecret]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isSignedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: authenticate,\n      children: \"Sign In with YouTube\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Playlists:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: playlists.map(playlist => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: playlist.snippet.title\n        }, playlist.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n};\n_s(YouTubeAuth, \"9zJQSfioSpRTDbuaTEbTDQad2fo=\");\n_c = YouTubeAuth;\nexport default YouTubeAuth;\nvar _c;\n$RefreshReg$(_c, \"YouTubeAuth\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","YouTubeAuth","clientId","clientSecret","_s","isSignedIn","setIsSignedIn","playlists","setPlaylists","authenticate","oauth2Client","google","auth","OAuth2","authUrl","generateAuthUrl","access_type","scope","window","location","href","getPlaylists","accessToken","youtube","res","list","part","mine","data","items","useEffect","urlParams","URLSearchParams","search","code","get","getToken","err","token","console","error","setCredentials","access_token","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","playlist","snippet","title","id","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/Spotify-Weather/client/src/components/YoutubeAuth.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n// import { google } from \"googleapis\";\r\n\r\nconst YouTubeAuth = ({ clientId, clientSecret }) => {\r\n\tconst [isSignedIn, setIsSignedIn] = useState(false);\r\n\tconst [playlists, setPlaylists] = useState([]);\r\n\r\n\tconst authenticate = async () => {\r\n\t\tconst oauth2Client = new google.auth.OAuth2(clientId, clientSecret);\r\n\r\n\t\t// Redirect to Google's OAuth2 consent screen\r\n\t\tconst authUrl = oauth2Client.generateAuthUrl({\r\n\t\t\taccess_type: \"offline\",\r\n\t\t\tscope: [\"https://www.googleapis.com/auth/youtube.readonly\"],\r\n\t\t});\r\n\r\n\t\twindow.location.href = authUrl;\r\n\t};\r\n\r\n\tconst getPlaylists = async (accessToken) => {\r\n\t\tconst youtube = google.youtube(\"v3\");\r\n\t\tconst res = await youtube.playlists.list({\r\n\t\t\tauth: accessToken,\r\n\t\t\tpart: \"snippet\",\r\n\t\t\tmine: true,\r\n\t\t});\r\n\r\n\t\tsetPlaylists(res.data.items);\r\n\t};\r\n\r\n\tReact.useEffect(() => {\r\n\t\t// Get the access token from the URL after successful authentication\r\n\t\tconst urlParams = new URLSearchParams(window.location.search);\r\n\t\tconst code = urlParams.get(\"code\");\r\n\r\n\t\tif (code) {\r\n\t\t\tconst oauth2Client = new google.auth.OAuth2(clientId, clientSecret);\r\n\r\n\t\t\t// Get access token and refresh token\r\n\t\t\toauth2Client.getToken(code, (err, token) => {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\tconsole.error(\"Error getting access token:\", err);\r\n\t\t\t\t} else {\r\n\t\t\t\t\toauth2Client.setCredentials(token);\r\n\t\t\t\t\tgetPlaylists(token.access_token);\r\n\t\t\t\t\tsetIsSignedIn(true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}, [clientId, clientSecret]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!isSignedIn ? (\r\n\t\t\t\t<button onClick={authenticate}>Sign In with YouTube</button>\r\n\t\t\t) : (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>My Playlists:</h2>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{playlists.map((playlist) => (\r\n\t\t\t\t\t\t\t<li key={playlist.id}>{playlist.snippet.title}</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default YouTubeAuth;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}