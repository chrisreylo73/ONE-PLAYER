{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\spotify-clone-main\\\\client\\\\src\\\\components\\\\Song.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Song = _ref => {\n  let {\n    chooseTrack,\n    track\n  } = _ref;\n  const minutes = Math.floor(track.duration_ms / 60000);\n  const seconds = Math.floor(track.duration_ms % 60000 / 1000);\n  const formattedLength = track.duration_ms ? `${minutes}:${seconds.toString().padStart(2, \"0\")}` : \"length?\";\n  function handlePlay() {\n    chooseTrack(track);\n  }\n  const handleSongClick = () => {\n    const track = {\n      title,\n      artist,\n      album,\n      length,\n      albumCover,\n      uri: \"https://api.spotify.com/v1\" // Provide a default URI value\n    };\n\n    handlePlay(track.track);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"song\",\n    onClick: handleSongClick,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"album-cover\",\n      src: track.album.images[0].url,\n      alt: \"Album Cover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"songInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"title\",\n        children: track.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"artist\",\n        children: track.artists[0].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: formattedLength\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n};\n_c = Song;\nSong.defaultProps = {\n  title: \"Title?\",\n  album: \"Album?\",\n  length: \"Length?\"\n};\nexport default Song;\nvar _c;\n$RefreshReg$(_c, \"Song\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Song","_ref","chooseTrack","track","minutes","Math","floor","duration_ms","seconds","formattedLength","toString","padStart","handlePlay","handleSongClick","title","artist","album","length","albumCover","uri","className","onClick","children","src","images","url","alt","fileName","_jsxFileName","lineNumber","columnNumber","id","name","artists","_c","defaultProps","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/spotify-clone-main/client/src/components/Song.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Song = ({ chooseTrack, track }) => {\r\n\tconst minutes = Math.floor(track.duration_ms / 60000);\r\n\tconst seconds = Math.floor((track.duration_ms % 60000) / 1000);\r\n\tconst formattedLength = track.duration_ms ? `${minutes}:${seconds.toString().padStart(2, \"0\")}` : \"length?\";\r\n\tfunction handlePlay() {\r\n\t\tchooseTrack(track);\r\n\t}\r\n\tconst handleSongClick = () => {\r\n\t\tconst track = {\r\n\t\t\ttitle,\r\n\t\t\tartist,\r\n\t\t\talbum,\r\n\t\t\tlength,\r\n\t\t\talbumCover,\r\n\t\t\turi: \"https://api.spotify.com/v1\", // Provide a default URI value\r\n\t\t};\r\n\t\thandlePlay(track.track);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"song\" onClick={handleSongClick}>\r\n\t\t\t<img className=\"album-cover\" src={track.album.images[0].url} alt=\"Album Cover\" />\r\n\t\t\t<div className=\"songInfo\">\r\n\t\t\t\t<p id=\"title\">{track.name}</p>\r\n\t\t\t\t<p id=\"artist\">{track.artists[0].name}</p>\r\n\t\t\t</div>\r\n\t\t\t<p>{formattedLength}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nSong.defaultProps = {\r\n\ttitle: \"Title?\",\r\n\talbum: \"Album?\",\r\n\tlength: \"Length?\",\r\n};\r\n\r\nexport default Song;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGC,IAAA,IAA4B;EAAA,IAA3B;IAAEC,WAAW;IAAEC;EAAM,CAAC,GAAAF,IAAA;EACnC,MAAMG,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,WAAW,GAAG,KAAK,CAAC;EACrD,MAAMC,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAEH,KAAK,CAACI,WAAW,GAAG,KAAK,GAAI,IAAI,CAAC;EAC9D,MAAME,eAAe,GAAGN,KAAK,CAACI,WAAW,GAAI,GAAEH,OAAQ,IAAGI,OAAO,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC,GAAG,SAAS;EAC3G,SAASC,UAAUA,CAAA,EAAG;IACrBV,WAAW,CAACC,KAAK,CAAC;EACnB;EACA,MAAMU,eAAe,GAAGA,CAAA,KAAM;IAC7B,MAAMV,KAAK,GAAG;MACbW,KAAK;MACLC,MAAM;MACNC,KAAK;MACLC,MAAM;MACNC,UAAU;MACVC,GAAG,EAAE,4BAA4B,CAAE;IACpC,CAAC;;IACDP,UAAU,CAACT,KAAK,CAACA,KAAK,CAAC;EACxB,CAAC;EAED,oBACCJ,OAAA;IAAKqB,SAAS,EAAC,MAAM;IAACC,OAAO,EAAER,eAAgB;IAAAS,QAAA,gBAC9CvB,OAAA;MAAKqB,SAAS,EAAC,aAAa;MAACG,GAAG,EAAEpB,KAAK,CAACa,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC,CAACC,GAAI;MAACC,GAAG,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjF/B,OAAA;MAAKqB,SAAS,EAAC,UAAU;MAAAE,QAAA,gBACxBvB,OAAA;QAAGgC,EAAE,EAAC,OAAO;QAAAT,QAAA,EAAEnB,KAAK,CAAC6B;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9B/B,OAAA;QAAGgC,EAAE,EAAC,QAAQ;QAAAT,QAAA,EAAEnB,KAAK,CAAC8B,OAAO,CAAC,CAAC,CAAC,CAACD;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACN/B,OAAA;MAAAuB,QAAA,EAAIb;IAAe;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAER,CAAC;AAACI,EAAA,GA7BIlC,IAAI;AA+BVA,IAAI,CAACmC,YAAY,GAAG;EACnBrB,KAAK,EAAE,QAAQ;EACfE,KAAK,EAAE,QAAQ;EACfC,MAAM,EAAE;AACT,CAAC;AAED,eAAejB,IAAI;AAAC,IAAAkC,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}