{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\Spotify-Weather\\\\client\\\\src\\\\components\\\\MediaPanel.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Player from \"./Player\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MediaPanel = ({\n  accessToken,\n  trackUri,\n  playlistUri\n}) => {\n  _s();\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  if (!accessToken) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mediaPanel\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mediaPanel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"disk\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Spotify-Player\",\n      children: /*#__PURE__*/_jsxDEV(Player, {\n        accessToken: accessToken,\n        trackUri: trackUri,\n        playlistUri: playlistUri,\n        currentSongIndex: currentSongIndex,\n        setCurrentSongIndex: setCurrentSongIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n};\n_s(MediaPanel, \"zfb40sJ7zTxIXqap3jeQnqIKx7A=\");\n_c = MediaPanel;\nexport default MediaPanel;\nvar _c;\n$RefreshReg$(_c, \"MediaPanel\");","map":{"version":3,"names":["React","Player","jsxDEV","_jsxDEV","MediaPanel","accessToken","trackUri","playlistUri","_s","currentSongIndex","setCurrentSongIndex","useState","className","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/Spotify-Weather/client/src/components/MediaPanel.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Player from \"./Player\";\r\n\r\nconst MediaPanel = ({ accessToken, trackUri, playlistUri }) => {\r\n\tconst [currentSongIndex, setCurrentSongIndex] = useState(0);\r\n\tif (!accessToken) return <div className=\"mediaPanel\"></div>;\r\n\treturn (\r\n\t\t<div className=\"mediaPanel\">\r\n\t\t\t{/* {youtubeSelectedPlaylist && <YoutubePlayer youtubePlaylist={youtubePlaylists[youtubeSelectedPlaylist.id]} handlePrevious={handlePrevious} handleNext={handleNext} handlePlay={handlePlay} handlePause={handlePause} handlePlaylistEnd={handlePlaylistEnd} youtubeCurrentIndex={youtubeCurrentIndex} youtubeIsPlaying={youtubeIsPlaying} handlePlayerReady={handlePlayerReady} />} */}\r\n\t\t\t<div className=\"disk\"></div>\r\n\t\t\t<div className=\"Spotify-Player\">\r\n\t\t\t\t<Player accessToken={accessToken} trackUri={trackUri} playlistUri={playlistUri} currentSongIndex={currentSongIndex} setCurrentSongIndex={setCurrentSongIndex} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MediaPanel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,WAAW;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGC,QAAQ,CAAC,CAAC,CAAC;EAC3D,IAAI,CAACN,WAAW,EAAE,oBAAOF,OAAA;IAAKS,SAAS,EAAC;EAAY;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAC3D,oBACCb,OAAA;IAAKS,SAAS,EAAC,YAAY;IAAAK,QAAA,gBAE1Bd,OAAA;MAAKS,SAAS,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC5Bb,OAAA;MAAKS,SAAS,EAAC,gBAAgB;MAAAK,QAAA,eAC9Bd,OAAA,CAACF,MAAM;QAACI,WAAW,EAAEA,WAAY;QAACC,QAAQ,EAAEA,QAAS;QAACC,WAAW,EAAEA,WAAY;QAACE,gBAAgB,EAAEA,gBAAiB;QAACC,mBAAmB,EAAEA;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5J,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAER,CAAC;AAACR,EAAA,CAZIJ,UAAU;AAAAc,EAAA,GAAVd,UAAU;AAchB,eAAeA,UAAU;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}