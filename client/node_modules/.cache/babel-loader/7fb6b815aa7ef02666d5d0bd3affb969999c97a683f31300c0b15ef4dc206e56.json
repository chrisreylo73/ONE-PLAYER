{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\Users\\chris\\Desktop\\Spotify-Weather\\client\\node_modules\\react-spotify-web-playback\\src\\types\\spotify.ts"],"sourcesContent":["/* eslint-disable camelcase */\ntype SpotifyPlayerMethod<T = void> = () => Promise<T>;\n\nexport type SpotifyPlayerCallback = (token: string) => void;\n\nexport interface SpotifyDevice {\n  id: string;\n  is_active: boolean;\n  is_private_session: boolean;\n  is_restricted: boolean;\n  name: string;\n  type: string;\n  volume_percent: number;\n}\n\nexport interface SpotifyArtist {\n  external_urls: {\n    spotify: string;\n  };\n  href: string;\n  id: string;\n  name: string;\n  type: string;\n  uri: string;\n}\n\nexport interface SpotifyImage {\n  height: number;\n  url: string;\n  width: number;\n}\n\nexport interface SpotifyPlayOptions {\n  context_uri?: string;\n  deviceId: string;\n  offset?: number;\n  uris?: string[];\n}\n\nexport interface SpotifyPlayerStatus {\n  actions: {\n    disallows: {\n      resuming: boolean;\n      skipping_prev: boolean;\n    };\n  };\n  context: null;\n  currently_playing_type: string;\n  device: {\n    id: string;\n    is_active: boolean;\n    is_private_session: false;\n    is_restricted: false;\n    name: string;\n    type: string;\n    volume_percent: number;\n  };\n  is_playing: boolean;\n  item: {\n    album: {\n      album_type: string;\n      artists: SpotifyArtist[];\n      available_markets: string[];\n      external_urls: {\n        spotify: string;\n      };\n      href: string;\n      id: string;\n      images: SpotifyImage[];\n      name: string;\n      release_date: string;\n      release_date_precision: string;\n      total_tracks: number;\n      type: string;\n      uri: string;\n    };\n    artists: SpotifyArtist[];\n    available_markets: string[];\n    disc_number: number;\n    duration_ms: number;\n    explicit: false;\n    external_ids: {\n      isrc: string;\n    };\n    external_urls: {\n      spotify: string;\n    };\n    href: string;\n    id: string;\n    is_local: false;\n    name: string;\n    popularity: number;\n    preview_url: string;\n    track_number: number;\n    type: string;\n    uri: string;\n  };\n  progress_ms: number;\n  repeat_state: string;\n  shuffle_state: false;\n  timestamp: number;\n}\n\nexport interface SpotifyPlayerTrack {\n  artists: string;\n  durationMs: number;\n  id: string;\n  image: string;\n  name: string;\n  uri: string;\n}\n\nexport type WebPlaybackStatuses = 'ready' | 'not_ready';\nexport type WebPlaybackStates = 'player_state_changed';\nexport type WebPlaybackErrors =\n  | 'initialization_error'\n  | 'authentication_error'\n  | 'account_error'\n  | 'playback_error';\n\nexport interface WebPlaybackError {\n  message: WebPlaybackErrors;\n}\n\nexport interface WebPlaybackPlayer {\n  _options: {\n    getOAuthToken: SpotifyPlayerCallback;\n    id: string;\n    name: string;\n    volume: number;\n  };\n  addListener: {\n    (event: WebPlaybackErrors, callback: (d: WebPlaybackError) => void): boolean;\n    (event: WebPlaybackStates, callback: (d: WebPlaybackState | null) => void): boolean;\n    (event: WebPlaybackStatuses, callback: (d: WebPlaybackReady) => void): boolean;\n  };\n  connect: SpotifyPlayerMethod;\n  disconnect: () => void;\n  getCurrentState: () => Promise<WebPlaybackState | null>;\n  getVolume: SpotifyPlayerMethod<number>;\n  nextTrack: SpotifyPlayerMethod;\n  pause: SpotifyPlayerMethod;\n  previousTrack: SpotifyPlayerMethod;\n  removeListener: (\n    event: WebPlaybackErrors | WebPlaybackStates | WebPlaybackStatuses,\n    callback?: () => void,\n  ) => boolean;\n  resume: SpotifyPlayerMethod;\n  seek: (positionMS: number) => Promise<void>;\n  setName: (n: string) => Promise<void>;\n  setVolume: (n: number) => Promise<void>;\n  togglePlay: SpotifyPlayerMethod;\n}\n\nexport interface WebPlaybackReady {\n  device_id: string;\n}\n\nexport interface WebPlaybackState {\n  bitrate: number;\n  context: {\n    metadata: Record<string, unknown>;\n    uri: null;\n  };\n  disallows: {\n    resuming: boolean;\n    skipping_prev: boolean;\n  };\n  duration: number;\n  paused: boolean;\n  position: number;\n  repeat_mode: number;\n  restrictions: {\n    disallow_resuming_reasons: [];\n    disallow_skipping_prev_reasons: [];\n  };\n  shuffle: boolean;\n  timestamp: number;\n  track_window: {\n    current_track: WebPlaybackTrack;\n    next_tracks: WebPlaybackTrack[];\n    previous_tracks: WebPlaybackTrack[];\n  };\n}\n\nexport interface WebPlaybackAlbum {\n  images: WebPlaybackImage[];\n  name: string;\n  uri: string;\n}\n\nexport interface WebPlaybackArtist {\n  name: string;\n  uri: string;\n}\n\nexport interface WebPlaybackImage {\n  height: number;\n  url: string;\n  width: number;\n}\n\nexport interface WebPlaybackTrack {\n  album: WebPlaybackAlbum;\n  artists: WebPlaybackArtist[];\n  duration_ms: number;\n  id: string;\n  is_playable: boolean;\n  linked_from: {\n    id: null | string;\n    uri: null | string;\n  };\n  linked_from_uri: null | string;\n  media_type: string;\n  name: string;\n  type: string;\n  uri: string;\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}