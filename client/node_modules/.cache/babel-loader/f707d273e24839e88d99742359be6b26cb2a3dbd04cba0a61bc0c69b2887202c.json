{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\Spotify-Weather\\\\client\\\\src\\\\components\\\\Player.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player({\n  accessToken,\n  trackUri,\n  playlistUris\n}) {\n  _s();\n  const [play, setPlay] = useState(false);\n  const [currentTrackUri, setCurrentTrackUri] = useState(trackUri);\n  useEffect(() => {\n    setPlay(true);\n    setCurrentTrackUri(trackUri);\n\n    // Find the index of the trackUri in the playlistUris array\n    const trackIndex = playlistUris.findIndex(uri => uri === trackUri);\n\n    // Move the trackUri to the front of the playlistUris array\n    if (trackIndex > -1) {\n      const updatedPlaylistUris = [playlistUris[trackIndex], ...playlistUris.slice(0, trackIndex), ...playlistUris.slice(trackIndex + 1)];\n\n      // Update the playlistUris with the trackUri moved to the front\n      setPlaylistUris(updatedPlaylistUris);\n    }\n  }, [trackUri]);\n  return /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n    styles: {\n      activeColor: \"#fff\",\n      bgColor: \"#242424\",\n      color: \"#fff\",\n      loaderColor: \"#fff\",\n      sliderColor: \"#1cb954\",\n      trackArtistColor: \"#ccc\",\n      trackNameColor: \"#fff\"\n    },\n    token: accessToken,\n    showSaveIcon: true,\n    callback: state => {\n      if (!state.isPlaying) setPlay(false);\n    },\n    play: play,\n    uris: playlistUris ? [playlistUris[0], currentTrackUri] : [currentTrackUri]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n}\n_s(Player, \"2O4xMgmgxUpl2Wa2exv8ARKGV08=\");\n_c = Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["useState","useEffect","SpotifyPlayer","jsxDEV","_jsxDEV","Player","accessToken","trackUri","playlistUris","_s","play","setPlay","currentTrackUri","setCurrentTrackUri","trackIndex","findIndex","uri","updatedPlaylistUris","slice","setPlaylistUris","styles","activeColor","bgColor","color","loaderColor","sliderColor","trackArtistColor","trackNameColor","token","showSaveIcon","callback","state","isPlaying","uris","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/Spotify-Weather/client/src/components/Player.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\n\nexport default function Player({ accessToken, trackUri, playlistUris }) {\n\tconst [play, setPlay] = useState(false);\n\tconst [currentTrackUri, setCurrentTrackUri] = useState(trackUri);\n\n\tuseEffect(() => {\n\t\tsetPlay(true);\n\t\tsetCurrentTrackUri(trackUri);\n\n\t\t// Find the index of the trackUri in the playlistUris array\n\t\tconst trackIndex = playlistUris.findIndex((uri) => uri === trackUri);\n\n\t\t// Move the trackUri to the front of the playlistUris array\n\t\tif (trackIndex > -1) {\n\t\t\tconst updatedPlaylistUris = [playlistUris[trackIndex], ...playlistUris.slice(0, trackIndex), ...playlistUris.slice(trackIndex + 1)];\n\n\t\t\t// Update the playlistUris with the trackUri moved to the front\n\t\t\tsetPlaylistUris(updatedPlaylistUris);\n\t\t}\n\t}, [trackUri]);\n\n\treturn (\n\t\t<SpotifyPlayer\n\t\t\tstyles={{\n\t\t\t\tactiveColor: \"#fff\",\n\t\t\t\tbgColor: \"#242424\",\n\t\t\t\tcolor: \"#fff\",\n\t\t\t\tloaderColor: \"#fff\",\n\t\t\t\tsliderColor: \"#1cb954\",\n\t\t\t\ttrackArtistColor: \"#ccc\",\n\t\t\t\ttrackNameColor: \"#fff\",\n\t\t\t}}\n\t\t\ttoken={accessToken}\n\t\t\tshowSaveIcon\n\t\t\tcallback={(state) => {\n\t\t\t\tif (!state.isPlaying) setPlay(false);\n\t\t\t}}\n\t\t\tplay={play}\n\t\t\turis={playlistUris ? [playlistUris[0], currentTrackUri] : [currentTrackUri]}\n\t\t/>\n\t);\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,eAAe,SAASC,MAAMA,CAAC;EAAEC,WAAW;EAAEC,QAAQ;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACvE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAACO,QAAQ,CAAC;EAEhEN,SAAS,CAAC,MAAM;IACfU,OAAO,CAAC,IAAI,CAAC;IACbE,kBAAkB,CAACN,QAAQ,CAAC;;IAE5B;IACA,MAAMO,UAAU,GAAGN,YAAY,CAACO,SAAS,CAAEC,GAAG,IAAKA,GAAG,KAAKT,QAAQ,CAAC;;IAEpE;IACA,IAAIO,UAAU,GAAG,CAAC,CAAC,EAAE;MACpB,MAAMG,mBAAmB,GAAG,CAACT,YAAY,CAACM,UAAU,CAAC,EAAE,GAAGN,YAAY,CAACU,KAAK,CAAC,CAAC,EAAEJ,UAAU,CAAC,EAAE,GAAGN,YAAY,CAACU,KAAK,CAACJ,UAAU,GAAG,CAAC,CAAC,CAAC;;MAEnI;MACAK,eAAe,CAACF,mBAAmB,CAAC;IACrC;EACD,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;EAEd,oBACCH,OAAA,CAACF,aAAa;IACbkB,MAAM,EAAE;MACPC,WAAW,EAAE,MAAM;MACnBC,OAAO,EAAE,SAAS;MAClBC,KAAK,EAAE,MAAM;MACbC,WAAW,EAAE,MAAM;MACnBC,WAAW,EAAE,SAAS;MACtBC,gBAAgB,EAAE,MAAM;MACxBC,cAAc,EAAE;IACjB,CAAE;IACFC,KAAK,EAAEtB,WAAY;IACnBuB,YAAY;IACZC,QAAQ,EAAGC,KAAK,IAAK;MACpB,IAAI,CAACA,KAAK,CAACC,SAAS,EAAErB,OAAO,CAAC,KAAK,CAAC;IACrC,CAAE;IACFD,IAAI,EAAEA,IAAK;IACXuB,IAAI,EAAEzB,YAAY,GAAG,CAACA,YAAY,CAAC,CAAC,CAAC,EAAEI,eAAe,CAAC,GAAG,CAACA,eAAe;EAAE;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5E,CAAC;AAEJ;AAAC5B,EAAA,CAxCuBJ,MAAM;AAAAiC,EAAA,GAANjC,MAAM;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}