{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\Spotify-Weather\\\\client\\\\src\\\\components\\\\Tracks.jsx\",\n  _s = $RefreshSig$();\nimport SpotifySong from \"./SpotifySong\";\nimport YoutubeSong from \"./YoutubeSong\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tracks = ({\n  spotifySelectedPlaylist,\n  youtubeSelectedPlaylist,\n  youtubePlaylistTracks,\n  youtubeChooseTrack,\n  spotifyPlaylistTracks,\n  spotifyChooseTrack\n}) => {\n  _s();\n  useEffect(() => {\n    if (spotifySelectedPlaylist == null && youtubeSelectedPlaylist == null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tracks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 11\n      }, this);\n    } else if (spotifySelectedPlaylist == null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tracks\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playlistHeaders-youtube\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              textTransform: \"uppercase\"\n            },\n            children: youtubeSelectedPlaylist.playlistTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tracks-content\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: youtubePlaylistTracks.map(youtubePlaylistTrack => {\n              return /*#__PURE__*/_jsxDEV(YoutubeSong, {\n                youtubeChooseTrack: youtubeChooseTrack,\n                track: youtubePlaylistTrack\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 16\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }, this);\n    } else if (youtubeSelectedPlaylist == null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tracks\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playlistHeaders-spotify\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              textTransform: \"uppercase\"\n            },\n            children: spotifySelectedPlaylist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tracks-content\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: spotifyPlaylistTracks.map(playlistTrack => {\n              const track = playlistTrack.track;\n              return /*#__PURE__*/_jsxDEV(SpotifySong, {\n                spotifyChooseTrack: spotifyChooseTrack,\n                track: track\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 16\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tracks\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playlistHeaders-spotify\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              textTransform: \"uppercase\"\n            },\n            children: spotifySelectedPlaylist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tracks-content\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: spotifyPlaylistTracks.map(playlistTrack => {\n              const track = playlistTrack.track;\n              return /*#__PURE__*/_jsxDEV(SpotifySong, {\n                spotifyChooseTrack: spotifyChooseTrack,\n                track: track\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 16\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playlistHeaders-youtube\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              textTransform: \"uppercase\"\n            },\n            children: youtubeSelectedPlaylist.playlistTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tracks-content\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: youtubePlaylistTracks.map(youtubePlaylistTrack => {\n              return /*#__PURE__*/_jsxDEV(YoutubeSong, {\n                youtubeChooseTrack: youtubeChooseTrack,\n                track: youtubePlaylistTrack\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 16\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this);\n    }\n  }, [spotifySelectedPlaylist]);\n};\n_s(Tracks, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Tracks;\nexport default Tracks;\nvar _c;\n$RefreshReg$(_c, \"Tracks\");","map":{"version":3,"names":["SpotifySong","YoutubeSong","useEffect","jsxDEV","_jsxDEV","Tracks","spotifySelectedPlaylist","youtubeSelectedPlaylist","youtubePlaylistTracks","youtubeChooseTrack","spotifyPlaylistTracks","spotifyChooseTrack","_s","className","fileName","_jsxFileName","lineNumber","columnNumber","children","style","textTransform","playlistTitle","map","youtubePlaylistTrack","track","name","playlistTrack","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/Spotify-Weather/client/src/components/Tracks.jsx"],"sourcesContent":["import SpotifySong from \"./SpotifySong\";\r\nimport YoutubeSong from \"./YoutubeSong\";\r\nimport { useEffect } from \"react\";\r\nconst Tracks = ({ spotifySelectedPlaylist, youtubeSelectedPlaylist, youtubePlaylistTracks, youtubeChooseTrack, spotifyPlaylistTracks, spotifyChooseTrack }) => {\r\n\tuseEffect(() => {\r\n\t\tif (spotifySelectedPlaylist == null && youtubeSelectedPlaylist == null) {\r\n\t\t\treturn <div className=\"tracks\"></div>;\r\n\t\t} else if (spotifySelectedPlaylist == null) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"tracks\">\r\n\t\t\t\t\t<div className=\"playlistHeaders-youtube\">\r\n\t\t\t\t\t\t<h3 style={{ textTransform: \"uppercase\" }}>{youtubeSelectedPlaylist.playlistTitle}</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"tracks-content\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{youtubePlaylistTracks.map((youtubePlaylistTrack) => {\r\n\t\t\t\t\t\t\t\treturn <YoutubeSong youtubeChooseTrack={youtubeChooseTrack} track={youtubePlaylistTrack} />;\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else if (youtubeSelectedPlaylist == null) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"tracks\">\r\n\t\t\t\t\t<div className=\"playlistHeaders-spotify\">\r\n\t\t\t\t\t\t<h3 style={{ textTransform: \"uppercase\" }}>{spotifySelectedPlaylist.name}</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"tracks-content\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{spotifyPlaylistTracks.map((playlistTrack) => {\r\n\t\t\t\t\t\t\t\tconst track = playlistTrack.track;\r\n\t\t\t\t\t\t\t\treturn <SpotifySong spotifyChooseTrack={spotifyChooseTrack} track={track} />;\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"tracks\">\r\n\t\t\t\t\t<div className=\"playlistHeaders-spotify\">\r\n\t\t\t\t\t\t<h3 style={{ textTransform: \"uppercase\" }}>{spotifySelectedPlaylist.name}</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"tracks-content\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{spotifyPlaylistTracks.map((playlistTrack) => {\r\n\t\t\t\t\t\t\t\tconst track = playlistTrack.track;\r\n\t\t\t\t\t\t\t\treturn <SpotifySong spotifyChooseTrack={spotifyChooseTrack} track={track} />;\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"playlistHeaders-youtube\">\r\n\t\t\t\t\t\t<h3 style={{ textTransform: \"uppercase\" }}>{youtubeSelectedPlaylist.playlistTitle}</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"tracks-content\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{youtubePlaylistTracks.map((youtubePlaylistTrack) => {\r\n\t\t\t\t\t\t\t\treturn <YoutubeSong youtubeChooseTrack={youtubeChooseTrack} track={youtubePlaylistTrack} />;\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}, [spotifySelectedPlaylist]);\r\n};\r\n\r\nexport default Tracks;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}