{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\spotify-clone-main\\\\client\\\\src\\\\components\\\\Song.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Song = _ref => {\n  let {\n    title,\n    artist,\n    album,\n    length,\n    albumCover,\n    playTrack\n  } = _ref;\n  const minutes = Math.floor(length / 60000);\n  const seconds = Math.floor(length % 60000 / 1000);\n  const formattedLength = length ? `${minutes}:${seconds.toString().padStart(2, '0')}` : 'length?';\n  const handleSongClick = () => {\n    const track = {\n      title,\n      artist,\n      album,\n      length,\n      albumCover,\n      uri: 'https://api.spotify.com/v1' // Provide a default URI value\n    };\n\n    playTrack(track);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"song\",\n    onClick: handleSongClick,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"album-cover\",\n      src: albumCover,\n      alt: \"Album Cover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"songInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"artist\",\n        children: artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: formattedLength\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = Song;\nSong.defaultProps = {\n  title: 'Title?',\n  album: 'Album?',\n  length: 'Length?'\n};\nexport default Song;\nvar _c;\n$RefreshReg$(_c, \"Song\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Song","_ref","title","artist","album","length","albumCover","playTrack","minutes","Math","floor","seconds","formattedLength","toString","padStart","handleSongClick","track","uri","className","onClick","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","defaultProps","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/spotify-clone-main/client/src/components/Song.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst Song = ({ title, artist, album, length, albumCover, playTrack }) => {\r\n  const minutes = Math.floor(length / 60000);\r\n  const seconds = Math.floor((length % 60000) / 1000);\r\n  const formattedLength = length ? `${minutes}:${seconds.toString().padStart(2, '0')}` : 'length?';\r\n\r\n  const handleSongClick = () => {\r\n    const track = {\r\n      title,\r\n      artist,\r\n      album,\r\n      length,\r\n      albumCover,\r\n      uri: 'https://api.spotify.com/v1' // Provide a default URI value\r\n    };\r\n    playTrack(track);\r\n  };\r\n\r\n  return (\r\n    <div className=\"song\" onClick={handleSongClick}>\r\n      <img className=\"album-cover\" src={albumCover} alt=\"Album Cover\" />\r\n      <div className=\"songInfo\">\r\n        <p id=\"title\">{title}</p>\r\n        <p id=\"artist\">{artist}</p>\r\n      </div>\r\n      <p>{formattedLength}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nSong.defaultProps = {\r\n  title: 'Title?',\r\n  album: 'Album?',\r\n  length: 'Length?'\r\n};\r\n\r\nexport default Song;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGC,IAAA,IAA6D;EAAA,IAA5D;IAAEC,KAAK;IAAEC,MAAM;IAAEC,KAAK;IAAEC,MAAM;IAAEC,UAAU;IAAEC;EAAU,CAAC,GAAAN,IAAA;EACnE,MAAMO,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACL,MAAM,GAAG,KAAK,CAAC;EAC1C,MAAMM,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEL,MAAM,GAAG,KAAK,GAAI,IAAI,CAAC;EACnD,MAAMO,eAAe,GAAGP,MAAM,GAAI,GAAEG,OAAQ,IAAGG,OAAO,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC,GAAG,SAAS;EAEhG,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,KAAK,GAAG;MACZd,KAAK;MACLC,MAAM;MACNC,KAAK;MACLC,MAAM;MACNC,UAAU;MACVW,GAAG,EAAE,4BAA4B,CAAC;IACpC,CAAC;;IACDV,SAAS,CAACS,KAAK,CAAC;EAClB,CAAC;EAED,oBACEjB,OAAA;IAAKmB,SAAS,EAAC,MAAM;IAACC,OAAO,EAAEJ,eAAgB;IAAAK,QAAA,gBAC7CrB,OAAA;MAAKmB,SAAS,EAAC,aAAa;MAACG,GAAG,EAAEf,UAAW;MAACgB,GAAG,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClE3B,OAAA;MAAKmB,SAAS,EAAC,UAAU;MAAAE,QAAA,gBACvBrB,OAAA;QAAG4B,EAAE,EAAC,OAAO;QAAAP,QAAA,EAAElB;MAAK;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzB3B,OAAA;QAAG4B,EAAE,EAAC,QAAQ;QAAAP,QAAA,EAAEjB;MAAM;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACN3B,OAAA;MAAAqB,QAAA,EAAIR;IAAe;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV,CAAC;AAACE,EAAA,GA3BI5B,IAAI;AA6BVA,IAAI,CAAC6B,YAAY,GAAG;EAClB3B,KAAK,EAAE,QAAQ;EACfE,KAAK,EAAE,QAAQ;EACfC,MAAM,EAAE;AACV,CAAC;AAED,eAAeL,IAAI;AAAC,IAAA4B,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}