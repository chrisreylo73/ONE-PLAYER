{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\Spotify-Weather\\\\client\\\\src\\\\components\\\\MediaPanel.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Player from \"./Player\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MediaPanel = ({\n  accessToken,\n  trackUri,\n  playlistUri,\n  playlistAlbumCovers\n}) => {\n  _s();\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  const [currentAlbumCover, setCurrentAlbumCover] = useState(\"\");\n  if (!accessToken) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mediaPanel\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 27\n  }, this);\n\n  // Access the image URL using the currentSongIndex\n  useEffect(() => {\n    if (playlistAlbumCovers && playlistAlbumCovers.length > currentSongIndex) {\n      setCurrentAlbumCover(playlistAlbumCovers[currentSongIndex]);\n    }\n  }, [currentSongIndex, playlistAlbumCovers]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mediaPanel\",\n    children: [currentAlbumCover && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: currentAlbumCover,\n      alt: \"Album Cover\",\n      className: \"albumCover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Spotify-Player\",\n      children: /*#__PURE__*/_jsxDEV(Player, {\n        accessToken: accessToken,\n        trackUri: trackUri,\n        playlistUri: playlistUri,\n        currentSongIndex: currentSongIndex,\n        setCurrentSongIndex: setCurrentSongIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n};\n_s(MediaPanel, \"gnPVImo2Vqy9OuXAuIdfJ+P3ES8=\");\n_c = MediaPanel;\nexport default MediaPanel;\nvar _c;\n$RefreshReg$(_c, \"MediaPanel\");","map":{"version":3,"names":["React","Player","useState","useEffect","jsxDEV","_jsxDEV","MediaPanel","accessToken","trackUri","playlistUri","playlistAlbumCovers","_s","currentSongIndex","setCurrentSongIndex","currentAlbumCover","setCurrentAlbumCover","className","fileName","_jsxFileName","lineNumber","columnNumber","length","children","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/Spotify-Weather/client/src/components/MediaPanel.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Player from \"./Player\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst MediaPanel = ({ accessToken, trackUri, playlistUri, playlistAlbumCovers }) => {\r\n\tconst [currentSongIndex, setCurrentSongIndex] = useState(0);\r\n\tconst [currentAlbumCover, setCurrentAlbumCover] = useState(\"\");\r\n\r\n\tif (!accessToken) return <div className=\"mediaPanel\"></div>;\r\n\r\n\t// Access the image URL using the currentSongIndex\r\n\tuseEffect(() => {\r\n\t\tif (playlistAlbumCovers && playlistAlbumCovers.length > currentSongIndex) {\r\n\t\t\tsetCurrentAlbumCover(playlistAlbumCovers[currentSongIndex]);\r\n\t\t}\r\n\t}, [currentSongIndex, playlistAlbumCovers]);\r\n\r\n\treturn (\r\n\t\t<div className=\"mediaPanel\">\r\n\t\t\t{/* Render the image */}\r\n\t\t\t{currentAlbumCover && <img src={currentAlbumCover} alt=\"Album Cover\" className=\"albumCover\" />}\r\n\r\n\t\t\t{/* Your existing code */}\r\n\t\t\t{/* <div className=\"disk\"></div> */}\r\n\t\t\t<div className=\"Spotify-Player\">\r\n\t\t\t\t<Player accessToken={accessToken} trackUri={trackUri} playlistUri={playlistUri} currentSongIndex={currentSongIndex} setCurrentSongIndex={setCurrentSongIndex} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MediaPanel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,UAAU,GAAGA,CAAC;EAAEC,WAAW;EAAEC,QAAQ;EAAEC,WAAW;EAAEC;AAAoB,CAAC,KAAK;EAAAC,EAAA;EACnF,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACY,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE9D,IAAI,CAACK,WAAW,EAAE,oBAAOF,OAAA;IAAKW,SAAS,EAAC;EAAY;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;;EAE3D;EACAjB,SAAS,CAAC,MAAM;IACf,IAAIO,mBAAmB,IAAIA,mBAAmB,CAACW,MAAM,GAAGT,gBAAgB,EAAE;MACzEG,oBAAoB,CAACL,mBAAmB,CAACE,gBAAgB,CAAC,CAAC;IAC5D;EACD,CAAC,EAAE,CAACA,gBAAgB,EAAEF,mBAAmB,CAAC,CAAC;EAE3C,oBACCL,OAAA;IAAKW,SAAS,EAAC,YAAY;IAAAM,QAAA,GAEzBR,iBAAiB,iBAAIT,OAAA;MAAKkB,GAAG,EAAET,iBAAkB;MAACU,GAAG,EAAC,aAAa;MAACR,SAAS,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAI9Ff,OAAA;MAAKW,SAAS,EAAC,gBAAgB;MAAAM,QAAA,eAC9BjB,OAAA,CAACJ,MAAM;QAACM,WAAW,EAAEA,WAAY;QAACC,QAAQ,EAAEA,QAAS;QAACC,WAAW,EAAEA,WAAY;QAACG,gBAAgB,EAAEA,gBAAiB;QAACC,mBAAmB,EAAEA;MAAoB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5J,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAER,CAAC;AAACT,EAAA,CAzBIL,UAAU;AAAAmB,EAAA,GAAVnB,UAAU;AA2BhB,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}