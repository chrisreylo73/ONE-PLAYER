{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\Spotify-Weather\\\\client\\\\src\\\\components\\\\YoutubeSong.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YoutubeSong = ({\n  youtubeChooseTrack,\n  track,\n  setIsSpotifySong\n}) => {\n  const minutes = Math.floor(track.duration_ms / 60000);\n  const seconds = Math.floor(track.duration_ms % 60000 / 1000);\n  const formattedLength = track.duration_ms ? `${minutes}:${seconds.toString().padStart(2, \"0\")}` : \"length?\";\n  function handlePlay() {\n    setIsSpotifySong(false);\n    youtubeChooseTrack(track.songId); // chooseTrack(track);\n  }\n  //onClick={handlePlay}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"song\",\n    onClick: handlePlay,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"songInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"title\",\n        children: track.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"artist\",\n        children: track.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n};\n_c = YoutubeSong;\nYoutubeSong.defaultProps = {\n  title: \"Title?\",\n  album: \"Album?\",\n  length: \"Length?\"\n};\nexport default YoutubeSong;\n// const albumCover = track.album.images[0].url;\n// const title = track.name;\n// const artist = track.artists[0].name;\n// const album = track.album.name;\n// const length = track.duration_ms;\nvar _c;\n$RefreshReg$(_c, \"YoutubeSong\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","YoutubeSong","youtubeChooseTrack","track","setIsSpotifySong","minutes","Math","floor","duration_ms","seconds","formattedLength","toString","padStart","handlePlay","songId","className","onClick","children","id","name","fileName","_jsxFileName","lineNumber","columnNumber","artist","_c","defaultProps","title","album","length","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/Spotify-Weather/client/src/components/YoutubeSong.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst YoutubeSong = ({ youtubeChooseTrack, track, setIsSpotifySong }) => {\r\n\tconst minutes = Math.floor(track.duration_ms / 60000);\r\n\tconst seconds = Math.floor((track.duration_ms % 60000) / 1000);\r\n\tconst formattedLength = track.duration_ms ? `${minutes}:${seconds.toString().padStart(2, \"0\")}` : \"length?\";\r\n\tfunction handlePlay() {\r\n\t\tsetIsSpotifySong(false);\r\n\t\tyoutubeChooseTrack(track.songId); // chooseTrack(track);\r\n\t}\r\n\t//onClick={handlePlay}\r\n\treturn (\r\n\t\t<div className=\"song\" onClick={handlePlay}>\r\n\t\t\t{/* <img className=\"album-cover\" src={track.album.images[0].url} alt=\"Album Cover\" /> */}\r\n\t\t\t<div className=\"songInfo\">\r\n\t\t\t\t<p id=\"title\">{track.name}</p>\r\n\t\t\t\t<p id=\"artist\">{track.artist}</p>\r\n\t\t\t\t{/* <p id=\"artist\">{track.artists[0].name}</p> */}\r\n\t\t\t</div>\r\n\t\t\t{/* <p>{formattedLength}</p> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nYoutubeSong.defaultProps = {\r\n\ttitle: \"Title?\",\r\n\talbum: \"Album?\",\r\n\tlength: \"Length?\",\r\n};\r\n\r\nexport default YoutubeSong;\r\n// const albumCover = track.album.images[0].url;\r\n// const title = track.name;\r\n// const artist = track.artists[0].name;\r\n// const album = track.album.name;\r\n// const length = track.duration_ms;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,kBAAkB;EAAEC,KAAK;EAAEC;AAAiB,CAAC,KAAK;EACxE,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACJ,KAAK,CAACK,WAAW,GAAG,KAAK,CAAC;EACrD,MAAMC,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAEJ,KAAK,CAACK,WAAW,GAAG,KAAK,GAAI,IAAI,CAAC;EAC9D,MAAME,eAAe,GAAGP,KAAK,CAACK,WAAW,GAAI,GAAEH,OAAQ,IAAGI,OAAO,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC,GAAG,SAAS;EAC3G,SAASC,UAAUA,CAAA,EAAG;IACrBT,gBAAgB,CAAC,KAAK,CAAC;IACvBF,kBAAkB,CAACC,KAAK,CAACW,MAAM,CAAC,CAAC,CAAC;EACnC;EACA;EACA,oBACCd,OAAA;IAAKe,SAAS,EAAC,MAAM;IAACC,OAAO,EAAEH,UAAW;IAAAI,QAAA,eAEzCjB,OAAA;MAAKe,SAAS,EAAC,UAAU;MAAAE,QAAA,gBACxBjB,OAAA;QAAGkB,EAAE,EAAC,OAAO;QAAAD,QAAA,EAAEd,KAAK,CAACgB;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BvB,OAAA;QAAGkB,EAAE,EAAC,QAAQ;QAAAD,QAAA,EAAEd,KAAK,CAACqB;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE7B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEF,CAAC;AAER,CAAC;AAACE,EAAA,GApBIxB,WAAW;AAsBjBA,WAAW,CAACyB,YAAY,GAAG;EAC1BC,KAAK,EAAE,QAAQ;EACfC,KAAK,EAAE,QAAQ;EACfC,MAAM,EAAE;AACT,CAAC;AAED,eAAe5B,WAAW;AAC1B;AACA;AACA;AACA;AACA;AAAA,IAAAwB,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}