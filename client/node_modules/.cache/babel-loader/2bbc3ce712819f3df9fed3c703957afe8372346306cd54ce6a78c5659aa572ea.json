{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\spotify-clone-main\\\\client\\\\src\\\\components\\\\Tracks.jsx\";\nimport Song from \"./Song\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tracks = ({\n  spotifySelectedPlaylist,\n  youtubeSelectedPlaylist,\n  youtubePlaylistTracks,\n  spotifyPlaylistTracks,\n  chooseTrack\n}) => {\n  if (!spotifySelectedPlaylist) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 4\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tracks\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlistHeaders-spotify\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: spotifySelectedPlaylist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracks-content\",\n      children: [spotifyPlaylistTracks.length > 0, /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: spotifyPlaylistTracks.map(playlistTrack => {\n          const track = playlistTrack.track;\n          return /*#__PURE__*/_jsxDEV(Song, {\n            chooseTrack: chooseTrack,\n            track: track\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 14\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlistHeaders-youtube\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: youtubeSelectedPlaylist.playlistTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tracks-content\",\n        children: [youtubePlaylistTracks.length > 0, /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: youtubePlaylistTracks.map(youtubePlaylistTrack => {\n            // const track = playlistTrack.track;\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: youtubePlaylistTrack.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this);\n            return /*#__PURE__*/_jsxDEV(Song, {\n              track: youtubePlaylistTrack\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }, this);\n};\n_c = Tracks;\nexport default Tracks;\nvar _c;\n$RefreshReg$(_c, \"Tracks\");","map":{"version":3,"names":["Song","jsxDEV","_jsxDEV","Tracks","spotifySelectedPlaylist","youtubeSelectedPlaylist","youtubePlaylistTracks","spotifyPlaylistTracks","chooseTrack","className","fileName","_jsxFileName","lineNumber","columnNumber","children","name","length","map","playlistTrack","track","playlistTitle","youtubePlaylistTrack","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/spotify-clone-main/client/src/components/Tracks.jsx"],"sourcesContent":["import Song from \"./Song\";\r\n\r\nconst Tracks = ({ spotifySelectedPlaylist, youtubeSelectedPlaylist, youtubePlaylistTracks, spotifyPlaylistTracks, chooseTrack }) => {\r\n\tif (!spotifySelectedPlaylist) {\r\n\t\treturn (\r\n\t\t\t<div className=\"tracks\">\r\n\t\t\t\t{/* <div className=\"playlistHeaders-spotify\">\r\n\t\t\t\t\t<h3>Spotify Playlist</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"playlistHeaders-youtube\">\r\n\t\t\t\t\t<h3>Youtube Playlist</h3>\r\n\t\t\t\t</div> */}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"tracks\">\r\n\t\t\t<div className=\"playlistHeaders-spotify\">\r\n\t\t\t\t<h3>{spotifySelectedPlaylist.name}</h3>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"tracks-content\">\r\n\t\t\t\t{spotifyPlaylistTracks.length > 0}\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{spotifyPlaylistTracks.map((playlistTrack) => {\r\n\t\t\t\t\t\tconst track = playlistTrack.track;\r\n\t\t\t\t\t\treturn <Song chooseTrack={chooseTrack} track={track} />;\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"playlistHeaders-youtube\">\r\n\t\t\t\t<h3>{youtubeSelectedPlaylist.playlistTitle}</h3>\r\n\t\t\t\t<div className=\"tracks-content\">\r\n\t\t\t\t\t{youtubePlaylistTracks.length > 0}\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{youtubePlaylistTracks.map((youtubePlaylistTrack) => {\r\n\t\t\t\t\t\t\t// const track = playlistTrack.track;\r\n\t\t\t\t\t\t\treturn <p>{youtubePlaylistTrack.name}</p>;\r\n\t\t\t\t\t\t\treturn <Song track={youtubePlaylistTrack} />;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Tracks;\r\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGA,CAAC;EAAEC,uBAAuB;EAAEC,uBAAuB;EAAEC,qBAAqB;EAAEC,qBAAqB;EAAEC;AAAY,CAAC,KAAK;EACnI,IAAI,CAACJ,uBAAuB,EAAE;IAC7B,oBACCF,OAAA;MAAKO,SAAS,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOlB,CAAC;EAER;EAEA,oBACCX,OAAA;IAAKO,SAAS,EAAC,QAAQ;IAAAK,QAAA,gBACtBZ,OAAA;MAAKO,SAAS,EAAC,yBAAyB;MAAAK,QAAA,eACvCZ,OAAA;QAAAY,QAAA,EAAKV,uBAAuB,CAACW;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACNX,OAAA;MAAKO,SAAS,EAAC,gBAAgB;MAAAK,QAAA,GAC7BP,qBAAqB,CAACS,MAAM,GAAG,CAAC,eACjCd,OAAA;QAAAY,QAAA,EACEP,qBAAqB,CAACU,GAAG,CAAEC,aAAa,IAAK;UAC7C,MAAMC,KAAK,GAAGD,aAAa,CAACC,KAAK;UACjC,oBAAOjB,OAAA,CAACF,IAAI;YAACQ,WAAW,EAAEA,WAAY;YAACW,KAAK,EAAEA;UAAM;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QACxD,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAENX,OAAA;MAAKO,SAAS,EAAC,yBAAyB;MAAAK,QAAA,gBACvCZ,OAAA;QAAAY,QAAA,EAAKT,uBAAuB,CAACe;MAAa;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChDX,OAAA;QAAKO,SAAS,EAAC,gBAAgB;QAAAK,QAAA,GAC7BR,qBAAqB,CAACU,MAAM,GAAG,CAAC,eACjCd,OAAA;UAAAY,QAAA,EACER,qBAAqB,CAACW,GAAG,CAAEI,oBAAoB,IAAK;YACpD;YACA,oBAAOnB,OAAA;cAAAY,QAAA,EAAIO,oBAAoB,CAACN;YAAI;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;YACzC,oBAAOX,OAAA,CAACF,IAAI;cAACmB,KAAK,EAAEE;YAAqB;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAC7C,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAER,CAAC;AAACS,EAAA,GA5CInB,MAAM;AA8CZ,eAAeA,MAAM;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}