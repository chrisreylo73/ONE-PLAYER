{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\spotify-clone-main\\\\client\\\\src\\\\components\\\\YoutubeSong.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YoutubeSong = ({\n  chooseTrack,\n  track\n}) => {\n  const minutes = Math.floor(track.duration_ms / 60000);\n  const seconds = Math.floor(track.duration_ms % 60000 / 1000);\n  const formattedLength = track.duration_ms ? `${minutes}:${seconds.toString().padStart(2, \"0\")}` : \"length?\";\n  function handlePlay() {\n    chooseTrack(track);\n  }\n  //onClick={handlePlay}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"song\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"songInfo\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"title\",\n        children: track.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n};\n_c = YoutubeSong;\nSong.defaultProps = {\n  title: \"Title?\",\n  album: \"Album?\",\n  length: \"Length?\"\n};\nexport default YoutubeSong;\n// const albumCover = track.album.images[0].url;\n// const title = track.name;\n// const artist = track.artists[0].name;\n// const album = track.album.name;\n// const length = track.duration_ms;\nvar _c;\n$RefreshReg$(_c, \"YoutubeSong\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","YoutubeSong","chooseTrack","track","minutes","Math","floor","duration_ms","seconds","formattedLength","toString","padStart","handlePlay","className","children","id","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","Song","defaultProps","title","album","length","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/spotify-clone-main/client/src/components/YoutubeSong.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst YoutubeSong = ({ chooseTrack, track }) => {\r\n\tconst minutes = Math.floor(track.duration_ms / 60000);\r\n\tconst seconds = Math.floor((track.duration_ms % 60000) / 1000);\r\n\tconst formattedLength = track.duration_ms ? `${minutes}:${seconds.toString().padStart(2, \"0\")}` : \"length?\";\r\n\tfunction handlePlay() {\r\n\t\tchooseTrack(track);\r\n\t}\r\n\t//onClick={handlePlay}\r\n\treturn (\r\n\t\t<div className=\"song\">\r\n\t\t\t{/* <img className=\"album-cover\" src={track.album.images[0].url} alt=\"Album Cover\" /> */}\r\n\t\t\t<div className=\"songInfo\">\r\n\t\t\t\t<p id=\"title\">{track.name}</p>\r\n\t\t\t\t{/* <p id=\"artist\">{track.artists[0].name}</p> */}\r\n\t\t\t</div>\r\n\t\t\t{/* <p>{formattedLength}</p> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nSong.defaultProps = {\r\n\ttitle: \"Title?\",\r\n\talbum: \"Album?\",\r\n\tlength: \"Length?\",\r\n};\r\n\r\nexport default YoutubeSong;\r\n// const albumCover = track.album.images[0].url;\r\n// const title = track.name;\r\n// const artist = track.artists[0].name;\r\n// const album = track.album.name;\r\n// const length = track.duration_ms;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAM,CAAC,KAAK;EAC/C,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,WAAW,GAAG,KAAK,CAAC;EACrD,MAAMC,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAEH,KAAK,CAACI,WAAW,GAAG,KAAK,GAAI,IAAI,CAAC;EAC9D,MAAME,eAAe,GAAGN,KAAK,CAACI,WAAW,GAAI,GAAEH,OAAQ,IAAGI,OAAO,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC,GAAG,SAAS;EAC3G,SAASC,UAAUA,CAAA,EAAG;IACrBV,WAAW,CAACC,KAAK,CAAC;EACnB;EACA;EACA,oBACCH,OAAA;IAAKa,SAAS,EAAC,MAAM;IAAAC,QAAA,eAEpBd,OAAA;MAAKa,SAAS,EAAC,UAAU;MAAAC,QAAA,eACxBd,OAAA;QAAGe,EAAE,EAAC,OAAO;QAAAD,QAAA,EAAEX,KAAK,CAACa;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE1B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEF,CAAC;AAER,CAAC;AAACC,EAAA,GAlBIpB,WAAW;AAoBjBqB,IAAI,CAACC,YAAY,GAAG;EACnBC,KAAK,EAAE,QAAQ;EACfC,KAAK,EAAE,QAAQ;EACfC,MAAM,EAAE;AACT,CAAC;AAED,eAAezB,WAAW;AAC1B;AACA;AACA;AACA;AACA;AAAA,IAAAoB,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}