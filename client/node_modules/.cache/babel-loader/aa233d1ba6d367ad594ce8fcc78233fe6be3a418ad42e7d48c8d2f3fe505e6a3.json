{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\spotify-clone-main\\\\client\\\\src\\\\components\\\\YoutubePlayer.jsx\",\n  _s = $RefreshSig$();\nimport YouTube, { YouTubeProps } from \"react-youtube\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YoutubePlayer = ({\n  videoId\n}) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const handlePlay = () => {\n    setIsPlaying(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Youtube-Player\",\n    children: /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: videoId,\n      opts: {\n        height: \"490\",\n        width: \"900\",\n        playerVars: {\n          controls: 1\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n\n  //autoplay: 1,\n};\n_s(YoutubePlayer, \"dxr5RgzQJlMZkbQdHY9iHZ+FF0w=\");\n_c = YoutubePlayer;\nexport default YoutubePlayer;\nvar _c;\n$RefreshReg$(_c, \"YoutubePlayer\");","map":{"version":3,"names":["YouTube","YouTubeProps","useState","jsxDEV","_jsxDEV","YoutubePlayer","videoId","_s","isPlaying","setIsPlaying","handlePlay","className","children","opts","height","width","playerVars","controls","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/spotify-clone-main/client/src/components/YoutubePlayer.jsx"],"sourcesContent":["import YouTube, { YouTubeProps } from \"react-youtube\";\r\nimport { useState } from \"react\";\r\nconst YoutubePlayer = ({ videoId }) => {\r\n\tconst [isPlaying, setIsPlaying] = useState(false);\r\n\r\n\tconst handlePlay = () => {\r\n\t\tsetIsPlaying(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"Youtube-Player\">\r\n\t\t\t{/* <button onClick={handlePlay}>Play Audio</button>\r\n\t\t\t{isPlaying && ( */}\r\n\t\t\t<YouTube\r\n\t\t\t\tvideoId={videoId}\r\n\t\t\t\topts={{\r\n\t\t\t\t\theight: \"490\",\r\n\t\t\t\t\twidth: \"900\",\r\n\t\t\t\t\tplayerVars: {\r\n\t\t\t\t\t\tcontrols: 1,\r\n\t\t\t\t\t},\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t{/* )} */}\r\n\t\t</div>\r\n\t);\r\n\r\n\t//autoplay: 1,\r\n};\r\n\r\nexport default YoutubePlayer;\r\n"],"mappings":";;AAAA,OAAOA,OAAO,IAAIC,YAAY,QAAQ,eAAe;AACrD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACxBD,YAAY,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,oBACCL,OAAA;IAAKO,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAG9BR,OAAA,CAACJ,OAAO;MACPM,OAAO,EAAEA,OAAQ;MACjBO,IAAI,EAAE;QACLC,MAAM,EAAE,KAAK;QACbC,KAAK,EAAE,KAAK;QACZC,UAAU,EAAE;UACXC,QAAQ,EAAE;QACX;MACD;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;;EAGP;AACD,CAAC;AAACd,EAAA,CA1BIF,aAAa;AAAAiB,EAAA,GAAbjB,aAAa;AA4BnB,eAAeA,aAAa;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}