{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\Spotify-Weather\\\\client\\\\src\\\\components\\\\SpotifyPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SpotifyPlayer = ({\n  accessToken,\n  currentTrack\n}) => {\n  _s();\n  const [is_paused, setPaused] = useState(false);\n  const [is_active, setActive] = useState(false);\n  const [player, setPlayer] = useState(undefined);\n  const [current_track, setTrack] = useState(currentTrack);\n  const [is_playing, setPlaying] = useState(false);\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://sdk.scdn.co/spotify-player.js\";\n    script.async = true;\n    document.body.appendChild(script);\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      const player = new window.Spotify.Player({\n        name: \"Web Playback SDK\",\n        getOAuthToken: cb => {\n          cb(accessToken);\n        },\n        volume: 0.5\n      });\n      setPlayer(player);\n      player.addListener(\"ready\", ({\n        device_id\n      }) => {\n        console.log(\"Ready with Device ID\", device_id);\n        setActive(true);\n      });\n      player.addListener(\"not_ready\", ({\n        device_id\n      }) => {\n        console.log(\"Device ID has gone offline\", device_id);\n      });\n      player.addListener(\"player_state_changed\", state => {\n        if (!state) {\n          return;\n        }\n        setTrack(currentTrack);\n        setPaused(state.paused);\n        setPlaying(state.paused ? false : true);\n        player.getCurrentState().then(state => {\n          !state ? setActive(false) : setActive(true);\n        });\n      });\n      player.connect();\n    };\n  }, []);\n  const handlePlayClick = () => {\n    if (is_paused) {\n      player.resume();\n    } else {\n      player.pause();\n    }\n  };\n  if (!is_active) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \" Instance not active. Transfer your playback using your Spotify app \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: current_track.album.images[0].url,\n            className: \"now-playing__cover\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"now-playing__side\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"now-playing__name\",\n              children: current_track.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"now-playing__artist\",\n              children: current_track.artists[0].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-spotify\",\n              onClick: () => {\n                player.previousTrack();\n              },\n              children: \"<<\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-spotify\",\n              onClick: handlePlayClick,\n              children: is_paused ? \"PLAY\" : \"PAUSE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-spotify\",\n              onClick: () => {\n                player.nextTrack();\n              },\n              children: \">>\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  }\n};\n_s(SpotifyPlayer, \"wVBpjnY73sAs/ECzxFaNuenYkF4=\");\n_c = SpotifyPlayer;\nexport default SpotifyPlayer;\n\n// const [player, setPlayer] = useState(null);\n// const [isPaused, setPaused] = useState(false);\n// useEffect(() => {\n// \tconst script = document.createElement(\"script\");\n// \tscript.src = \"https://sdk.scdn.co/spotify-player.js\";\n// \tscript.async = true;\n// \tdocument.body.appendChild(script);\n// \twindow.onSpotifyWebPlaybackSDKReady = () => {\n// \t\tconst newPlayer = new window.Spotify.Player({\n// \t\t\tname: \"React Spotify Player\",\n// \t\t\tgetOAuthToken: (cb) => {\n// \t\t\t\tcb(accessToken);\n// \t\t\t},\n// \t\t});\n// \t\tsetPlayer(newPlayer);\n// \t\tnewPlayer.connect().then((success) => {\n// \t\t\tif (success) {\n// \t\t\t\tconsole.log(\"Connected to Spotify player!\");\n// \t\t\t}\n// \t\t});\n// \t};\n// \treturn () => {\n// \t\tif (player !== null) {\n// \t\t\tplayer.disconnect();\n// \t\t}\n// \t};\n// }, [accessToken]);\n// useEffect(() => {\n// \tif (currentTrack?.uri) {\n// \t\tplayer.resume();\n// \t\tplayer.addListener(\"ready\", ({ device_id }) => {\n// \t\t\tplayer._options.id = device_id;\n// \t\t\tplayer._options.getOAuthToken((access_token) => {\n// \t\t\t\tfetch(`https://api.spotify.com/v1/me/player/play?device_id=${device_id}`, {\n// \t\t\t\t\tmethod: \"PUT\",\n// \t\t\t\t\tbody: JSON.stringify({ uris: [currentTrack?.uri] }),\n// \t\t\t\t\theaders: {\n// \t\t\t\t\t\t\"Content-Type\": \"application/json\",\n// \t\t\t\t\t\tAuthorization: `Bearer ${access_token}`,\n// \t\t\t\t\t},\n// \t\t\t\t});\n// \t\t\t});\n// \t\t});\n// \t}\n// }, [currentTrack.uri]);\n// const handlePreviousTrack = () => {\n// \tif (player !== null) {\n// \t\tplayer.previousTrack();\n// \t}\n// };\n// const handleTogglePlay = () => {\n// \tif (player !== null) {\n// \t\tplayer.togglePlay();\n// \t\tsetPaused(!isPaused);\n// \t}\n// };\n// const handleNextTrack = () => {\n// \tif (player !== null) {\n// \t\tplayer.nextTrack();\n// \t}\n// };\n// if (currentTrack != null) {\n// \treturn (\n// \t\t<div id=\"spotify-player\">\n// \t\t\t<div className=\"main-wrapper\">\n// \t\t\t\t<img src={currentTrack.album.images[0].url} className=\"now-playing__cover\" alt=\"\" />\n// \t\t\t\t<div className=\"now-playing__side\">\n// \t\t\t\t\t<div className=\"now-playing__name\">{currentTrack.name}</div>\n// \t\t\t\t\t<div className=\"now-playing__artist\">{currentTrack.artists[0].name}</div>\n// \t\t\t\t\t<button className=\"btn-spotify\" onClick={handlePreviousTrack}>\n// \t\t\t\t\t\t&lt;&lt;\n// \t\t\t\t\t</button>\n// \t\t\t\t\t<button className=\"btn-spotify\" onClick={handleTogglePlay}>\n// \t\t\t\t\t\t{isPaused ? \"PLAY\" : \"PAUSE\"}\n// \t\t\t\t\t</button>\n// \t\t\t\t\t<button className=\"btn-spotify\" onClick={handleNextTrack}>\n// \t\t\t\t\t\t&gt;&gt;\n// \t\t\t\t\t</button>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t</div>\n// \t);\n// } else {\n// \treturn null;\n// }\nvar _c;\n$RefreshReg$(_c, \"SpotifyPlayer\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","SpotifyPlayer","accessToken","currentTrack","_s","is_paused","setPaused","is_active","setActive","player","setPlayer","undefined","current_track","setTrack","is_playing","setPlaying","script","document","createElement","src","async","body","appendChild","window","onSpotifyWebPlaybackSDKReady","Spotify","Player","name","getOAuthToken","cb","volume","addListener","device_id","console","log","state","paused","getCurrentState","then","connect","handlePlayClick","resume","pause","children","className","fileName","_jsxFileName","lineNumber","columnNumber","album","images","url","alt","artists","onClick","previousTrack","nextTrack","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/Spotify-Weather/client/src/components/SpotifyPlayer.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nconst SpotifyPlayer = ({ accessToken, currentTrack }) => {\r\n\tconst [is_paused, setPaused] = useState(false);\r\n\tconst [is_active, setActive] = useState(false);\r\n\tconst [player, setPlayer] = useState(undefined);\r\n\tconst [current_track, setTrack] = useState(currentTrack);\r\n\tconst [is_playing, setPlaying] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst script = document.createElement(\"script\");\r\n\t\tscript.src = \"https://sdk.scdn.co/spotify-player.js\";\r\n\t\tscript.async = true;\r\n\r\n\t\tdocument.body.appendChild(script);\r\n\r\n\t\twindow.onSpotifyWebPlaybackSDKReady = () => {\r\n\t\t\tconst player = new window.Spotify.Player({\r\n\t\t\t\tname: \"Web Playback SDK\",\r\n\t\t\t\tgetOAuthToken: (cb) => {\r\n\t\t\t\t\tcb(accessToken);\r\n\t\t\t\t},\r\n\t\t\t\tvolume: 0.5,\r\n\t\t\t});\r\n\r\n\t\t\tsetPlayer(player);\r\n\r\n\t\t\tplayer.addListener(\"ready\", ({ device_id }) => {\r\n\t\t\t\tconsole.log(\"Ready with Device ID\", device_id);\r\n\t\t\t\tsetActive(true);\r\n\t\t\t});\r\n\r\n\t\t\tplayer.addListener(\"not_ready\", ({ device_id }) => {\r\n\t\t\t\tconsole.log(\"Device ID has gone offline\", device_id);\r\n\t\t\t});\r\n\r\n\t\t\tplayer.addListener(\"player_state_changed\", (state) => {\r\n\t\t\t\tif (!state) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetTrack(currentTrack);\r\n\t\t\t\tsetPaused(state.paused);\r\n\t\t\t\tsetPlaying(state.paused ? false : true);\r\n\r\n\t\t\t\tplayer.getCurrentState().then((state) => {\r\n\t\t\t\t\t!state ? setActive(false) : setActive(true);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tplayer.connect();\r\n\t\t};\r\n\t}, []);\r\n\r\n\tconst handlePlayClick = () => {\r\n\t\tif (is_paused) {\r\n\t\t\tplayer.resume();\r\n\t\t} else {\r\n\t\t\tplayer.pause();\r\n\t\t}\r\n\t};\r\n\r\n\tif (!is_active) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"main-wrapper\">\r\n\t\t\t\t\t\t<b> Instance not active. Transfer your playback using your Spotify app </b>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"main-wrapper\">\r\n\t\t\t\t\t\t<img src={current_track.album.images[0].url} className=\"now-playing__cover\" alt=\"\" />\r\n\r\n\t\t\t\t\t\t<div className=\"now-playing__side\">\r\n\t\t\t\t\t\t\t<div className=\"now-playing__name\">{current_track.name}</div>\r\n\t\t\t\t\t\t\t<div className=\"now-playing__artist\">{current_track.artists[0].name}</div>\r\n\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"btn-spotify\"\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tplayer.previousTrack();\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t&lt;&lt;\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t<button className=\"btn-spotify\" onClick={handlePlayClick}>\r\n\t\t\t\t\t\t\t\t{is_paused ? \"PLAY\" : \"PAUSE\"}\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"btn-spotify\"\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tplayer.nextTrack();\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t&gt;&gt;\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default SpotifyPlayer;\r\n\r\n// const [player, setPlayer] = useState(null);\r\n// const [isPaused, setPaused] = useState(false);\r\n// useEffect(() => {\r\n// \tconst script = document.createElement(\"script\");\r\n// \tscript.src = \"https://sdk.scdn.co/spotify-player.js\";\r\n// \tscript.async = true;\r\n// \tdocument.body.appendChild(script);\r\n// \twindow.onSpotifyWebPlaybackSDKReady = () => {\r\n// \t\tconst newPlayer = new window.Spotify.Player({\r\n// \t\t\tname: \"React Spotify Player\",\r\n// \t\t\tgetOAuthToken: (cb) => {\r\n// \t\t\t\tcb(accessToken);\r\n// \t\t\t},\r\n// \t\t});\r\n// \t\tsetPlayer(newPlayer);\r\n// \t\tnewPlayer.connect().then((success) => {\r\n// \t\t\tif (success) {\r\n// \t\t\t\tconsole.log(\"Connected to Spotify player!\");\r\n// \t\t\t}\r\n// \t\t});\r\n// \t};\r\n// \treturn () => {\r\n// \t\tif (player !== null) {\r\n// \t\t\tplayer.disconnect();\r\n// \t\t}\r\n// \t};\r\n// }, [accessToken]);\r\n// useEffect(() => {\r\n// \tif (currentTrack?.uri) {\r\n// \t\tplayer.resume();\r\n// \t\tplayer.addListener(\"ready\", ({ device_id }) => {\r\n// \t\t\tplayer._options.id = device_id;\r\n// \t\t\tplayer._options.getOAuthToken((access_token) => {\r\n// \t\t\t\tfetch(`https://api.spotify.com/v1/me/player/play?device_id=${device_id}`, {\r\n// \t\t\t\t\tmethod: \"PUT\",\r\n// \t\t\t\t\tbody: JSON.stringify({ uris: [currentTrack?.uri] }),\r\n// \t\t\t\t\theaders: {\r\n// \t\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n// \t\t\t\t\t\tAuthorization: `Bearer ${access_token}`,\r\n// \t\t\t\t\t},\r\n// \t\t\t\t});\r\n// \t\t\t});\r\n// \t\t});\r\n// \t}\r\n// }, [currentTrack.uri]);\r\n// const handlePreviousTrack = () => {\r\n// \tif (player !== null) {\r\n// \t\tplayer.previousTrack();\r\n// \t}\r\n// };\r\n// const handleTogglePlay = () => {\r\n// \tif (player !== null) {\r\n// \t\tplayer.togglePlay();\r\n// \t\tsetPaused(!isPaused);\r\n// \t}\r\n// };\r\n// const handleNextTrack = () => {\r\n// \tif (player !== null) {\r\n// \t\tplayer.nextTrack();\r\n// \t}\r\n// };\r\n// if (currentTrack != null) {\r\n// \treturn (\r\n// \t\t<div id=\"spotify-player\">\r\n// \t\t\t<div className=\"main-wrapper\">\r\n// \t\t\t\t<img src={currentTrack.album.images[0].url} className=\"now-playing__cover\" alt=\"\" />\r\n// \t\t\t\t<div className=\"now-playing__side\">\r\n// \t\t\t\t\t<div className=\"now-playing__name\">{currentTrack.name}</div>\r\n// \t\t\t\t\t<div className=\"now-playing__artist\">{currentTrack.artists[0].name}</div>\r\n// \t\t\t\t\t<button className=\"btn-spotify\" onClick={handlePreviousTrack}>\r\n// \t\t\t\t\t\t&lt;&lt;\r\n// \t\t\t\t\t</button>\r\n// \t\t\t\t\t<button className=\"btn-spotify\" onClick={handleTogglePlay}>\r\n// \t\t\t\t\t\t{isPaused ? \"PLAY\" : \"PAUSE\"}\r\n// \t\t\t\t\t</button>\r\n// \t\t\t\t\t<button className=\"btn-spotify\" onClick={handleNextTrack}>\r\n// \t\t\t\t\t\t&gt;&gt;\r\n// \t\t\t\t\t</button>\r\n// \t\t\t\t</div>\r\n// \t\t\t</div>\r\n// \t\t</div>\r\n// \t);\r\n// } else {\r\n// \treturn null;\r\n// }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}