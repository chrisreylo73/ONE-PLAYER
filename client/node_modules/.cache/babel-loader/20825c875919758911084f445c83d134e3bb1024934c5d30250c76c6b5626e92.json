{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\Spotify-Weather\\\\client\\\\src\\\\components\\\\Player.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player({\n  accessToken,\n  trackUri,\n  spotifySelectedPlaylist\n}) {\n  _s();\n  const [play, setPlay] = useState(false);\n  console.log(spotifySelectedPlaylist);\n  useEffect(() => setPlay(true), [trackUri]);\n\n  // if (!accessToken) return null;\n  return /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n    styles: {\n      activeColor: \"#fff\",\n      bgColor: \"#242424\",\n      color: \"#fff\",\n      loaderColor: \"#fff\",\n      sliderColor: \"#1cb954\",\n      trackArtistColor: \"#ccc\",\n      trackNameColor: \"#fff\"\n    },\n    token: accessToken,\n    showSaveIcon: true,\n    callback: state => {\n      if (!state.isPlaying) setPlay(false);\n    },\n    play: play,\n    uris: spotifySelectedPlaylist ? [spotifySelectedPlaylist, trackUri] : [trackUri]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n}\n_s(Player, \"jVhLcXDeOrLi5A95zDr62ndrz9E=\");\n_c = Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["useState","useEffect","SpotifyPlayer","jsxDEV","_jsxDEV","Player","accessToken","trackUri","spotifySelectedPlaylist","_s","play","setPlay","console","log","styles","activeColor","bgColor","color","loaderColor","sliderColor","trackArtistColor","trackNameColor","token","showSaveIcon","callback","state","isPlaying","uris","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/Spotify-Weather/client/src/components/Player.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\n\nexport default function Player({ accessToken, trackUri, spotifySelectedPlaylist }) {\n\tconst [play, setPlay] = useState(false);\n\tconsole.log(spotifySelectedPlaylist);\n\tuseEffect(() => setPlay(true), [trackUri]);\n\n\t// if (!accessToken) return null;\n\treturn (\n\t\t<SpotifyPlayer\n\t\t\tstyles={{\n\t\t\t\tactiveColor: \"#fff\",\n\t\t\t\tbgColor: \"#242424\",\n\t\t\t\tcolor: \"#fff\",\n\t\t\t\tloaderColor: \"#fff\",\n\t\t\t\tsliderColor: \"#1cb954\",\n\t\t\t\ttrackArtistColor: \"#ccc\",\n\t\t\t\ttrackNameColor: \"#fff\",\n\t\t\t}}\n\t\t\ttoken={accessToken}\n\t\t\tshowSaveIcon\n\t\t\tcallback={(state) => {\n\t\t\t\tif (!state.isPlaying) setPlay(false);\n\t\t\t}}\n\t\t\tplay={play}\n\t\t\turis={spotifySelectedPlaylist ? [spotifySelectedPlaylist, trackUri] : [trackUri]}\n\t\t/>\n\t);\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,eAAe,SAASC,MAAMA,CAAC;EAAEC,WAAW;EAAEC,QAAQ;EAAEC;AAAwB,CAAC,EAAE;EAAAC,EAAA;EAClF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACvCY,OAAO,CAACC,GAAG,CAACL,uBAAuB,CAAC;EACpCP,SAAS,CAAC,MAAMU,OAAO,CAAC,IAAI,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;;EAE1C;EACA,oBACCH,OAAA,CAACF,aAAa;IACbY,MAAM,EAAE;MACPC,WAAW,EAAE,MAAM;MACnBC,OAAO,EAAE,SAAS;MAClBC,KAAK,EAAE,MAAM;MACbC,WAAW,EAAE,MAAM;MACnBC,WAAW,EAAE,SAAS;MACtBC,gBAAgB,EAAE,MAAM;MACxBC,cAAc,EAAE;IACjB,CAAE;IACFC,KAAK,EAAEhB,WAAY;IACnBiB,YAAY;IACZC,QAAQ,EAAGC,KAAK,IAAK;MACpB,IAAI,CAACA,KAAK,CAACC,SAAS,EAAEf,OAAO,CAAC,KAAK,CAAC;IACrC,CAAE;IACFD,IAAI,EAAEA,IAAK;IACXiB,IAAI,EAAEnB,uBAAuB,GAAG,CAACA,uBAAuB,EAAED,QAAQ,CAAC,GAAG,CAACA,QAAQ;EAAE;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjF,CAAC;AAEJ;AAACtB,EAAA,CA1BuBJ,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}