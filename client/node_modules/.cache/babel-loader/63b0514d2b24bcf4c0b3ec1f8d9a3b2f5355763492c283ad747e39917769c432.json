{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\spotify-clone-main\\\\client\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport useAuth from \"./useAuth\";\nimport Player from \"./Player\";\nimport TrackSearchResult from \"./TrackSearchResult\";\nimport { Container, Form } from \"react-bootstrap\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport axios from \"axios\";\nimport Tracks from \"./components/Tracks\";\nimport ControlPanel from \"./components/ControlPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = \"https://api.spotify.com/v1\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"8b945ef10ea24755b83ac50cede405a0\"\n});\nexport default function Dashboard(_ref) {\n  _s();\n  let {\n    code\n  } = _ref;\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const [lyrics, setLyrics] = useState(\"\");\n  const [playlists, setPlaylists] = useState([]);\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const [selectedPlaylist, setSelectedPlaylist] = useState(null);\n  useEffect(() => {\n    if (!playingTrack) return;\n    axios.get(\"http://localhost:3001/lyrics\", {\n      params: {\n        track: playingTrack.title,\n        artist: playingTrack.artist\n      }\n    }).then(res => {\n      setLyrics(res.data.lyrics);\n    });\n  }, [playingTrack]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (accessToken) {\n      fetchPlaylists();\n    }\n  }, [accessToken]);\n  const fetchPlaylists = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/me/playlists`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setPlaylists(data.items);\n      } else {\n        console.log(\"Error:\", response.status);\n      }\n    } catch (error) {\n      console.log(\"Error:\", error);\n    }\n  };\n  const fetchPlaylistTracks = async playlistId => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/playlists/${playlistId}/tracks`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setPlaylistTracks(data.items);\n      } else {\n        console.log(\"Error:\", response.status);\n      }\n    } catch (error) {\n      console.log(\"Error:\", error);\n    }\n  };\n  const handlePlaylistSelect = async playlist => {\n    setSelectedPlaylist(playlist);\n    await fetchPlaylistTracks(playlist.id);\n  };\n  useEffect(() => {\n    if (!search) {\n      setSearchResults([]);\n      return;\n    }\n    if (!accessToken) return;\n    let cancel = false;\n    const searchTracks = async () => {\n      try {\n        const res = await spotifyApi.searchTracks(search);\n        if (cancel) return;\n        setSearchResults(res.body.tracks.items.map(track => {\n          const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n            if (image.height < smallest.height) return image;\n            return smallest;\n          }, track.album.images[0]);\n          return {\n            artist: track.artists[0].name,\n            title: track.name,\n            uri: track.uri,\n            albumUrl: smallestAlbumImage.url\n          };\n        }));\n      } catch (error) {\n        console.log(\"Error:\", error);\n      }\n    };\n    searchTracks();\n    return () => {\n      cancel = true;\n    };\n  }, [search, accessToken]);\n  const chooseTrack = track => {\n    setPlayingTrack(track);\n    setSearch(\"\");\n    setLyrics(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Tracks, {\n      selectedPlaylist: selectedPlaylist,\n      playlistTracks: playlistTracks,\n      chooseTrack: chooseTrack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      playlists: playlists,\n      handlePlaylistSelect: handlePlaylistSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player\",\n      children: /*#__PURE__*/_jsxDEV(Player, {\n        accessToken: accessToken,\n        trackUri: playingTrack === null || playingTrack === void 0 ? void 0 : playingTrack.uri\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 3\n  }, this);\n}\n_s(Dashboard, \"+byI/L8P/WRdA82kmqyiZaGQkQM=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\n{\n  /* <Form.Control type=\"search\" placeholder=\"Search Songs/Artists\" value={search} onChange={(e) => setSearch(e.target.value)} /> */\n}\n{\n  /* <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\n  \t\t\t{searchResults.map((track) => (\n  \t\t\t\t<TrackSearchResult track={track} key={track.uri} chooseTrack={chooseTrack} />\n  \t\t\t))}\n  \t\t\t{searchResults.length === 0 && (\n  \t\t\t\t<div className=\"text-center\" style={{ whiteSpace: \"pre\" }}>\n  \t\t\t\t\t{lyrics}\n  \t\t\t\t</div>\n  \t\t\t)}\n  \t\t</div> */\n}\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","useAuth","Player","TrackSearchResult","Container","Form","SpotifyWebApi","axios","Tracks","ControlPanel","jsxDEV","_jsxDEV","API_BASE_URL","spotifyApi","clientId","Dashboard","_ref","_s","code","accessToken","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","lyrics","setLyrics","playlists","setPlaylists","playlistTracks","setPlaylistTracks","selectedPlaylist","setSelectedPlaylist","get","params","track","title","artist","then","res","data","setAccessToken","fetchPlaylists","response","fetch","headers","Authorization","ok","json","items","console","log","status","error","fetchPlaylistTracks","playlistId","handlePlaylistSelect","playlist","id","cancel","searchTracks","body","tracks","map","smallestAlbumImage","album","images","reduce","smallest","image","height","artists","name","uri","albumUrl","url","chooseTrack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","trackUri","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/spotify-clone-main/client/src/Dashboard.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport useAuth from \"./useAuth\";\nimport Player from \"./Player\";\nimport TrackSearchResult from \"./TrackSearchResult\";\nimport { Container, Form } from \"react-bootstrap\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport axios from \"axios\";\nimport Tracks from \"./components/Tracks\";\nimport ControlPanel from \"./components/ControlPanel\";\n\nconst API_BASE_URL = \"https://api.spotify.com/v1\";\nconst spotifyApi = new SpotifyWebApi({\n\tclientId: \"8b945ef10ea24755b83ac50cede405a0\",\n});\n\nexport default function Dashboard({ code }) {\n\tconst accessToken = useAuth(code);\n\tconst [search, setSearch] = useState(\"\");\n\tconst [searchResults, setSearchResults] = useState([]);\n\tconst [playingTrack, setPlayingTrack] = useState();\n\tconst [lyrics, setLyrics] = useState(\"\");\n\tconst [playlists, setPlaylists] = useState([]);\n\tconst [playlistTracks, setPlaylistTracks] = useState([]);\n\tconst [selectedPlaylist, setSelectedPlaylist] = useState(null);\n\n\tuseEffect(() => {\n\t\tif (!playingTrack) return;\n\n\t\taxios\n\t\t\t.get(\"http://localhost:3001/lyrics\", {\n\t\t\t\tparams: {\n\t\t\t\t\ttrack: playingTrack.title,\n\t\t\t\t\tartist: playingTrack.artist,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tsetLyrics(res.data.lyrics);\n\t\t\t});\n\t}, [playingTrack]);\n\n\tuseEffect(() => {\n\t\tif (!accessToken) return;\n\t\tspotifyApi.setAccessToken(accessToken);\n\t}, [accessToken]);\n\n\tuseEffect(() => {\n\t\tif (accessToken) {\n\t\t\tfetchPlaylists();\n\t\t}\n\t}, [accessToken]);\n\n\tconst fetchPlaylists = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(`${API_BASE_URL}/me/playlists`, {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${accessToken}`,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tif (response.ok) {\n\t\t\t\tconst data = await response.json();\n\t\t\t\tsetPlaylists(data.items);\n\t\t\t} else {\n\t\t\t\tconsole.log(\"Error:\", response.status);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(\"Error:\", error);\n\t\t}\n\t};\n\n\tconst fetchPlaylistTracks = async (playlistId) => {\n\t\ttry {\n\t\t\tconst response = await fetch(`${API_BASE_URL}/playlists/${playlistId}/tracks`, {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${accessToken}`,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tif (response.ok) {\n\t\t\t\tconst data = await response.json();\n\t\t\t\tsetPlaylistTracks(data.items);\n\t\t\t} else {\n\t\t\t\tconsole.log(\"Error:\", response.status);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(\"Error:\", error);\n\t\t}\n\t};\n\n\tconst handlePlaylistSelect = async (playlist) => {\n\t\tsetSelectedPlaylist(playlist);\n\t\tawait fetchPlaylistTracks(playlist.id);\n\t};\n\n\tuseEffect(() => {\n\t\tif (!search) {\n\t\t\tsetSearchResults([]);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!accessToken) return;\n\n\t\tlet cancel = false;\n\n\t\tconst searchTracks = async () => {\n\t\t\ttry {\n\t\t\t\tconst res = await spotifyApi.searchTracks(search);\n\t\t\t\tif (cancel) return;\n\t\t\t\tsetSearchResults(\n\t\t\t\t\tres.body.tracks.items.map((track) => {\n\t\t\t\t\t\tconst smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n\t\t\t\t\t\t\tif (image.height < smallest.height) return image;\n\t\t\t\t\t\t\treturn smallest;\n\t\t\t\t\t\t}, track.album.images[0]);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tartist: track.artists[0].name,\n\t\t\t\t\t\t\ttitle: track.name,\n\t\t\t\t\t\t\turi: track.uri,\n\t\t\t\t\t\t\talbumUrl: smallestAlbumImage.url,\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(\"Error:\", error);\n\t\t\t}\n\t\t};\n\n\t\tsearchTracks();\n\n\t\treturn () => {\n\t\t\tcancel = true;\n\t\t};\n\t}, [search, accessToken]);\n\n\tconst chooseTrack = (track) => {\n\t\tsetPlayingTrack(track);\n\t\tsetSearch(\"\");\n\t\tsetLyrics(\"\");\n\t};\n\n\treturn (\n\t\t<div className=\"dashboard\">\n\t\t\t<hr />\n\t\t\t<Tracks selectedPlaylist={selectedPlaylist} playlistTracks={playlistTracks} chooseTrack={chooseTrack} />\n\t\t\t<ControlPanel playlists={playlists} handlePlaylistSelect={handlePlaylistSelect} />\n\t\t\t<div className=\"player\">\n\t\t\t\t<Player accessToken={accessToken} trackUri={playingTrack?.uri} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n{\n\t/* <Form.Control type=\"search\" placeholder=\"Search Songs/Artists\" value={search} onChange={(e) => setSearch(e.target.value)} /> */\n}\n{\n\t/* <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\n\t\t\t\t{searchResults.map((track) => (\n\t\t\t\t\t<TrackSearchResult track={track} key={track.uri} chooseTrack={chooseTrack} />\n\t\t\t\t))}\n\t\t\t\t{searchResults.length === 0 && (\n\t\t\t\t\t<div className=\"text-center\" style={{ whiteSpace: \"pre\" }}>\n\t\t\t\t\t\t{lyrics}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div> */\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}