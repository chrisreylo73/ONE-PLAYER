{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\spotify-clone-main\\\\client\\\\src\\\\components\\\\Song.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Song = _ref => {\n  let {\n    title,\n    artist,\n    album,\n    length,\n    albumCover,\n    playTrack,\n    track\n  } = _ref;\n  const minutes = Math.floor(length / 60000);\n  const seconds = Math.floor(length % 60000 / 1000);\n  const formattedLength = length ? `${minutes}:${seconds.toString().padStart(2, \"0\")}` : \"length?\";\n  function handlePlay() {\n    chooseTrack(track);\n  }\n  const handleSongClick = () => {\n    const track = {\n      title,\n      artist,\n      album,\n      length,\n      albumCover,\n      uri: \"https://api.spotify.com/v1\" // Provide a default URI value\n    };\n\n    handlePlay(track.TRACK);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"song\",\n    onClick: handleSongClick,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"album-cover\",\n      src: albumCover,\n      alt: \"Album Cover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"songInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"artist\",\n        children: artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: formattedLength\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n};\n_c = Song;\nSong.defaultProps = {\n  title: \"Title?\",\n  album: \"Album?\",\n  length: \"Length?\"\n};\nexport default Song;\nvar _c;\n$RefreshReg$(_c, \"Song\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Song","_ref","title","artist","album","length","albumCover","playTrack","track","minutes","Math","floor","seconds","formattedLength","toString","padStart","handlePlay","chooseTrack","handleSongClick","uri","TRACK","className","onClick","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","defaultProps","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/spotify-clone-main/client/src/components/Song.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst Song = ({ title, artist, album, length, albumCover, playTrack, track }) => {\r\n\tconst minutes = Math.floor(length / 60000);\r\n\tconst seconds = Math.floor((length % 60000) / 1000);\r\n\tconst formattedLength = length ? `${minutes}:${seconds.toString().padStart(2, \"0\")}` : \"length?\";\r\n\tfunction handlePlay() {\r\n\t\tchooseTrack(track);\r\n\t}\r\n\tconst handleSongClick = () => {\r\n\t\tconst track = {\r\n\t\t\ttitle,\r\n\t\t\tartist,\r\n\t\t\talbum,\r\n\t\t\tlength,\r\n\t\t\talbumCover,\r\n\t\t\turi: \"https://api.spotify.com/v1\", // Provide a default URI value\r\n\t\t};\r\n\t\thandlePlay(track.TRACK);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"song\" onClick={handleSongClick}>\r\n\t\t\t<img className=\"album-cover\" src={albumCover} alt=\"Album Cover\" />\r\n\t\t\t<div className=\"songInfo\">\r\n\t\t\t\t<p id=\"title\">{title}</p>\r\n\t\t\t\t<p id=\"artist\">{artist}</p>\r\n\t\t\t</div>\r\n\t\t\t<p>{formattedLength}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nSong.defaultProps = {\r\n\ttitle: \"Title?\",\r\n\talbum: \"Album?\",\r\n\tlength: \"Length?\",\r\n};\r\n\r\nexport default Song;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGC,IAAA,IAAoE;EAAA,IAAnE;IAAEC,KAAK;IAAEC,MAAM;IAAEC,KAAK;IAAEC,MAAM;IAAEC,UAAU;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAAP,IAAA;EAC3E,MAAMQ,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACN,MAAM,GAAG,KAAK,CAAC;EAC1C,MAAMO,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEN,MAAM,GAAG,KAAK,GAAI,IAAI,CAAC;EACnD,MAAMQ,eAAe,GAAGR,MAAM,GAAI,GAAEI,OAAQ,IAAGG,OAAO,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC,GAAG,SAAS;EAChG,SAASC,UAAUA,CAAA,EAAG;IACrBC,WAAW,CAACT,KAAK,CAAC;EACnB;EACA,MAAMU,eAAe,GAAGA,CAAA,KAAM;IAC7B,MAAMV,KAAK,GAAG;MACbN,KAAK;MACLC,MAAM;MACNC,KAAK;MACLC,MAAM;MACNC,UAAU;MACVa,GAAG,EAAE,4BAA4B,CAAE;IACpC,CAAC;;IACDH,UAAU,CAACR,KAAK,CAACY,KAAK,CAAC;EACxB,CAAC;EAED,oBACCrB,OAAA;IAAKsB,SAAS,EAAC,MAAM;IAACC,OAAO,EAAEJ,eAAgB;IAAAK,QAAA,gBAC9CxB,OAAA;MAAKsB,SAAS,EAAC,aAAa;MAACG,GAAG,EAAElB,UAAW;MAACmB,GAAG,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClE9B,OAAA;MAAKsB,SAAS,EAAC,UAAU;MAAAE,QAAA,gBACxBxB,OAAA;QAAG+B,EAAE,EAAC,OAAO;QAAAP,QAAA,EAAErB;MAAK;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzB9B,OAAA;QAAG+B,EAAE,EAAC,QAAQ;QAAAP,QAAA,EAAEpB;MAAM;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACN9B,OAAA;MAAAwB,QAAA,EAAIV;IAAe;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAER,CAAC;AAACE,EAAA,GA7BI/B,IAAI;AA+BVA,IAAI,CAACgC,YAAY,GAAG;EACnB9B,KAAK,EAAE,QAAQ;EACfE,KAAK,EAAE,QAAQ;EACfC,MAAM,EAAE;AACT,CAAC;AAED,eAAeL,IAAI;AAAC,IAAA+B,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}