{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\spotify-clone-main\\\\client\\\\src\\\\components\\\\MusicVisualizer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicVisualizer = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  useEffect(() => {\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    const analyser = audioContext.createAnalyser();\n    analyser.fftSize = 2048;\n    const canvas = canvasRef.current;\n    const canvasCtx = canvas.getContext(\"2d\");\n    const visualize = stream => {\n      const source = audioContext.createMediaStreamSource(stream);\n      source.connect(analyser);\n      const renderFrame = () => {\n        const bufferLength = analyser.frequencyBinCount;\n        const dataArray = new Uint8Array(bufferLength);\n        analyser.getByteFrequencyData(dataArray);\n        canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n        const barWidth = canvas.width / bufferLength * 2;\n        let x = 0;\n        for (let i = 0; i < bufferLength; i++) {\n          const barHeight = dataArray[i] / 255 * canvas.height;\n          const hue = i / bufferLength * 360;\n          canvasCtx.fillStyle = `hsl(${hue}, 100%, 50%)`;\n          canvasCtx.fillRect(x, canvas.height - barHeight, barWidth, barHeight);\n          x += barWidth + 1;\n        }\n        animationRef.current = requestAnimationFrame(renderFrame);\n      };\n      renderFrame();\n    };\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(visualize).catch(error => {\n      console.error(\"Error accessing microphone:\", error);\n    });\n    return () => {\n      cancelAnimationFrame(animationRef.current);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 800,\n      height: 400,\n      style: {\n        border: \"1px solid white\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n};\n_s(MusicVisualizer, \"X5bd7Q1XXg1keIMflMhOltk4wyU=\");\n_c = MusicVisualizer;\nexport default MusicVisualizer;\nvar _c;\n$RefreshReg$(_c, \"MusicVisualizer\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","MusicVisualizer","_s","canvasRef","animationRef","audioContext","window","AudioContext","webkitAudioContext","analyser","createAnalyser","fftSize","canvas","current","canvasCtx","getContext","visualize","stream","source","createMediaStreamSource","connect","renderFrame","bufferLength","frequencyBinCount","dataArray","Uint8Array","getByteFrequencyData","clearRect","width","height","barWidth","x","i","barHeight","hue","fillStyle","fillRect","requestAnimationFrame","navigator","mediaDevices","getUserMedia","audio","then","catch","error","console","cancelAnimationFrame","children","ref","style","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/spotify-clone-main/client/src/components/MusicVisualizer.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\n\r\nconst MusicVisualizer = () => {\r\n\tconst canvasRef = useRef(null);\r\n\tconst animationRef = useRef(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n\t\tconst analyser = audioContext.createAnalyser();\r\n\t\tanalyser.fftSize = 2048;\r\n\r\n\t\tconst canvas = canvasRef.current;\r\n\t\tconst canvasCtx = canvas.getContext(\"2d\");\r\n\r\n\t\tconst visualize = (stream) => {\r\n\t\t\tconst source = audioContext.createMediaStreamSource(stream);\r\n\t\t\tsource.connect(analyser);\r\n\r\n\t\t\tconst renderFrame = () => {\r\n\t\t\t\tconst bufferLength = analyser.frequencyBinCount;\r\n\t\t\t\tconst dataArray = new Uint8Array(bufferLength);\r\n\t\t\t\tanalyser.getByteFrequencyData(dataArray);\r\n\r\n\t\t\t\tcanvasCtx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n\t\t\t\tconst barWidth = (canvas.width / bufferLength) * 2;\r\n\t\t\t\tlet x = 0;\r\n\t\t\t\tfor (let i = 0; i < bufferLength; i++) {\r\n\t\t\t\t\tconst barHeight = (dataArray[i] / 255) * canvas.height;\r\n\t\t\t\t\tconst hue = (i / bufferLength) * 360;\r\n\t\t\t\t\tcanvasCtx.fillStyle = `hsl(${hue}, 100%, 50%)`;\r\n\t\t\t\t\tcanvasCtx.fillRect(x, canvas.height - barHeight, barWidth, barHeight);\r\n\t\t\t\t\tx += barWidth + 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tanimationRef.current = requestAnimationFrame(renderFrame);\r\n\t\t\t};\r\n\r\n\t\t\trenderFrame();\r\n\t\t};\r\n\r\n\t\tnavigator.mediaDevices\r\n\t\t\t.getUserMedia({ audio: true })\r\n\t\t\t.then(visualize)\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.error(\"Error accessing microphone:\", error);\r\n\t\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tcancelAnimationFrame(animationRef.current);\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<canvas ref={canvasRef} width={800} height={400} style={{ border: \"1px solid white\" }} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MusicVisualizer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}