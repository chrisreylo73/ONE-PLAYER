{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\spotify-clone-main\\\\client\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport useAuth from \"./useAuth\";\nimport Player from \"./Player\";\nimport TrackSearchResult from \"./TrackSearchResult\";\nimport { Container, Form } from \"react-bootstrap\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport axios from \"axios\";\nimport Tracks from \"./components/Tracks\";\nimport ControlPanel from \"./components/ControlPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = \"https://api.spotify.com/v1\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"8b945ef10ea24755b83ac50cede405a0\"\n});\nexport default function Dashboard(_ref) {\n  _s();\n  let {\n    code\n  } = _ref;\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const [lyrics, setLyrics] = useState(\"\");\n  // old\n  const [playlists, setPlaylists] = useState([]);\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch(\"\");\n    setLyrics(\"\");\n  }\n  useEffect(() => {\n    if (!playingTrack) return;\n    axios.get(\"http://localhost:3001/lyrics\", {\n      params: {\n        track: playingTrack.title,\n        artist: playingTrack.artist\n      }\n    }).then(res => {\n      setLyrics(res.data.lyrics);\n    });\n  }, [playingTrack]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  const fetchPlaylists = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/me/playlists`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setPlaylists(data.items);\n      } else {\n        console.log(\"Error:\", response.status);\n      }\n    } catch (error) {\n      console.log(\"Error:\", error);\n    }\n  };\n  const fetchPlaylistTracks = async playlistId => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/playlists/${playlistId}/tracks`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setPlaylistTracks(data.items);\n      } else {\n        console.log(\"Error:\", response.status);\n      }\n    } catch (error) {\n      console.log(\"Error:\", error);\n    }\n  };\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return;\n      setSearchResults(res.body.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n      }));\n    });\n    return () => cancel = true;\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Tracks, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player\",\n      children: /*#__PURE__*/_jsxDEV(Player, {\n        accessToken: accessToken,\n        trackUri: playingTrack === null || playingTrack === void 0 ? void 0 : playingTrack.uri\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 3\n  }, this);\n}\n_s(Dashboard, \"FGEi6O5sDT+t6oZRaGPLIfj24gU=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\n{\n  /* <Form.Control type=\"search\" placeholder=\"Search Songs/Artists\" value={search} onChange={(e) => setSearch(e.target.value)} /> */\n}\n{\n  /* <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\n  \t\t\t{searchResults.map((track) => (\n  \t\t\t\t<TrackSearchResult track={track} key={track.uri} chooseTrack={chooseTrack} />\n  \t\t\t))}\n  \t\t\t{searchResults.length === 0 && (\n  \t\t\t\t<div className=\"text-center\" style={{ whiteSpace: \"pre\" }}>\n  \t\t\t\t\t{lyrics}\n  \t\t\t\t</div>\n  \t\t\t)}\n  \t\t</div> */\n}\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","useAuth","Player","TrackSearchResult","Container","Form","SpotifyWebApi","axios","Tracks","ControlPanel","jsxDEV","_jsxDEV","API_BASE_URL","spotifyApi","clientId","Dashboard","_ref","_s","code","accessToken","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","lyrics","setLyrics","playlists","setPlaylists","playlistTracks","setPlaylistTracks","chooseTrack","track","get","params","title","artist","then","res","data","setAccessToken","fetchPlaylists","response","fetch","headers","Authorization","ok","json","items","console","log","status","error","fetchPlaylistTracks","playlistId","cancel","searchTracks","body","tracks","map","smallestAlbumImage","album","images","reduce","smallest","image","height","artists","name","uri","albumUrl","url","className","children","fileName","_jsxFileName","lineNumber","columnNumber","trackUri","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/spotify-clone-main/client/src/Dashboard.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport useAuth from \"./useAuth\";\nimport Player from \"./Player\";\nimport TrackSearchResult from \"./TrackSearchResult\";\nimport { Container, Form } from \"react-bootstrap\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport axios from \"axios\";\nimport Tracks from \"./components/Tracks\";\nimport ControlPanel from \"./components/ControlPanel\";\nconst API_BASE_URL = \"https://api.spotify.com/v1\";\nconst spotifyApi = new SpotifyWebApi({\n\tclientId: \"8b945ef10ea24755b83ac50cede405a0\",\n});\n\nexport default function Dashboard({ code }) {\n\tconst accessToken = useAuth(code);\n\tconst [search, setSearch] = useState(\"\");\n\tconst [searchResults, setSearchResults] = useState([]);\n\tconst [playingTrack, setPlayingTrack] = useState();\n\tconst [lyrics, setLyrics] = useState(\"\");\n\t// old\n\tconst [playlists, setPlaylists] = useState([]);\n\tconst [playlistTracks, setPlaylistTracks] = useState([]);\n\n\tfunction chooseTrack(track) {\n\t\tsetPlayingTrack(track);\n\t\tsetSearch(\"\");\n\t\tsetLyrics(\"\");\n\t}\n\n\tuseEffect(() => {\n\t\tif (!playingTrack) return;\n\n\t\taxios\n\t\t\t.get(\"http://localhost:3001/lyrics\", {\n\t\t\t\tparams: {\n\t\t\t\t\ttrack: playingTrack.title,\n\t\t\t\t\tartist: playingTrack.artist,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tsetLyrics(res.data.lyrics);\n\t\t\t});\n\t}, [playingTrack]);\n\n\tuseEffect(() => {\n\t\tif (!accessToken) return;\n\t\tspotifyApi.setAccessToken(accessToken);\n\t}, [accessToken]);\n\n\tconst fetchPlaylists = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(`${API_BASE_URL}/me/playlists`, {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${accessToken}`,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tif (response.ok) {\n\t\t\t\tconst data = await response.json();\n\t\t\t\tsetPlaylists(data.items);\n\t\t\t} else {\n\t\t\t\tconsole.log(\"Error:\", response.status);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(\"Error:\", error);\n\t\t}\n\t};\n\n\tconst fetchPlaylistTracks = async (playlistId) => {\n\t\ttry {\n\t\t\tconst response = await fetch(`${API_BASE_URL}/playlists/${playlistId}/tracks`, {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${accessToken}`,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tif (response.ok) {\n\t\t\t\tconst data = await response.json();\n\t\t\t\tsetPlaylistTracks(data.items);\n\t\t\t} else {\n\t\t\t\tconsole.log(\"Error:\", response.status);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(\"Error:\", error);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (!search) return setSearchResults([]);\n\t\tif (!accessToken) return;\n\t\tlet cancel = false;\n\t\tspotifyApi.searchTracks(search).then((res) => {\n\t\t\tif (cancel) return;\n\t\t\tsetSearchResults(\n\t\t\t\tres.body.tracks.items.map((track) => {\n\t\t\t\t\tconst smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n\t\t\t\t\t\tif (image.height < smallest.height) return image;\n\t\t\t\t\t\treturn smallest;\n\t\t\t\t\t}, track.album.images[0]);\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tartist: track.artists[0].name,\n\t\t\t\t\t\ttitle: track.name,\n\t\t\t\t\t\turi: track.uri,\n\t\t\t\t\t\talbumUrl: smallestAlbumImage.url,\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\n\t\treturn () => (cancel = true);\n\t}, [search, accessToken]);\n\n\treturn (\n\t\t<Container className=\"dashboard\">\n\t\t\t<hr />\n\t\t\t<Tracks />\n\t\t\t<ControlPanel />\n\t\t\t<div className=\"player\">\n\t\t\t\t<Player accessToken={accessToken} trackUri={playingTrack?.uri} />\n\t\t\t</div>\n\t\t</Container>\n\t);\n}\n\n{\n\t/* <Form.Control type=\"search\" placeholder=\"Search Songs/Artists\" value={search} onChange={(e) => setSearch(e.target.value)} /> */\n}\n{\n\t/* <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\n\t\t\t\t{searchResults.map((track) => (\n\t\t\t\t\t<TrackSearchResult track={track} key={track.uri} chooseTrack={chooseTrack} />\n\t\t\t\t))}\n\t\t\t\t{searchResults.length === 0 && (\n\t\t\t\t\t<div className=\"text-center\" style={{ whiteSpace: \"pre\" }}>\n\t\t\t\t\t\t{lyrics}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div> */\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}