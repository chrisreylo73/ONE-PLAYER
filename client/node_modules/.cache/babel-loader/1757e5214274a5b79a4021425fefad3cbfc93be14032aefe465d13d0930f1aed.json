{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\TEMP SPOTIFY APP\\\\frontend\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport useAuth from \"./useAuth\";\nimport Player from \"./Player\";\nimport TrackSearchResult from \"./TrackSearchResult\";\nimport { Container, Form } from \"react-bootstrap\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"b96044a084a542c691fe9b0eca9684de\"\n});\nexport default function Dashboard(_ref) {\n  _s();\n  let {\n    code\n  } = _ref;\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const [lyrics, setLyrics] = useState(\"\");\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch(\"\");\n    setLyrics(\"\");\n  }\n  useEffect(() => {\n    if (!playingTrack) return;\n    axios.get(\"http://localhost:3001/lyrics\", {\n      params: {\n        track: playingTrack.title,\n        artist: playingTrack.artist\n      }\n    }).then(res => {\n      setLyrics(res.data.lyrics);\n    });\n  }, [playingTrack]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    // if (!search) return setSearchResults([]);\n    // if (!accessToken) return;\n    // let cancel = false;\n    // spotifyApi.searchTracks(search).then((res) => {\n    // \tconsole.log(res);\n    // \tif (cancel) return;\n    // \tsetSearchResults(\n    // \t\tres.body.tracks.items.map((track) => {\n    // \t\t\tconst smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n    // \t\t\t\tif (image.height < smallest.height) return image;\n    // \t\t\t\treturn smallest;\n    // \t\t\t}, track.album.images[0]);\n    // \t\t\treturn {\n    // \t\t\t\tartist: track.artists[0].name,\n    // \t\t\t\ttitle: track.name,\n    // \t\t\t\turi: track.uri,\n    // \t\t\t\talbumUrl: smallestAlbumImage.url,\n    // \t\t\t};\n    // \t\t})\n    // \t);\n    // });\n    // return () => (cancel = true);\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column py-2\",\n    style: {\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"search\",\n      placeholder: \"Search Songs/Artists\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: \"auto\"\n      },\n      children: [searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResult, {\n        track: track,\n        chooseTrack: chooseTrack\n      }, track.uri, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 6\n      }, this)), searchResults.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        style: {\n          whiteSpace: \"pre\"\n        },\n        children: lyrics\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Player, {\n        accessToken: accessToken,\n        trackUri: playingTrack === null || playingTrack === void 0 ? void 0 : playingTrack.uri\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 3\n  }, this);\n}\n_s(Dashboard, \"C/xkEiesDpJOEbcaLNXZ/RIs9iE=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","useAuth","Player","TrackSearchResult","Container","Form","SpotifyWebApi","axios","jsxDEV","_jsxDEV","spotifyApi","clientId","Dashboard","_ref","_s","code","accessToken","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","lyrics","setLyrics","chooseTrack","track","get","params","title","artist","then","res","data","setAccessToken","className","style","height","children","Control","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","overflowY","map","uri","length","whiteSpace","trackUri","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/TEMP SPOTIFY APP/frontend/src/Dashboard.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport useAuth from \"./useAuth\";\r\nimport Player from \"./Player\";\r\nimport TrackSearchResult from \"./TrackSearchResult\";\r\nimport { Container, Form } from \"react-bootstrap\";\r\nimport SpotifyWebApi from \"spotify-web-api-node\";\r\nimport axios from \"axios\";\r\n\r\nconst spotifyApi = new SpotifyWebApi({\r\n\tclientId: \"b96044a084a542c691fe9b0eca9684de\",\r\n});\r\n\r\nexport default function Dashboard({ code }) {\r\n\tconst accessToken = useAuth(code);\r\n\tconst [search, setSearch] = useState(\"\");\r\n\tconst [searchResults, setSearchResults] = useState([]);\r\n\tconst [playingTrack, setPlayingTrack] = useState();\r\n\tconst [lyrics, setLyrics] = useState(\"\");\r\n\r\n\tfunction chooseTrack(track) {\r\n\t\tsetPlayingTrack(track);\r\n\t\tsetSearch(\"\");\r\n\t\tsetLyrics(\"\");\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!playingTrack) return;\r\n\r\n\t\taxios\r\n\t\t\t.get(\"http://localhost:3001/lyrics\", {\r\n\t\t\t\tparams: {\r\n\t\t\t\t\ttrack: playingTrack.title,\r\n\t\t\t\t\tartist: playingTrack.artist,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetLyrics(res.data.lyrics);\r\n\t\t\t});\r\n\t}, [playingTrack]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!accessToken) return;\r\n\t\tspotifyApi.setAccessToken(accessToken);\r\n\t}, [accessToken]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// if (!search) return setSearchResults([]);\r\n\t\t// if (!accessToken) return;\r\n\t\t// let cancel = false;\r\n\t\t// spotifyApi.searchTracks(search).then((res) => {\r\n\t\t// \tconsole.log(res);\r\n\t\t// \tif (cancel) return;\r\n\t\t// \tsetSearchResults(\r\n\t\t// \t\tres.body.tracks.items.map((track) => {\r\n\t\t// \t\t\tconst smallestAlbumImage = track.album.images.reduce((smallest, image) => {\r\n\t\t// \t\t\t\tif (image.height < smallest.height) return image;\r\n\t\t// \t\t\t\treturn smallest;\r\n\t\t// \t\t\t}, track.album.images[0]);\r\n\t\t// \t\t\treturn {\r\n\t\t// \t\t\t\tartist: track.artists[0].name,\r\n\t\t// \t\t\t\ttitle: track.name,\r\n\t\t// \t\t\t\turi: track.uri,\r\n\t\t// \t\t\t\talbumUrl: smallestAlbumImage.url,\r\n\t\t// \t\t\t};\r\n\t\t// \t\t})\r\n\t\t// \t);\r\n\t\t// });\r\n\t\t// return () => (cancel = true);\r\n\t}, [search, accessToken]);\r\n\r\n\treturn (\r\n\t\t<Container className=\"d-flex flex-column py-2\" style={{ height: \"100vh\" }}>\r\n\t\t\t<Form.Control type=\"search\" placeholder=\"Search Songs/Artists\" value={search} onChange={(e) => setSearch(e.target.value)} />\r\n\t\t\t<div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\r\n\t\t\t\t{searchResults.map((track) => (\r\n\t\t\t\t\t<TrackSearchResult track={track} key={track.uri} chooseTrack={chooseTrack} />\r\n\t\t\t\t))}\r\n\t\t\t\t{searchResults.length === 0 && (\r\n\t\t\t\t\t<div className=\"text-center\" style={{ whiteSpace: \"pre\" }}>\r\n\t\t\t\t\t\t{lyrics}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<Player accessToken={accessToken} trackUri={playingTrack?.uri} />\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}