{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Desktop\\\\spotify-clone-main\\\\client\\\\src\\\\components\\\\Tracks.jsx\";\nimport React from \"react\";\nimport Song from \"./Song\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tracks = _ref => {\n  let {\n    selectedPlaylist,\n    playlistTracks,\n    chooseTrack\n  } = _ref;\n  if (!selectedPlaylist) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracks\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlistHeaders-spotify\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Spotify Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playlistHeaders-youtube\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Youtube Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 4\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tracks\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlistHeaders-spotify\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: selectedPlaylist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracks-content\",\n      children: playlistTracks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: playlistTracks.map(track => /*#__PURE__*/_jsxDEV(Song, {\n          albumCover: track.album.images[0].url,\n          title: track.name,\n          artist: track.artists[0].name,\n          album: track.album.name,\n          length: track.duration_ms,\n          chooseTrack: chooseTrack,\n          track: track\n        }, track.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tracks found in the selected playlist.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlistHeaders-youtube\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Youtube Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n};\n_c = Tracks;\nexport default Tracks;\nvar _c;\n$RefreshReg$(_c, \"Tracks\");","map":{"version":3,"names":["React","Song","jsxDEV","_jsxDEV","Tracks","_ref","selectedPlaylist","playlistTracks","chooseTrack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","length","map","track","albumCover","album","images","url","title","artist","artists","duration_ms","id","_c","$RefreshReg$"],"sources":["C:/Users/chris/Desktop/spotify-clone-main/client/src/components/Tracks.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Song from \"./Song\";\r\n\r\nconst Tracks = ({ selectedPlaylist, playlistTracks, chooseTrack }) => {\r\n\tif (!selectedPlaylist) {\r\n\t\treturn (\r\n\t\t\t<div className=\"tracks\">\r\n\t\t\t\t<div className=\"playlistHeaders-spotify\">\r\n\t\t\t\t\t<h3>Spotify Playlist</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"playlistHeaders-youtube\">\r\n\t\t\t\t\t<h3>Youtube Playlist</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"tracks\">\r\n\t\t\t<div className=\"playlistHeaders-spotify\">\r\n\t\t\t\t<h3>{selectedPlaylist.name}</h3>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"tracks-content\">\r\n\t\t\t\t{playlistTracks.length > 0 ? (\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{playlistTracks.map((track) => (\r\n\t\t\t\t\t\t\t<Song key={track.id} albumCover={track.album.images[0].url} title={track.name} artist={track.artists[0].name} album={track.album.name} length={track.duration_ms} chooseTrack={chooseTrack} track={track}></Song>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>No tracks found in the selected playlist.</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"playlistHeaders-youtube\">\r\n\t\t\t\t<h3>Youtube Playlist</h3>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Tracks;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}