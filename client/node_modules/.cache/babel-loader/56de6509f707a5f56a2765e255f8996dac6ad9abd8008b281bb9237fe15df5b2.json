{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n  return to;\n};\n/* eslint-disable camelcase */\nimport * as React from 'react';\nimport memoize from 'memoize-one';\nimport Actions from './components/Actions';\nimport Content from './components/Content';\nimport Controls from './components/Controls';\nimport ErrorMessage from './components/ErrorMessage';\nimport Info from './components/Info';\nimport Loader from './components/Loader';\nimport Player from './components/Player';\nimport Slider from './components/Slider';\nimport { getDevices, getPlaybackState, next, pause, play, previous, seek, setDevice, setVolume } from './spotify';\nimport { getMergedStyles } from './styles';\nimport { getSpotifyURIType, isEqualArray, loadSpotifyPlayer, parseVolume, round, STATUS, TYPE, validateURI } from './utils';\nvar SpotifyWebPlayer = /** @class */function (_super) {\n  __extends(SpotifyWebPlayer, _super);\n  function SpotifyWebPlayer(props) {\n    var _this = _super.call(this, props) || this;\n    _this.isActive = false;\n    _this.emptyTrack = {\n      artists: '',\n      durationMs: 0,\n      id: '',\n      image: '',\n      name: '',\n      uri: ''\n    };\n    _this.getPlayOptions = memoize(function (data) {\n      var playOptions = {\n        context_uri: undefined,\n        uris: undefined\n      };\n      /* istanbul ignore else */\n      if (data) {\n        var ids = Array.isArray(data) ? data : [data];\n        if (!ids.every(function (d) {\n          return validateURI(d);\n        })) {\n          // eslint-disable-next-line no-console\n          console.error('Invalid URI');\n          return playOptions;\n        }\n        if (ids.some(function (d) {\n          return getSpotifyURIType(d) === 'track';\n        })) {\n          if (!ids.every(function (d) {\n            return getSpotifyURIType(d) === 'track';\n          })) {\n            // eslint-disable-next-line no-console\n            console.warn(\"You can't mix tracks URIs with other types\");\n          }\n          playOptions.uris = ids.filter(function (d) {\n            return validateURI(d) && getSpotifyURIType(d) === 'track';\n          });\n        } else {\n          if (ids.length > 1) {\n            // eslint-disable-next-line no-console\n            console.warn(\"Albums, Artists, Playlists and Podcasts can't have multiple URIs\");\n          }\n          // eslint-disable-next-line prefer-destructuring\n          playOptions.context_uri = ids[0];\n        }\n      }\n      return playOptions;\n    });\n    _this.hasNewToken = false;\n    _this.ref = React.createRef();\n    _this.seekUpdateInterval = 100;\n    _this.handleChangeRange = function (position) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var track, _a, callback, token, progress, percentage, state, error_1;\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              track = this.state.track;\n              _a = this.props, callback = _a.callback, token = _a.token;\n              progress = 0;\n              _b.label = 1;\n            case 1:\n              _b.trys.push([1, 8,, 9]);\n              percentage = position / 100;\n              if (!this.isExternalPlayer) return [3 /*break*/, 3];\n              progress = Math.round(track.durationMs * percentage);\n              return [4 /*yield*/, seek(token, progress)];\n            case 2:\n              _b.sent();\n              this.updateState({\n                position: position,\n                progressMs: progress\n              });\n              return [3 /*break*/, 7];\n            case 3:\n              if (!this.player) return [3 /*break*/, 7];\n              return [4 /*yield*/, this.player.getCurrentState()];\n            case 4:\n              state = _b.sent();\n              if (!state) return [3 /*break*/, 6];\n              progress = Math.round(state.track_window.current_track.duration_ms * percentage);\n              return [4 /*yield*/, this.player.seek(progress)];\n            case 5:\n              _b.sent();\n              this.updateState({\n                position: position,\n                progressMs: progress\n              });\n              return [3 /*break*/, 7];\n            case 6:\n              this.updateState({\n                position: 0\n              });\n              _b.label = 7;\n            case 7:\n              if (callback) {\n                callback(__assign(__assign({}, this.state), {\n                  type: TYPE.PROGRESS\n                }));\n              }\n              return [3 /*break*/, 9];\n            case 8:\n              error_1 = _b.sent();\n              // eslint-disable-next-line no-console\n              console.error(error_1);\n              return [3 /*break*/, 9];\n            case 9:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    _this.handleClickTogglePlay = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var isActive, error_2;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              isActive = this.state.isActive;\n              _a.label = 1;\n            case 1:\n              _a.trys.push([1, 3,, 4]);\n              return [4 /*yield*/, this.togglePlay(!this.isExternalPlayer && !isActive)];\n            case 2:\n              _a.sent();\n              return [3 /*break*/, 4];\n            case 3:\n              error_2 = _a.sent();\n              // eslint-disable-next-line no-console\n              console.error(error_2);\n              return [3 /*break*/, 4];\n            case 4:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    _this.handleClickPrevious = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var token, error_3;\n        var _this = this;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _a.trys.push([0, 5,, 6]);\n              if (!this.isExternalPlayer) return [3 /*break*/, 2];\n              token = this.props.token;\n              return [4 /*yield*/, previous(token)];\n            case 1:\n              _a.sent();\n              this.syncTimeout = window.setTimeout(function () {\n                _this.syncDevice();\n              }, 300);\n              return [3 /*break*/, 4];\n            case 2:\n              if (!this.player) return [3 /*break*/, 4];\n              return [4 /*yield*/, this.player.previousTrack()];\n            case 3:\n              _a.sent();\n              _a.label = 4;\n            case 4:\n              return [3 /*break*/, 6];\n            case 5:\n              error_3 = _a.sent();\n              // eslint-disable-next-line no-console\n              console.error(error_3);\n              return [3 /*break*/, 6];\n            case 6:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    _this.handleClickNext = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var token, error_4;\n        var _this = this;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _a.trys.push([0, 5,, 6]);\n              if (!this.isExternalPlayer) return [3 /*break*/, 2];\n              token = this.props.token;\n              return [4 /*yield*/, next(token)];\n            case 1:\n              _a.sent();\n              this.syncTimeout = window.setTimeout(function () {\n                _this.syncDevice();\n              }, 300);\n              return [3 /*break*/, 4];\n            case 2:\n              if (!this.player) return [3 /*break*/, 4];\n              return [4 /*yield*/, this.player.nextTrack()];\n            case 3:\n              _a.sent();\n              _a.label = 4;\n            case 4:\n              return [3 /*break*/, 6];\n            case 5:\n              error_4 = _a.sent();\n              // eslint-disable-next-line no-console\n              console.error(error_4);\n              return [3 /*break*/, 6];\n            case 6:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    _this.handleClickDevice = function (deviceId) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var isUnsupported, _a, autoPlay, persistDeviceSelection, token, player, error_5;\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              isUnsupported = this.state.isUnsupported;\n              _a = this.props, autoPlay = _a.autoPlay, persistDeviceSelection = _a.persistDeviceSelection, token = _a.token;\n              this.updateState({\n                currentDeviceId: deviceId\n              });\n              _b.label = 1;\n            case 1:\n              _b.trys.push([1, 7,, 8]);\n              return [4 /*yield*/, setDevice(token, deviceId)];\n            case 2:\n              _b.sent();\n              /* istanbul ignore else */\n              if (persistDeviceSelection) {\n                sessionStorage.setItem('rswpDeviceId', deviceId);\n              }\n              if (!isUnsupported) return [3 /*break*/, 6];\n              return [4 /*yield*/, this.syncDevice()];\n            case 3:\n              _b.sent();\n              return [4 /*yield*/, getPlaybackState(token)];\n            case 4:\n              player = _b.sent();\n              if (!(player && !player.is_playing && autoPlay)) return [3 /*break*/, 6];\n              return [4 /*yield*/, this.togglePlay(true)];\n            case 5:\n              _b.sent();\n              _b.label = 6;\n            case 6:\n              return [3 /*break*/, 8];\n            case 7:\n              error_5 = _b.sent();\n              // eslint-disable-next-line no-console\n              console.error(error_5);\n              return [3 /*break*/, 8];\n            case 8:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    _this.handleFavoriteStatusChange = function (status) {\n      var isSaved = _this.state.isSaved;\n      var callback = _this.props.callback;\n      _this.updateState({\n        isSaved: status\n      });\n      /* istanbul ignore else */\n      if (isSaved !== status) {\n        callback(__assign(__assign({}, __assign(__assign({}, _this.state), {\n          isSaved: status\n        })), {\n          type: TYPE.FAVORITE\n        }));\n      }\n    };\n    _this.handlePlayerErrors = function (type, message) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var status, isPlaybackError, isInitializationError, nextStatus, devices, token;\n        var _a;\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              status = this.state.status;\n              isPlaybackError = type === 'playback_error';\n              isInitializationError = type === 'initialization_error';\n              nextStatus = status;\n              devices = [];\n              if (!(this.player && !isPlaybackError)) return [3 /*break*/, 2];\n              return [4 /*yield*/, this.player.disconnect()];\n            case 1:\n              _b.sent();\n              _b.label = 2;\n            case 2:\n              if (!isInitializationError) return [3 /*break*/, 4];\n              nextStatus = STATUS.UNSUPPORTED;\n              token = this.props.token;\n              return [4 /*yield*/, getDevices(token)];\n            case 3:\n              _a = _b.sent().devices, devices = _a === void 0 ? [] : _a;\n              _b.label = 4;\n            case 4:\n              if (!isInitializationError && !isPlaybackError) {\n                nextStatus = STATUS.ERROR;\n              }\n              this.updateState({\n                devices: devices,\n                error: message,\n                errorType: type,\n                isInitializing: false,\n                isUnsupported: isInitializationError,\n                status: nextStatus\n              });\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    _this.handlePlayerStateChanges = function (state) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var paused, position, _a, _b, album, artists, duration_ms, id, name_1, uri, next_tracks, previous_tracks, isPlaying, volume, track, trackState, error_6;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _c.trys.push([0, 6,, 7]);\n              if (!state) return [3 /*break*/, 2];\n              paused = state.paused, position = state.position, _a = state.track_window, _b = _a.current_track, album = _b.album, artists = _b.artists, duration_ms = _b.duration_ms, id = _b.id, name_1 = _b.name, uri = _b.uri, next_tracks = _a.next_tracks, previous_tracks = _a.previous_tracks;\n              isPlaying = !paused;\n              return [4 /*yield*/, this.player.getVolume()];\n            case 1:\n              volume = _c.sent();\n              track = {\n                artists: artists.map(function (d) {\n                  return d.name;\n                }).join(', '),\n                durationMs: duration_ms,\n                id: id,\n                image: this.setAlbumImage(album),\n                name: name_1,\n                uri: uri\n              };\n              trackState = void 0;\n              if (position === 0) {\n                trackState = {\n                  nextTracks: next_tracks,\n                  position: 0,\n                  previousTracks: previous_tracks,\n                  track: track\n                };\n              }\n              this.updateState(__assign({\n                error: '',\n                errorType: '',\n                isActive: true,\n                isPlaying: isPlaying,\n                progressMs: position,\n                volume: round(volume)\n              }, trackState));\n              return [3 /*break*/, 5];\n            case 2:\n              if (!this.isExternalPlayer) return [3 /*break*/, 4];\n              return [4 /*yield*/, this.syncDevice()];\n            case 3:\n              _c.sent();\n              return [3 /*break*/, 5];\n            case 4:\n              this.updateState({\n                isActive: false,\n                isPlaying: false,\n                nextTracks: [],\n                position: 0,\n                previousTracks: [],\n                track: {\n                  artists: '',\n                  durationMs: 0,\n                  id: '',\n                  image: '',\n                  name: '',\n                  uri: ''\n                }\n              });\n              _c.label = 5;\n            case 5:\n              return [3 /*break*/, 7];\n            case 6:\n              error_6 = _c.sent();\n              // eslint-disable-next-line no-console\n              console.error(error_6);\n              return [3 /*break*/, 7];\n            case 7:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    _this.handlePlayerStatus = function (_a) {\n      var device_id = _a.device_id;\n      return __awaiter(_this, void 0, void 0, function () {\n        var _b, currentDeviceId, devices;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              return [4 /*yield*/, this.initializeDevices(device_id)];\n            case 1:\n              _b = _c.sent(), currentDeviceId = _b.currentDeviceId, devices = _b.devices;\n              this.updateState({\n                currentDeviceId: currentDeviceId,\n                deviceId: device_id,\n                devices: devices,\n                isInitializing: false,\n                status: device_id ? STATUS.READY : STATUS.IDLE\n              });\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    _this.handleToggleMagnify = function () {\n      var magnifySliderOnHover = _this.props.magnifySliderOnHover;\n      if (magnifySliderOnHover) {\n        _this.updateState(function (previousState) {\n          return {\n            isMagnified: !previousState.isMagnified\n          };\n        });\n      }\n    };\n    _this.initializePlayer = function () {\n      var volume = _this.state.volume;\n      var _a = _this.props,\n        name = _a.name,\n        token = _a.token;\n      _this.updateState({\n        isInitializing: true\n      });\n      // @ts-ignore\n      _this.player = new window.Spotify.Player({\n        getOAuthToken: function (callback) {\n          callback(token);\n        },\n        name: name,\n        volume: volume\n      });\n      _this.player.addListener('ready', _this.handlePlayerStatus);\n      _this.player.addListener('not_ready', _this.handlePlayerStatus);\n      _this.player.addListener('player_state_changed', _this.handlePlayerStateChanges);\n      _this.player.addListener('initialization_error', function (error) {\n        return _this.handlePlayerErrors('initialization_error', error.message);\n      });\n      _this.player.addListener('authentication_error', function (error) {\n        return _this.handlePlayerErrors('authentication_error', error.message);\n      });\n      _this.player.addListener('account_error', function (error) {\n        return _this.handlePlayerErrors('account_error', error.message);\n      });\n      _this.player.addListener('playback_error', function (error) {\n        return _this.handlePlayerErrors('playback_error', error.message);\n      });\n      _this.player.connect();\n    };\n    _this.setAlbumImage = function (album) {\n      var width = Math.min.apply(Math, __spreadArray([], __read(album.images.map(function (d) {\n        return d.width;\n      }))));\n      var thumb = album.images.find(function (d) {\n        return d.width === width;\n      }) || {};\n      return thumb.url;\n    };\n    _this.setExternalDevice = function (id) {\n      _this.updateState({\n        currentDeviceId: id,\n        isPlaying: true\n      });\n    };\n    _this.setVolume = function (volume) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var token;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              token = this.props.token;\n              if (!this.isExternalPlayer) return [3 /*break*/, 3];\n              return [4 /*yield*/, setVolume(token, Math.round(volume * 100))];\n            case 1:\n              _a.sent();\n              return [4 /*yield*/, this.syncDevice()];\n            case 2:\n              _a.sent();\n              return [3 /*break*/, 5];\n            case 3:\n              if (!this.player) return [3 /*break*/, 5];\n              return [4 /*yield*/, this.player.setVolume(volume)];\n            case 4:\n              _a.sent();\n              _a.label = 5;\n            case 5:\n              this.updateState({\n                volume: volume\n              });\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    _this.syncDevice = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var deviceId, token, player, track, error_7, state;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!this.isActive) {\n                return [2 /*return*/];\n              }\n\n              deviceId = this.state.deviceId;\n              token = this.props.token;\n              _a.label = 1;\n            case 1:\n              _a.trys.push([1, 3,, 4]);\n              return [4 /*yield*/, getPlaybackState(token)];\n            case 2:\n              player = _a.sent();\n              track = this.emptyTrack;\n              if (!player) {\n                throw new Error('No player');\n              }\n              /* istanbul ignore else */\n              if (player.item) {\n                track = {\n                  artists: player.item.artists.map(function (d) {\n                    return d.name;\n                  }).join(', '),\n                  durationMs: player.item.duration_ms,\n                  id: player.item.id,\n                  image: this.setAlbumImage(player.item.album),\n                  name: player.item.name,\n                  uri: player.item.uri\n                };\n              }\n              this.updateState({\n                error: '',\n                errorType: '',\n                isActive: true,\n                isPlaying: player.is_playing,\n                nextTracks: [],\n                previousTracks: [],\n                progressMs: player.item ? player.progress_ms : 0,\n                status: STATUS.READY,\n                track: track,\n                volume: parseVolume(player.device.volume_percent)\n              });\n              return [3 /*break*/, 4];\n            case 3:\n              error_7 = _a.sent();\n              state = {\n                isActive: false,\n                isPlaying: false,\n                position: 0,\n                track: this.emptyTrack\n              };\n              if (deviceId) {\n                this.updateState(__assign({\n                  currentDeviceId: deviceId\n                }, state));\n                return [2 /*return*/];\n              }\n\n              this.updateState(__assign({\n                error: error_7.message,\n                errorType: 'player_status',\n                status: STATUS.ERROR\n              }, state));\n              return [3 /*break*/, 4];\n            case 4:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    _this.toggleOffset = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, currentDeviceId, isPlaying, _b, offset, token, uris;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _a = this.state, currentDeviceId = _a.currentDeviceId, isPlaying = _a.isPlaying;\n              _b = this.props, offset = _b.offset, token = _b.token, uris = _b.uris;\n              if (!(isPlaying && typeof offset === 'number' && Array.isArray(uris))) return [3 /*break*/, 2];\n              return [4 /*yield*/, play(token, {\n                deviceId: currentDeviceId,\n                offset: offset,\n                uris: uris\n              })];\n            case 1:\n              _c.sent();\n              _c.label = 2;\n            case 2:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    _this.togglePlay = function (init) {\n      if (init === void 0) {\n        init = false;\n      }\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, currentDeviceId, isPlaying, needsUpdate, _b, offset, token, uris, shouldInitialize, playOptions, playerState, error_8;\n        var _this = this;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _a = this.state, currentDeviceId = _a.currentDeviceId, isPlaying = _a.isPlaying, needsUpdate = _a.needsUpdate;\n              _b = this.props, offset = _b.offset, token = _b.token, uris = _b.uris;\n              shouldInitialize = init || needsUpdate;\n              playOptions = this.getPlayOptions(uris);\n              _c.label = 1;\n            case 1:\n              _c.trys.push([1, 12,, 13]);\n              if (!this.isExternalPlayer) return [3 /*break*/, 6];\n              if (!!isPlaying) return [3 /*break*/, 3];\n              return [4 /*yield*/, play(token, __assign({\n                deviceId: currentDeviceId,\n                offset: offset\n              }, shouldInitialize ? playOptions : undefined))];\n            case 2:\n              _c.sent();\n              return [3 /*break*/, 5];\n            case 3:\n              return [4 /*yield*/, pause(token)];\n            case 4:\n              _c.sent();\n              this.updateState({\n                isPlaying: false\n              });\n              _c.label = 5;\n            case 5:\n              this.syncTimeout = window.setTimeout(function () {\n                _this.syncDevice();\n              }, 300);\n              return [3 /*break*/, 11];\n            case 6:\n              if (!this.player) return [3 /*break*/, 11];\n              return [4 /*yield*/, this.player.getCurrentState()];\n            case 7:\n              playerState = _c.sent();\n              if (!(!playerState && !!(playOptions.context_uri || playOptions.uris) || shouldInitialize && playerState && playerState.paused)) return [3 /*break*/, 9];\n              return [4 /*yield*/, play(token, __assign({\n                deviceId: currentDeviceId,\n                offset: offset\n              }, shouldInitialize ? playOptions : undefined))];\n            case 8:\n              _c.sent();\n              return [3 /*break*/, 11];\n            case 9:\n              return [4 /*yield*/, this.player.togglePlay()];\n            case 10:\n              _c.sent();\n              _c.label = 11;\n            case 11:\n              if (needsUpdate) {\n                this.updateState({\n                  needsUpdate: false\n                });\n              }\n              return [3 /*break*/, 13];\n            case 12:\n              error_8 = _c.sent();\n              // eslint-disable-next-line no-console\n              console.error(error_8);\n              return [3 /*break*/, 13];\n            case 13:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    _this.updateSeekBar = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, progressMs, track, position, state, progress, position, error_9;\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              if (!this.isActive) {\n                return [2 /*return*/];\n              }\n\n              _a = this.state, progressMs = _a.progressMs, track = _a.track;\n              _b.label = 1;\n            case 1:\n              _b.trys.push([1, 5,, 6]);\n              if (!this.isExternalPlayer) return [3 /*break*/, 2];\n              position = progressMs / track.durationMs;\n              position = Number(((Number.isFinite(position) ? position : 0) * 100).toFixed(1));\n              this.updateState({\n                position: position,\n                progressMs: progressMs + this.seekUpdateInterval\n              });\n              return [3 /*break*/, 4];\n            case 2:\n              if (!this.player) return [3 /*break*/, 4];\n              return [4 /*yield*/, this.player.getCurrentState()];\n            case 3:\n              state = _b.sent();\n              /* istanbul ignore else */\n              if (state) {\n                progress = state.position;\n                position = Number((progress / state.track_window.current_track.duration_ms * 100).toFixed(1));\n                this.updateState({\n                  position: position,\n                  progressMs: progress + this.seekUpdateInterval\n                });\n              }\n              _b.label = 4;\n            case 4:\n              return [3 /*break*/, 6];\n            case 5:\n              error_9 = _b.sent();\n              // eslint-disable-next-line no-console\n              console.error(error_9);\n              return [3 /*break*/, 6];\n            case 6:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    _this.updateState = function (state) {\n      if (state === void 0) {\n        state = {};\n      }\n      if (!_this.isActive) {\n        return;\n      }\n      _this.setState(state);\n    };\n    _this.state = {\n      currentDeviceId: '',\n      deviceId: '',\n      devices: [],\n      error: '',\n      errorType: '',\n      isActive: false,\n      isInitializing: false,\n      isMagnified: false,\n      isPlaying: false,\n      isSaved: false,\n      isUnsupported: false,\n      needsUpdate: false,\n      nextTracks: [],\n      playerPosition: 'bottom',\n      position: 0,\n      previousTracks: [],\n      progressMs: 0,\n      status: STATUS.IDLE,\n      track: _this.emptyTrack,\n      volume: parseVolume(props.initialVolume) || 1\n    };\n    _this.styles = getMergedStyles(props.styles);\n    return _this;\n  }\n  SpotifyWebPlayer.prototype.componentDidMount = function () {\n    var _a;\n    return __awaiter(this, void 0, void 0, function () {\n      var _b, top;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            this.isActive = true;\n            _b = (((_a = this.ref.current) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect()) || {}).top, top = _b === void 0 ? 0 : _b;\n            this.updateState({\n              playerPosition: top > window.innerHeight / 2 ? 'bottom' : 'top',\n              status: STATUS.INITIALIZING\n            });\n            if (!window.onSpotifyWebPlaybackSDKReady) {\n              window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;\n            } else {\n              this.initializePlayer();\n            }\n            return [4 /*yield*/, loadSpotifyPlayer()];\n          case 1:\n            _c.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  SpotifyWebPlayer.prototype.componentDidUpdate = function (previousProps, previousState) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, currentDeviceId, deviceId, error, isInitializing, isPlaying, status, track, _b, autoPlay, callback, offset, playProp, showSaveIcon, syncExternalDevice, token, uris, isReady, changedURIs, playOptions, canPlay, shouldPlay, player;\n      var _this = this;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = this.state, currentDeviceId = _a.currentDeviceId, deviceId = _a.deviceId, error = _a.error, isInitializing = _a.isInitializing, isPlaying = _a.isPlaying, status = _a.status, track = _a.track;\n            _b = this.props, autoPlay = _b.autoPlay, callback = _b.callback, offset = _b.offset, playProp = _b.play, showSaveIcon = _b.showSaveIcon, syncExternalDevice = _b.syncExternalDevice, token = _b.token, uris = _b.uris;\n            isReady = previousState.status !== STATUS.READY && status === STATUS.READY;\n            changedURIs = Array.isArray(uris) ? !isEqualArray(previousProps.uris, uris) : previousProps.uris !== uris;\n            playOptions = this.getPlayOptions(uris);\n            canPlay = !!currentDeviceId && !!(playOptions.context_uri || playOptions.uris);\n            shouldPlay = changedURIs && isPlaying || !!(isReady && (autoPlay || playProp));\n            if (!(canPlay && shouldPlay)) return [3 /*break*/, 2];\n            return [4 /*yield*/, play(token, __assign({\n              deviceId: currentDeviceId,\n              offset: offset\n            }, playOptions))];\n          case 1:\n            _c.sent();\n            /* istanbul ignore else */\n            if (!isPlaying) {\n              this.updateState({\n                isPlaying: true\n              });\n            }\n            if (this.isExternalPlayer) {\n              this.syncTimeout = window.setTimeout(function () {\n                _this.syncDevice();\n              }, 600);\n            }\n            return [3 /*break*/, 3];\n          case 2:\n            if (changedURIs && !isPlaying) {\n              this.updateState({\n                needsUpdate: true\n              });\n            }\n            _c.label = 3;\n          case 3:\n            if (previousState.status !== status) {\n              callback(__assign(__assign({}, this.state), {\n                type: TYPE.STATUS\n              }));\n            }\n            if (!(previousState.currentDeviceId !== currentDeviceId && currentDeviceId)) return [3 /*break*/, 6];\n            if (!isReady) {\n              callback(__assign(__assign({}, this.state), {\n                type: TYPE.DEVICE\n              }));\n            }\n            return [4 /*yield*/, this.toggleSyncInterval(this.isExternalPlayer)];\n          case 4:\n            _c.sent();\n            return [4 /*yield*/, this.updateSeekBar()];\n          case 5:\n            _c.sent();\n            _c.label = 6;\n          case 6:\n            if (previousState.track.id !== track.id && track.id) {\n              callback(__assign(__assign({}, this.state), {\n                type: TYPE.TRACK\n              }));\n              if (showSaveIcon) {\n                this.updateState({\n                  isSaved: false\n                });\n              }\n            }\n            if (!(previousState.isPlaying !== isPlaying)) return [3 /*break*/, 8];\n            this.toggleProgressBar();\n            return [4 /*yield*/, this.toggleSyncInterval(this.isExternalPlayer)];\n          case 7:\n            _c.sent();\n            callback(__assign(__assign({}, this.state), {\n              type: TYPE.PLAYER\n            }));\n            _c.label = 8;\n          case 8:\n            if (token && previousProps.token !== token) {\n              this.hasNewToken = true;\n              if (!isInitializing) {\n                this.initializePlayer();\n              } else {\n                this.hasNewToken = true;\n              }\n            }\n            if (!(previousProps.play !== playProp && playProp !== isPlaying)) return [3 /*break*/, 10];\n            return [4 /*yield*/, this.togglePlay(!track.id)];\n          case 9:\n            _c.sent();\n            _c.label = 10;\n          case 10:\n            if (!(previousProps.offset !== offset)) return [3 /*break*/, 12];\n            return [4 /*yield*/, this.toggleOffset()];\n          case 11:\n            _c.sent();\n            _c.label = 12;\n          case 12:\n            if (!(previousState.isInitializing && !isInitializing)) return [3 /*break*/, 14];\n            if (error === 'authentication_error' && this.hasNewToken) {\n              this.hasNewToken = false;\n              this.initializePlayer();\n            }\n            if (!(syncExternalDevice && !uris)) return [3 /*break*/, 14];\n            return [4 /*yield*/, getPlaybackState(token)];\n          case 13:\n            player = _c.sent();\n            /* istanbul ignore else */\n            if (player && player.is_playing && player.device.id !== deviceId) {\n              this.setExternalDevice(player.device.id);\n            }\n            _c.label = 14;\n          case 14:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  SpotifyWebPlayer.prototype.componentWillUnmount = function () {\n    this.isActive = false;\n    /* istanbul ignore else */\n    if (this.player) {\n      this.player.disconnect();\n    }\n    clearInterval(this.playerSyncInterval);\n    clearInterval(this.playerProgressInterval);\n    clearTimeout(this.syncTimeout);\n  };\n  Object.defineProperty(SpotifyWebPlayer.prototype, \"isExternalPlayer\", {\n    get: function () {\n      var _a = this.state,\n        currentDeviceId = _a.currentDeviceId,\n        deviceId = _a.deviceId,\n        status = _a.status;\n      return currentDeviceId && currentDeviceId !== deviceId || status === STATUS.UNSUPPORTED;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  SpotifyWebPlayer.prototype.initializeDevices = function (id) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, persistDeviceSelection, token, devices, currentDeviceId, savedDeviceId_1;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this.props, persistDeviceSelection = _a.persistDeviceSelection, token = _a.token;\n            return [4 /*yield*/, getDevices(token)];\n          case 1:\n            devices = _b.sent().devices;\n            currentDeviceId = id;\n            if (persistDeviceSelection) {\n              savedDeviceId_1 = sessionStorage.getItem('rswpDeviceId');\n              /* istanbul ignore else */\n              if (!savedDeviceId_1 || !devices.some(function (d) {\n                return d.id === savedDeviceId_1;\n              })) {\n                sessionStorage.setItem('rswpDeviceId', currentDeviceId);\n              } else {\n                currentDeviceId = savedDeviceId_1;\n              }\n            }\n            return [2 /*return*/, {\n              currentDeviceId: currentDeviceId,\n              devices: devices\n            }];\n        }\n      });\n    });\n  };\n  SpotifyWebPlayer.prototype.toggleSyncInterval = function (shouldSync) {\n    return __awaiter(this, void 0, void 0, function () {\n      var syncExternalDeviceInterval, error_10;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            syncExternalDeviceInterval = this.props.syncExternalDeviceInterval;\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n            if (!(this.isExternalPlayer && shouldSync && !this.playerSyncInterval)) return [3 /*break*/, 3];\n            return [4 /*yield*/, this.syncDevice()];\n          case 2:\n            _a.sent();\n            clearInterval(this.playerSyncInterval);\n            this.playerSyncInterval = window.setInterval(this.syncDevice, syncExternalDeviceInterval * 1000);\n            _a.label = 3;\n          case 3:\n            if ((!shouldSync || !this.isExternalPlayer) && this.playerSyncInterval) {\n              clearInterval(this.playerSyncInterval);\n              this.playerSyncInterval = undefined;\n            }\n            return [3 /*break*/, 5];\n          case 4:\n            error_10 = _a.sent();\n            // eslint-disable-next-line no-console\n            console.error(error_10);\n            return [3 /*break*/, 5];\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  SpotifyWebPlayer.prototype.toggleProgressBar = function () {\n    var isPlaying = this.state.isPlaying;\n    /* istanbul ignore else */\n    if (isPlaying) {\n      /* istanbul ignore else */\n      if (!this.playerProgressInterval) {\n        this.playerProgressInterval = window.setInterval(this.updateSeekBar, this.seekUpdateInterval);\n      }\n    } else if (this.playerProgressInterval) {\n      clearInterval(this.playerProgressInterval);\n      this.playerProgressInterval = undefined;\n    }\n  };\n  SpotifyWebPlayer.prototype.render = function () {\n    var _a = this.state,\n      currentDeviceId = _a.currentDeviceId,\n      deviceId = _a.deviceId,\n      devices = _a.devices,\n      error = _a.error,\n      errorType = _a.errorType,\n      isActive = _a.isActive,\n      isMagnified = _a.isMagnified,\n      isPlaying = _a.isPlaying,\n      isUnsupported = _a.isUnsupported,\n      nextTracks = _a.nextTracks,\n      playerPosition = _a.playerPosition,\n      position = _a.position,\n      previousTracks = _a.previousTracks,\n      status = _a.status,\n      track = _a.track,\n      volume = _a.volume;\n    var _b = this.props,\n      name = _b.name,\n      showSaveIcon = _b.showSaveIcon,\n      token = _b.token,\n      updateSavedStatus = _b.updateSavedStatus;\n    var isReady = [STATUS.READY, STATUS.UNSUPPORTED].indexOf(status) >= 0;\n    var isPlaybackError = errorType === 'playback_error';\n    var output = React.createElement(Loader, {\n      styles: this.styles\n    });\n    var info;\n    if (isPlaybackError) {\n      info = React.createElement(\"p\", null, error);\n    }\n    if (isReady) {\n      /* istanbul ignore else */\n      if (!info) {\n        info = React.createElement(Info, {\n          isActive: isActive,\n          onFavoriteStatusChange: this.handleFavoriteStatusChange,\n          showSaveIcon: showSaveIcon,\n          styles: this.styles,\n          token: token,\n          track: track,\n          updateSavedStatus: updateSavedStatus\n        });\n      }\n      output = React.createElement(React.Fragment, null, React.createElement(\"div\", null, info), React.createElement(Controls, {\n        isExternalDevice: this.isExternalPlayer,\n        isPlaying: isPlaying,\n        nextTracks: nextTracks,\n        onClickNext: this.handleClickNext,\n        onClickPrevious: this.handleClickPrevious,\n        onClickTogglePlay: this.handleClickTogglePlay,\n        previousTracks: previousTracks,\n        styles: this.styles\n      }), React.createElement(Actions, {\n        currentDeviceId: currentDeviceId,\n        deviceId: deviceId,\n        devices: devices,\n        isDevicesOpen: isUnsupported && !deviceId,\n        onClickDevice: this.handleClickDevice,\n        playerPosition: playerPosition,\n        setVolume: this.setVolume,\n        styles: this.styles,\n        volume: volume\n      }));\n    }\n    if (status === STATUS.ERROR) {\n      output = React.createElement(ErrorMessage, {\n        styles: this.styles\n      }, name, \": \", error);\n    }\n    return React.createElement(Player, {\n      ref: this.ref,\n      styles: this.styles\n    }, isReady && React.createElement(Slider, {\n      isMagnified: isMagnified,\n      onChangeRange: this.handleChangeRange,\n      onToggleMagnify: this.handleToggleMagnify,\n      position: position,\n      styles: this.styles\n    }), React.createElement(Content, {\n      styles: this.styles\n    }, output));\n  };\n  // eslint-disable-next-line react/static-property-placement\n  SpotifyWebPlayer.defaultProps = {\n    callback: function () {\n      return undefined;\n    },\n    magnifySliderOnHover: false,\n    name: 'Spotify Web Player',\n    showSaveIcon: false,\n    syncExternalDeviceInterval: 5,\n    syncExternalDevice: false\n  };\n  return SpotifyWebPlayer;\n}(React.PureComponent);\nexport { STATUS, TYPE };\nexport * from './types';\nexport default SpotifyWebPlayer;","map":{"version":3,"names":["React","memoize","Actions","Content","Controls","ErrorMessage","Info","Loader","Player","Slider","getDevices","getPlaybackState","next","pause","play","previous","seek","setDevice","setVolume","getMergedStyles","getSpotifyURIType","isEqualArray","loadSpotifyPlayer","parseVolume","round","STATUS","TYPE","validateURI","SpotifyWebPlayer","_super","__extends","props","_this","call","isActive","emptyTrack","artists","durationMs","id","image","name","uri","getPlayOptions","data","playOptions","context_uri","undefined","uris","ids","Array","isArray","every","d","console","error","some","warn","filter","length","hasNewToken","ref","createRef","seekUpdateInterval","handleChangeRange","position","__awaiter","track","state","_a","callback","token","progress","percentage","isExternalPlayer","Math","_b","sent","updateState","progressMs","player","getCurrentState","track_window","current_track","duration_ms","__assign","type","PROGRESS","error_1","handleClickTogglePlay","togglePlay","error_2","handleClickPrevious","syncTimeout","window","setTimeout","syncDevice","previousTrack","error_3","handleClickNext","nextTrack","error_4","handleClickDevice","deviceId","isUnsupported","autoPlay","persistDeviceSelection","currentDeviceId","sessionStorage","setItem","is_playing","error_5","handleFavoriteStatusChange","status","isSaved","FAVORITE","handlePlayerErrors","message","isPlaybackError","isInitializationError","nextStatus","devices","disconnect","UNSUPPORTED","ERROR","errorType","isInitializing","handlePlayerStateChanges","paused","album","name_1","next_tracks","previous_tracks","isPlaying","getVolume","volume","_c","map","join","setAlbumImage","trackState","nextTracks","previousTracks","error_6","handlePlayerStatus","device_id","initializeDevices","READY","IDLE","handleToggleMagnify","magnifySliderOnHover","previousState","isMagnified","initializePlayer","Spotify","getOAuthToken","addListener","connect","width","min","apply","__spreadArray","__read","images","thumb","find","url","setExternalDevice","Error","item","progress_ms","device","volume_percent","error_7","toggleOffset","offset","init","needsUpdate","shouldInitialize","playerState","error_8","updateSeekBar","Number","isFinite","toFixed","error_9","setState","playerPosition","initialVolume","styles","prototype","componentDidMount","current","getBoundingClientRect","top","innerHeight","INITIALIZING","onSpotifyWebPlaybackSDKReady","componentDidUpdate","previousProps","playProp","showSaveIcon","syncExternalDevice","isReady","changedURIs","canPlay","shouldPlay","DEVICE","toggleSyncInterval","TRACK","toggleProgressBar","PLAYER","componentWillUnmount","clearInterval","playerSyncInterval","playerProgressInterval","clearTimeout","Object","defineProperty","get","savedDeviceId_1","getItem","shouldSync","syncExternalDeviceInterval","setInterval","error_10","render","updateSavedStatus","indexOf","output","createElement","info","onFavoriteStatusChange","Fragment","isExternalDevice","onClickNext","onClickPrevious","onClickTogglePlay","isDevicesOpen","onClickDevice","onChangeRange","onToggleMagnify","defaultProps","PureComponent"],"sources":["C:\\Users\\chris\\Desktop\\spotify-clone-main\\client\\node_modules\\react-spotify-web-playback\\src\\index.tsx"],"sourcesContent":["/* eslint-disable camelcase */\nimport * as React from 'react';\nimport memoize from 'memoize-one';\n\nimport Actions from './components/Actions';\nimport Content from './components/Content';\nimport Controls from './components/Controls';\nimport ErrorMessage from './components/ErrorMessage';\nimport Info from './components/Info';\nimport Loader from './components/Loader';\nimport Player from './components/Player';\nimport Slider from './components/Slider';\nimport {\n  getDevices,\n  getPlaybackState,\n  next,\n  pause,\n  play,\n  previous,\n  seek,\n  setDevice,\n  setVolume,\n} from './spotify';\nimport { getMergedStyles } from './styles';\nimport {\n  PlayOptions,\n  Props,\n  SpotifyDevice,\n  SpotifyPlayerCallback,\n  SpotifyPlayerStatus,\n  State,\n  StylesOptions,\n  WebPlaybackAlbum,\n  WebPlaybackError,\n  WebPlaybackImage,\n  WebPlaybackPlayer,\n  WebPlaybackReady,\n  WebPlaybackState,\n} from './types';\nimport {\n  getSpotifyURIType,\n  isEqualArray,\n  loadSpotifyPlayer,\n  parseVolume,\n  round,\n  STATUS,\n  TYPE,\n  validateURI,\n} from './utils';\n\nclass SpotifyWebPlayer extends React.PureComponent<Props, State> {\n  private isActive = false;\n  private emptyTrack = {\n    artists: '',\n    durationMs: 0,\n    id: '',\n    image: '',\n    name: '',\n    uri: '',\n  };\n\n  private getPlayOptions = memoize((data): PlayOptions => {\n    const playOptions: PlayOptions = {\n      context_uri: undefined,\n      uris: undefined,\n    };\n\n    /* istanbul ignore else */\n    if (data) {\n      const ids = Array.isArray(data) ? data : [data];\n\n      if (!ids.every(d => validateURI(d))) {\n        // eslint-disable-next-line no-console\n        console.error('Invalid URI');\n\n        return playOptions;\n      }\n\n      if (ids.some(d => getSpotifyURIType(d) === 'track')) {\n        if (!ids.every(d => getSpotifyURIType(d) === 'track')) {\n          // eslint-disable-next-line no-console\n          console.warn(\"You can't mix tracks URIs with other types\");\n        }\n\n        playOptions.uris = ids.filter(d => validateURI(d) && getSpotifyURIType(d) === 'track');\n      } else {\n        if (ids.length > 1) {\n          // eslint-disable-next-line no-console\n          console.warn(\"Albums, Artists, Playlists and Podcasts can't have multiple URIs\");\n        }\n\n        // eslint-disable-next-line prefer-destructuring\n        playOptions.context_uri = ids[0];\n      }\n    }\n\n    return playOptions;\n  });\n\n  private hasNewToken = false;\n  private player?: WebPlaybackPlayer;\n  private playerProgressInterval?: number;\n  private playerSyncInterval?: number;\n  private ref = React.createRef<HTMLDivElement>();\n  private seekUpdateInterval = 100;\n  private readonly styles: StylesOptions;\n  private syncTimeout?: number;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      currentDeviceId: '',\n      deviceId: '',\n      devices: [],\n      error: '',\n      errorType: '',\n      isActive: false,\n      isInitializing: false,\n      isMagnified: false,\n      isPlaying: false,\n      isSaved: false,\n      isUnsupported: false,\n      needsUpdate: false,\n      nextTracks: [],\n      playerPosition: 'bottom',\n      position: 0,\n      previousTracks: [],\n      progressMs: 0,\n      status: STATUS.IDLE,\n      track: this.emptyTrack,\n      volume: parseVolume(props.initialVolume) || 1,\n    };\n\n    this.styles = getMergedStyles(props.styles);\n  }\n\n  // eslint-disable-next-line react/static-property-placement\n  static defaultProps = {\n    callback: () => undefined,\n    magnifySliderOnHover: false,\n    name: 'Spotify Web Player',\n    showSaveIcon: false,\n    syncExternalDeviceInterval: 5,\n    syncExternalDevice: false,\n  };\n\n  public async componentDidMount() {\n    this.isActive = true;\n    const { top = 0 } = this.ref.current?.getBoundingClientRect() || {};\n\n    this.updateState({\n      playerPosition: top > window.innerHeight / 2 ? 'bottom' : 'top',\n      status: STATUS.INITIALIZING,\n    });\n\n    if (!window.onSpotifyWebPlaybackSDKReady) {\n      window.onSpotifyWebPlaybackSDKReady = this.initializePlayer;\n    } else {\n      this.initializePlayer();\n    }\n\n    await loadSpotifyPlayer();\n  }\n\n  public async componentDidUpdate(previousProps: Props, previousState: State) {\n    const { currentDeviceId, deviceId, error, isInitializing, isPlaying, status, track } =\n      this.state;\n    const {\n      autoPlay,\n      callback,\n      offset,\n      play: playProp,\n      showSaveIcon,\n      syncExternalDevice,\n      token,\n      uris,\n    } = this.props;\n    const isReady = previousState.status !== STATUS.READY && status === STATUS.READY;\n    const changedURIs = Array.isArray(uris)\n      ? !isEqualArray(previousProps.uris, uris)\n      : previousProps.uris !== uris;\n    const playOptions = this.getPlayOptions(uris);\n\n    const canPlay = !!currentDeviceId && !!(playOptions.context_uri || playOptions.uris);\n    const shouldPlay = (changedURIs && isPlaying) || !!(isReady && (autoPlay || playProp));\n\n    if (canPlay && shouldPlay) {\n      await play(token, { deviceId: currentDeviceId, offset, ...playOptions });\n\n      /* istanbul ignore else */\n      if (!isPlaying) {\n        this.updateState({ isPlaying: true });\n      }\n\n      if (this.isExternalPlayer) {\n        this.syncTimeout = window.setTimeout(() => {\n          this.syncDevice();\n        }, 600);\n      }\n    } else if (changedURIs && !isPlaying) {\n      this.updateState({ needsUpdate: true });\n    }\n\n    if (previousState.status !== status) {\n      callback!({\n        ...this.state,\n        type: TYPE.STATUS,\n      });\n    }\n\n    if (previousState.currentDeviceId !== currentDeviceId && currentDeviceId) {\n      if (!isReady) {\n        callback!({\n          ...this.state,\n          type: TYPE.DEVICE,\n        });\n      }\n\n      await this.toggleSyncInterval(this.isExternalPlayer);\n      await this.updateSeekBar();\n    }\n\n    if (previousState.track.id !== track.id && track.id) {\n      callback!({\n        ...this.state,\n        type: TYPE.TRACK,\n      });\n\n      if (showSaveIcon) {\n        this.updateState({ isSaved: false });\n      }\n    }\n\n    if (previousState.isPlaying !== isPlaying) {\n      this.toggleProgressBar();\n      await this.toggleSyncInterval(this.isExternalPlayer);\n\n      callback!({\n        ...this.state,\n        type: TYPE.PLAYER,\n      });\n    }\n\n    if (token && previousProps.token !== token) {\n      this.hasNewToken = true;\n\n      if (!isInitializing) {\n        this.initializePlayer();\n      } else {\n        this.hasNewToken = true;\n      }\n    }\n\n    if (previousProps.play !== playProp && playProp !== isPlaying) {\n      await this.togglePlay(!track.id);\n    }\n\n    if (previousProps.offset !== offset) {\n      await this.toggleOffset();\n    }\n\n    if (previousState.isInitializing && !isInitializing) {\n      if (error === 'authentication_error' && this.hasNewToken) {\n        this.hasNewToken = false;\n        this.initializePlayer();\n      }\n\n      if (syncExternalDevice && !uris) {\n        const player: SpotifyPlayerStatus = await getPlaybackState(token);\n\n        /* istanbul ignore else */\n        if (player && player.is_playing && player.device.id !== deviceId) {\n          this.setExternalDevice(player.device.id);\n        }\n      }\n    }\n  }\n\n  public componentWillUnmount() {\n    this.isActive = false;\n\n    /* istanbul ignore else */\n    if (this.player) {\n      this.player.disconnect();\n    }\n\n    clearInterval(this.playerSyncInterval);\n    clearInterval(this.playerProgressInterval);\n    clearTimeout(this.syncTimeout);\n  }\n\n  private get isExternalPlayer(): boolean {\n    const { currentDeviceId, deviceId, status } = this.state;\n\n    return (currentDeviceId && currentDeviceId !== deviceId) || status === STATUS.UNSUPPORTED;\n  }\n\n  private handleChangeRange = async (position: number) => {\n    const { track } = this.state;\n    const { callback, token } = this.props;\n    let progress = 0;\n\n    try {\n      const percentage = position / 100;\n\n      if (this.isExternalPlayer) {\n        progress = Math.round(track.durationMs * percentage);\n        await seek(token, progress);\n\n        this.updateState({\n          position,\n          progressMs: progress,\n        });\n      } else if (this.player) {\n        const state = (await this.player.getCurrentState()) as WebPlaybackState;\n\n        if (state) {\n          progress = Math.round(state.track_window.current_track.duration_ms * percentage);\n          await this.player.seek(progress);\n\n          this.updateState({\n            position,\n            progressMs: progress,\n          });\n        } else {\n          this.updateState({ position: 0 });\n        }\n      }\n\n      if (callback) {\n        callback({\n          ...this.state,\n          type: TYPE.PROGRESS,\n        });\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleClickTogglePlay = async () => {\n    const { isActive } = this.state;\n\n    try {\n      await this.togglePlay(!this.isExternalPlayer && !isActive);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleClickPrevious = async () => {\n    try {\n      /* istanbul ignore else */\n      if (this.isExternalPlayer) {\n        const { token } = this.props;\n\n        await previous(token);\n        this.syncTimeout = window.setTimeout(() => {\n          this.syncDevice();\n        }, 300);\n      } else if (this.player) {\n        await this.player.previousTrack();\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleClickNext = async () => {\n    try {\n      /* istanbul ignore else */\n      if (this.isExternalPlayer) {\n        const { token } = this.props;\n\n        await next(token);\n        this.syncTimeout = window.setTimeout(() => {\n          this.syncDevice();\n        }, 300);\n      } else if (this.player) {\n        await this.player.nextTrack();\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleClickDevice = async (deviceId: string) => {\n    const { isUnsupported } = this.state;\n    const { autoPlay, persistDeviceSelection, token } = this.props;\n\n    this.updateState({ currentDeviceId: deviceId });\n\n    try {\n      await setDevice(token, deviceId);\n\n      /* istanbul ignore else */\n      if (persistDeviceSelection) {\n        sessionStorage.setItem('rswpDeviceId', deviceId);\n      }\n\n      /* istanbul ignore else */\n      if (isUnsupported) {\n        await this.syncDevice();\n\n        const player: SpotifyPlayerStatus = await getPlaybackState(token);\n\n        if (player && !player.is_playing && autoPlay) {\n          await this.togglePlay(true);\n        }\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handleFavoriteStatusChange = (status: boolean) => {\n    const { isSaved } = this.state;\n    const { callback } = this.props;\n\n    this.updateState({ isSaved: status });\n\n    /* istanbul ignore else */\n    if (isSaved !== status) {\n      callback!({\n        ...{\n          ...this.state,\n          isSaved: status,\n        },\n        type: TYPE.FAVORITE,\n      });\n    }\n  };\n\n  private handlePlayerErrors = async (type: string, message: string) => {\n    const { status } = this.state;\n    const isPlaybackError = type === 'playback_error';\n    const isInitializationError = type === 'initialization_error';\n    let nextStatus = status;\n    let devices: SpotifyDevice[] = [];\n\n    if (this.player && !isPlaybackError) {\n      await this.player.disconnect();\n    }\n\n    if (isInitializationError) {\n      nextStatus = STATUS.UNSUPPORTED;\n\n      const { token } = this.props;\n\n      ({ devices = [] } = await getDevices(token));\n    }\n\n    if (!isInitializationError && !isPlaybackError) {\n      nextStatus = STATUS.ERROR;\n    }\n\n    this.updateState({\n      devices,\n      error: message,\n      errorType: type,\n      isInitializing: false,\n      isUnsupported: isInitializationError,\n      status: nextStatus,\n    });\n  };\n\n  private handlePlayerStateChanges = async (state: WebPlaybackState | null) => {\n    try {\n      /* istanbul ignore else */\n      if (state) {\n        const {\n          paused,\n          position,\n          track_window: {\n            current_track: { album, artists, duration_ms, id, name, uri },\n            next_tracks,\n            previous_tracks,\n          },\n        } = state;\n\n        const isPlaying = !paused;\n        const volume = await this.player!.getVolume();\n        const track = {\n          artists: artists.map(d => d.name).join(', '),\n          durationMs: duration_ms,\n          id,\n          image: this.setAlbumImage(album),\n          name,\n          uri,\n        };\n        let trackState;\n\n        if (position === 0) {\n          trackState = {\n            nextTracks: next_tracks,\n            position: 0,\n            previousTracks: previous_tracks,\n            track,\n          };\n        }\n\n        this.updateState({\n          error: '',\n          errorType: '',\n          isActive: true,\n          isPlaying,\n          progressMs: position,\n          volume: round(volume),\n          ...trackState,\n        });\n      } else if (this.isExternalPlayer) {\n        await this.syncDevice();\n      } else {\n        this.updateState({\n          isActive: false,\n          isPlaying: false,\n          nextTracks: [],\n          position: 0,\n          previousTracks: [],\n          track: {\n            artists: '',\n            durationMs: 0,\n            id: '',\n            image: '',\n            name: '',\n            uri: '',\n          },\n        });\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private handlePlayerStatus = async ({ device_id }: WebPlaybackReady) => {\n    const { currentDeviceId, devices } = await this.initializeDevices(device_id);\n\n    this.updateState({\n      currentDeviceId,\n      deviceId: device_id,\n      devices,\n      isInitializing: false,\n      status: device_id ? STATUS.READY : STATUS.IDLE,\n    });\n  };\n\n  private handleToggleMagnify = () => {\n    const { magnifySliderOnHover } = this.props;\n\n    if (magnifySliderOnHover) {\n      this.updateState((previousState: State) => {\n        return { isMagnified: !previousState.isMagnified };\n      });\n    }\n  };\n\n  private async initializeDevices(id: string) {\n    const { persistDeviceSelection, token } = this.props;\n    const { devices } = await getDevices(token);\n    let currentDeviceId = id;\n\n    if (persistDeviceSelection) {\n      const savedDeviceId = sessionStorage.getItem('rswpDeviceId');\n\n      /* istanbul ignore else */\n      if (!savedDeviceId || !devices.some((d: SpotifyDevice) => d.id === savedDeviceId)) {\n        sessionStorage.setItem('rswpDeviceId', currentDeviceId);\n      } else {\n        currentDeviceId = savedDeviceId;\n      }\n    }\n\n    return { currentDeviceId, devices };\n  }\n\n  private initializePlayer = () => {\n    const { volume } = this.state;\n    const { name, token } = this.props;\n\n    this.updateState({ isInitializing: true });\n\n    // @ts-ignore\n    this.player = new window.Spotify.Player({\n      getOAuthToken: (callback: SpotifyPlayerCallback) => {\n        callback(token);\n      },\n      name,\n      volume,\n    }) as WebPlaybackPlayer;\n\n    this.player.addListener('ready', this.handlePlayerStatus);\n    this.player.addListener('not_ready', this.handlePlayerStatus);\n    this.player.addListener('player_state_changed', this.handlePlayerStateChanges);\n    this.player.addListener('initialization_error', (error: WebPlaybackError) =>\n      this.handlePlayerErrors('initialization_error', error.message),\n    );\n    this.player.addListener('authentication_error', (error: WebPlaybackError) =>\n      this.handlePlayerErrors('authentication_error', error.message),\n    );\n    this.player.addListener('account_error', (error: WebPlaybackError) =>\n      this.handlePlayerErrors('account_error', error.message),\n    );\n    this.player.addListener('playback_error', (error: WebPlaybackError) =>\n      this.handlePlayerErrors('playback_error', error.message),\n    );\n\n    this.player.connect();\n  };\n\n  private setAlbumImage = (album: WebPlaybackAlbum): string => {\n    const width = Math.min(...album.images.map(d => d.width));\n    const thumb: WebPlaybackImage =\n      album.images.find(d => d.width === width) || ({} as WebPlaybackImage);\n\n    return thumb.url;\n  };\n\n  private setExternalDevice = (id: string) => {\n    this.updateState({ currentDeviceId: id, isPlaying: true });\n  };\n\n  private setVolume = async (volume: number) => {\n    const { token } = this.props;\n\n    /* istanbul ignore else */\n    if (this.isExternalPlayer) {\n      await setVolume(token, Math.round(volume * 100));\n      await this.syncDevice();\n    } else if (this.player) {\n      await this.player.setVolume(volume);\n    }\n\n    this.updateState({ volume });\n  };\n\n  private syncDevice = async () => {\n    if (!this.isActive) {\n      return;\n    }\n\n    const { deviceId } = this.state;\n    const { token } = this.props;\n\n    try {\n      const player: SpotifyPlayerStatus = await getPlaybackState(token);\n      let track = this.emptyTrack;\n\n      if (!player) {\n        throw new Error('No player');\n      }\n\n      /* istanbul ignore else */\n      if (player.item) {\n        track = {\n          artists: player.item.artists.map(d => d.name).join(', '),\n          durationMs: player.item.duration_ms,\n          id: player.item.id,\n          image: this.setAlbumImage(player.item.album),\n          name: player.item.name,\n          uri: player.item.uri,\n        };\n      }\n\n      this.updateState({\n        error: '',\n        errorType: '',\n        isActive: true,\n        isPlaying: player.is_playing,\n        nextTracks: [],\n        previousTracks: [],\n        progressMs: player.item ? player.progress_ms : 0,\n        status: STATUS.READY,\n        track,\n        volume: parseVolume(player.device.volume_percent),\n      });\n    } catch (error) {\n      const state = {\n        isActive: false,\n        isPlaying: false,\n        position: 0,\n        track: this.emptyTrack,\n      };\n\n      if (deviceId) {\n        this.updateState({\n          currentDeviceId: deviceId,\n          ...state,\n        });\n\n        return;\n      }\n\n      this.updateState({\n        error: error.message,\n        errorType: 'player_status',\n        status: STATUS.ERROR,\n        ...state,\n      });\n    }\n  };\n\n  private async toggleSyncInterval(shouldSync: boolean) {\n    const { syncExternalDeviceInterval } = this.props;\n\n    try {\n      if (this.isExternalPlayer && shouldSync && !this.playerSyncInterval) {\n        await this.syncDevice();\n\n        clearInterval(this.playerSyncInterval);\n        this.playerSyncInterval = window.setInterval(\n          this.syncDevice,\n          syncExternalDeviceInterval! * 1000,\n        );\n      }\n\n      if ((!shouldSync || !this.isExternalPlayer) && this.playerSyncInterval) {\n        clearInterval(this.playerSyncInterval);\n        this.playerSyncInterval = undefined;\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  }\n\n  private toggleProgressBar() {\n    const { isPlaying } = this.state;\n\n    /* istanbul ignore else */\n    if (isPlaying) {\n      /* istanbul ignore else */\n      if (!this.playerProgressInterval) {\n        this.playerProgressInterval = window.setInterval(\n          this.updateSeekBar,\n          this.seekUpdateInterval,\n        );\n      }\n    } else if (this.playerProgressInterval) {\n      clearInterval(this.playerProgressInterval);\n      this.playerProgressInterval = undefined;\n    }\n  }\n\n  private toggleOffset = async () => {\n    const { currentDeviceId, isPlaying } = this.state;\n    const { offset, token, uris } = this.props;\n\n    if (isPlaying && typeof offset === 'number' && Array.isArray(uris)) {\n      await play(token, { deviceId: currentDeviceId, offset, uris });\n    }\n  };\n\n  private togglePlay = async (init = false) => {\n    const { currentDeviceId, isPlaying, needsUpdate } = this.state;\n    const { offset, token, uris } = this.props;\n    const shouldInitialize = init || needsUpdate;\n    const playOptions = this.getPlayOptions(uris);\n\n    try {\n      /* istanbul ignore else */\n      if (this.isExternalPlayer) {\n        if (!isPlaying) {\n          await play(token, {\n            deviceId: currentDeviceId,\n            offset,\n            ...(shouldInitialize ? playOptions : undefined),\n          });\n        } else {\n          await pause(token);\n\n          this.updateState({ isPlaying: false });\n        }\n\n        this.syncTimeout = window.setTimeout(() => {\n          this.syncDevice();\n        }, 300);\n      } else if (this.player) {\n        const playerState = await this.player.getCurrentState();\n\n        // eslint-disable-next-line unicorn/prefer-ternary\n        if (\n          (!playerState && !!(playOptions.context_uri || playOptions.uris)) ||\n          (shouldInitialize && playerState && playerState.paused)\n        ) {\n          await play(token, {\n            deviceId: currentDeviceId,\n            offset,\n            ...(shouldInitialize ? playOptions : undefined),\n          });\n        } else {\n          await this.player.togglePlay();\n        }\n      }\n\n      if (needsUpdate) {\n        this.updateState({ needsUpdate: false });\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private updateSeekBar = async () => {\n    if (!this.isActive) {\n      return;\n    }\n\n    const { progressMs, track } = this.state;\n\n    try {\n      /* istanbul ignore else */\n      if (this.isExternalPlayer) {\n        let position = progressMs / track.durationMs;\n\n        position = Number(((Number.isFinite(position) ? position : 0) * 100).toFixed(1));\n\n        this.updateState({\n          position,\n          progressMs: progressMs + this.seekUpdateInterval,\n        });\n      } else if (this.player) {\n        const state = (await this.player.getCurrentState()) as WebPlaybackState;\n\n        /* istanbul ignore else */\n        if (state) {\n          const progress = state.position;\n          const position = Number(\n            ((progress / state.track_window.current_track.duration_ms) * 100).toFixed(1),\n          );\n\n          this.updateState({\n            position,\n            progressMs: progress + this.seekUpdateInterval,\n          });\n        }\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  };\n\n  private updateState = (state = {}) => {\n    if (!this.isActive) {\n      return;\n    }\n\n    this.setState(state);\n  };\n\n  public render() {\n    const {\n      currentDeviceId,\n      deviceId,\n      devices,\n      error,\n      errorType,\n      isActive,\n      isMagnified,\n      isPlaying,\n      isUnsupported,\n      nextTracks,\n      playerPosition,\n      position,\n      previousTracks,\n      status,\n      track,\n      volume,\n    } = this.state;\n    const { name, showSaveIcon, token, updateSavedStatus } = this.props;\n    const isReady = [STATUS.READY, STATUS.UNSUPPORTED].indexOf(status) >= 0;\n    const isPlaybackError = errorType === 'playback_error';\n\n    let output = <Loader styles={this.styles!} />;\n    let info;\n\n    if (isPlaybackError) {\n      info = <p>{error}</p>;\n    }\n\n    if (isReady) {\n      /* istanbul ignore else */\n      if (!info) {\n        info = (\n          <Info\n            isActive={isActive}\n            onFavoriteStatusChange={this.handleFavoriteStatusChange}\n            showSaveIcon={showSaveIcon!}\n            styles={this.styles}\n            token={token}\n            track={track}\n            updateSavedStatus={updateSavedStatus}\n          />\n        );\n      }\n\n      output = (\n        <>\n          <div>{info}</div>\n          <Controls\n            isExternalDevice={this.isExternalPlayer}\n            isPlaying={isPlaying}\n            nextTracks={nextTracks}\n            onClickNext={this.handleClickNext}\n            onClickPrevious={this.handleClickPrevious}\n            onClickTogglePlay={this.handleClickTogglePlay}\n            previousTracks={previousTracks}\n            styles={this.styles}\n          />\n          <Actions\n            currentDeviceId={currentDeviceId}\n            deviceId={deviceId}\n            devices={devices}\n            isDevicesOpen={isUnsupported && !deviceId}\n            onClickDevice={this.handleClickDevice}\n            playerPosition={playerPosition}\n            setVolume={this.setVolume}\n            styles={this.styles}\n            volume={volume}\n          />\n        </>\n      );\n    }\n\n    if (status === STATUS.ERROR) {\n      output = (\n        <ErrorMessage styles={this.styles}>\n          {name}: {error}\n        </ErrorMessage>\n      );\n    }\n\n    return (\n      <Player ref={this.ref} styles={this.styles}>\n        {isReady && (\n          <Slider\n            isMagnified={isMagnified}\n            onChangeRange={this.handleChangeRange}\n            onToggleMagnify={this.handleToggleMagnify}\n            position={position}\n            styles={this.styles!}\n          />\n        )}\n        <Content styles={this.styles}>{output}</Content>\n      </Player>\n    );\n  }\n}\n\nexport { STATUS, TYPE };\n\nexport * from './types';\n\nexport default SpotifyWebPlayer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}